'use strict';

var Hmv = require('header-multi-value-ebay');
var XhrTransportUtils = require('trooba-xhr-transport').Utils;

module.exports.options2Url = XhrTransportUtils.options2Url;

module.exports.options2ChannelUrl = function options2ChannelUrl(options) {
    return (options.protocol || 'http:') + '//' +
        options.hostname +
        (options.port ? (':' + options.port) : '');
};

module.exports.once = XhrTransportUtils.once;
module.exports.unslash = XhrTransportUtils.unslash;
module.exports.mixin = XhrTransportUtils.mixin;
module.exports.deserializeResponseHeaders = XhrTransportUtils.deserializeResponseHeaders;

function mixinMvHeaders(srcHeaders, targetHeaders, mvHeadersRepo) {
    mvHeadersRepo = mvHeadersRepo || {};
    targetHeaders = targetHeaders || {};
    /*
     * Merges source headers to target headers
     *  if header name is in mvHeadersRepo then it is multi-value and we need to merge
     *    if source and target are not empty, we need to parse each and merge and toString to target
     *    if source is empty, target should be presevred
     *    if target is empty, should be assigned to target
     *  otherwise - just assign source to target (override) if not empty or preserve target
    */

    // clean up empty targets
    Object.keys(targetHeaders).forEach(function forEach(key) {
        if (!targetHeaders[key]) {
            delete targetHeaders[key];
        }
    });
    // mixin
    return srcHeaders ? Object.keys(srcHeaders).reduce(function reduce(target, key) {
        var srcHeader = srcHeaders[key];
        var targetHeader = target[key];
        if (targetHeader && srcHeader && mvHeadersRepo[key]) {
            var targetMv = Hmv.parse(targetHeader);
            var srcMv = Hmv.parse(srcHeader);
            srcMv.names().forEach(function forEach(name) {
                targetMv.set(name, srcMv.get(name));
            });
            targetHeader = targetMv.toString();
            target[key] = targetHeader;
        }
        else {
            target[key] = srcHeader || targetHeader;
        }
        // clean up empty values
        if (!target[key]) {
            delete target[key];
        }
        return target;
    }, targetHeaders) : targetHeaders;
}

module.exports.mixinMvHeaders = mixinMvHeaders;
