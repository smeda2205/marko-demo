'use strict';

var zlib = require('zlib');

var logger = require('logging-inc').logger(
    'service-instruments-ebay/compress');

module.exports = function gzip(pipe) {
    pipe.on('response', function onResponse(response, next) {
        logger.info('compress handler', pipe.context.clientId);

        var buffer = response.body;
        var encoding = response.headers && response.headers['content-encoding'];

        if (buffer) {
            //encoding = 'gzip';
            if (encoding === 'gzip') {
                zlib.gunzip(buffer, onUnzip);
                return;
            }
            else if (encoding === 'deflate') {
                zlib.inflate(buffer, onUnzip);
                return;
            }
        }

        next();

        function onUnzip(err, data) {
            if (data) {
                response.body = data.toString();
                if (/application\/json/.test(response.headers['content-type'])) {
                    response.body = tryParse(response.body);
                }
                return next();
            }

            if (err) {
                err.response = response;
            }

            pipe.throw(err);
        }
    });
};

function tryParse(data) {
    try {
        return JSON.parse(data);
    } catch (err) {
        logger.error('Failed to parse unzipped response body', err);
        return data;
    }
}
