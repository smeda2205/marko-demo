'use strict';

var logger = require('logging-inc').logger('service-instruments-ebay/cookies');

var RuntimeError = require('./lib/errors').RuntimeError;

module.exports = function cookies(pipe) {
    var clientId = pipe.context.clientId;
    var context = pipe.context;
    var cookiesConfig;

    pipe.on('request', function onRequest(request, next) {
        logger.info('cookies handler', clientId);
        var options = request;
        if (!options.cookies) {
            // skip it
            return next();
        }

        cookiesConfig = options.cookies;
        if (context.app && context.app.request) {
            options.headers = options.headers || {};
            // include cookies from request?
            if (cookiesConfig.request && context.app.request.headers.cookie) {
                options.headers.cookie = context.app.request.headers.cookie;
            }
        }
        else {
            logger.error(new RuntimeError('Failed to include cookies to service request due ot missing request in the requestContext'));
        }

        next();
    });

    pipe.on('response', function onResponse(response, next) {
        if (cookiesConfig && context.app) {
            if (context.app.response && context.app.response.headersSent) {
                logger.warn('Cannot set cookies from the service as the headers were already sent');
                // TODO: implement js header set or simply set to responseContext object using ebay coookies
            }
            else {
                var cookies = response.headers && response.headers['Set-Cookie'];
                if (cookies) {
                    // propagate it to server response
                    context.app.response.set('Set-Cookie', cookies);
                }
            }
        }

        next();
    });
};
