var chai = require('chai'),
    assert = chai.assert,
    http = require('http'),
    request = require('request'),
    express = require('express'),
    servicecore = require('servicecore'),
    cookiesEbay = require('cookies-ebay/middleware'),
    commons = require('commons-ebay/middleware'),
    locale = require('locale-ebay'),
    globalHeader = require('../middleware'),
    PDSHelper = require('../lib/pds-helper');

var app, server, port;
var testCookies = {};
app = express();
app.use(commons());
app.use(servicecore());
app.use(cookiesEbay());
app.use(function testCookieModifier(req, res, next) {
    (Object.keys(testCookies) || []).forEach(function (name) {
        req.ebay.cookies.setCookieValue(name, testCookies[name]);
    });
    next();
});
app.use(locale());
app.use(globalHeader());
app.use(require('pds-ebay').middleware());
app.get('/getGuessCart/:count', function (req, res, next) {

    var count = req.params.count;
    //set guess cart to 20
    req.ebay.pds.setAttribute("COUNT_ITEMS_IN_SHOP_CART_P", count);
    req.ebay.pds.flush();

    PDSHelper.pdsProcessor(req, function (err, attributes) {

        res.status(200).send(attributes);
    });

});


describe('global-header-ebay/lib/pdsHelper/pdsProcessor', function () {


    beforeEach(function (done) {
        try {
            server = http.createServer(app);
            server.on('listening', function () {
                port = server.address().port;
                console.log('Listening on port ' + port);
                done();
            });

            server.listen();
        } catch (e) {
            console.error('ERROR: OPOPOP ', (e.stack || e));
            done(e);
        }

    });
    after(function () {
        server.close();
    });

    it('pdsProcssor should return 89 when set it to 89 ', function (next)  {
        var cartCount =89;

        request('http://localhost:' + port + '/getGuessCart/'+cartCount, function (err, response, body) {
            if (err) {
                return next(err);
            }
            assert.ok(body);
            assert.equal(body,'{"cart":"'+cartCount+'"}');
            next();
        });

    });

});
