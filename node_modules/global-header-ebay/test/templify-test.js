'use strict';

var assert = require('assert');
var chai = require('chai');
chai.config.includeStack = true;
require('chai').should();
var nodePath = require('path');
var fs = require('fs');

describe('global-header-ebay/templify', function () {

    beforeEach(function (done) {
        done();
    });

    it('should templify a header correctly', function (done) {
        var templify = require('../lib/templify');
        var html = fs.readFileSync(nodePath.join(__dirname, 'header.html'), 'utf8');
        templify.header(html, function (err, template) {
            if (err) {
                return done(err);
            }
            assert.ok(template.render);
            done();
        });
    });

    it('should templify an AMP header with application id', function (done) {
        var templify = require('../lib/templify');
        var html = fs.readFileSync(nodePath.join(__dirname, 'header-amp.html'), 'utf8');
        templify.header(html, function (err, template) {
            if (err) {
                return done(err);
            }
            assert.ok(template.render);
            template.render({modifiedApplicationPageId: 'p2345678.'}, function (err, html) {
                chai.assert.include(html, '_trksid=p2345678.m4969.l4280" data-amp-repla');
                chai.assert.include(html, 'value="p2345678.m4969.l1313"');
                done();
            });
        });
    });

    it('should templify an AMP header without application id', function (done) {
        var templify = require('../lib/templify');
        var html = fs.readFileSync(nodePath.join(__dirname, 'header-amp.html'), 'utf8');
        templify.header(html, function (err, template) {
            if (err) {
                return done(err);
            }
            assert.ok(template.render);
            template.render({}, function (err, html) {
                chai.assert.include(html, 'data-amp-addparams="&amp;_trkparms=gclientid%3DCLIENT_ID(ebay)&amp;_trksid=m4969.l4280"');
                done();
            });
        });
    });

    it('should templify an AMP footer with application id', function (done) {
        var templify = require('../lib/templify');
        var html = fs.readFileSync(nodePath.join(__dirname, 'footer-amp.html'), 'utf8');
        templify.footer(html, function (err, template) {
            if (err) {
                return done(err);
            }
            assert.ok(template.render);
            template.render({modifiedApplicationPageId: 'p2345678.'}, function (err, html) {
                chai.assert.include(html, '_trksid=p2345678.m4970.l6836" data-amp-repla');
                done();
            });
        });
    });

    it('should templify an AMP header without application id', function (done) {
        var templify = require('../lib/templify');
        var html = fs.readFileSync(nodePath.join(__dirname, 'footer-amp.html'), 'utf8');
        templify.header(html, function (err, template) {
            if (err) {
                return done(err);
            }
            assert.ok(template.render);
            template.render({}, function (err, html) {
                chai.assert.include(html, 'data-amp-addparams="&amp;_trkparms=gclientid%3DCLIENT_ID(ebay)&amp;_trksid=m4970.l6836"');
                done();
            });
        });
    });

    it('should templify a footer correctly', function (done) {
        var templify = require('../lib/templify');
        var html = fs.readFileSync(nodePath.join(__dirname, 'footer.html'), 'utf8');
        templify.header(html, function (err, template) {
            if (err) {
                return done(err);
            }
            assert.ok(template.render);
            done();
        });
    });
});
