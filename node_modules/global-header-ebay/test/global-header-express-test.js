'use strict';

// require("time-require");

var chai = require('chai'),
    assert = chai.assert,
    cal = require('cal'),
    http = require('http'),
    request = require('request'),
    express = require('express'),
    servicecore = require('servicecore'),
    cookiesEbay = require('cookies-ebay/middleware'),
    commons = require('commons-ebay/middleware'),
    locale = require('locale-ebay'),
    globalHeader = require('../middleware'),
    marko = require('marko'),
    viewEngine = require('view-engine');

var dust = require('dustjs-linkedin');
require('../dust').registerHelpers(dust);

cal.setDefaultWriteStream('console');

var app;
var server;
var port;

viewEngine.configure({
    engines: {
        "view-engine-dust": {
            "extensions": ["dust"]
        }
    }
});

var raptorTemplate = marko.load(require.resolve('./marko/header-full.marko'));
var dustTemplate = viewEngine.load(require.resolve('./dust/header-full.dust'));

app = express();
app.use(commons());
app.use(servicecore());
app.use(cookiesEbay());
app.use(locale());
app.use(globalHeader());

app.get('/marko', function (req, res, next) {
    res.setHeader('Content-Type', 'text/html; charset=utf-8');

    raptorTemplate.render({}, res);
});

app.get('/dust', function (req, res, next) {
    res.setHeader('Content-Type', 'text/html; charset=utf-8');

    dustTemplate.render({}, res);
});

app.use(function (err, req, res, next) {
    console.error(err.stack);
    res.send(500, 'Server error');
});

describe('GlobalHeader', function () {

    before(function (done) {
        try {
            server = http.createServer(app);
            server.on('listening', function () {
                port = server.address().port;
                console.log('Listening on port ' + port);
                done();
            });

            server.listen();
        } catch (e) {
            console.error('ERROR: ', (e.stack || e));
            done(e);
        }

    });

    after(function () {
        server.close();
    });

    it('marko: header: FULL', function (next) {


        request('http://localhost:' + port + '/marko', function (err, response, body) {
            if (err) {
                return next(err);
            }
            assert.ok(body);
            assert.include(body, 'www.qa.ebay.com');
            assert.include(body, '<link');
            assert.include(body, '<script');
            next();
        });
    });

    it('dust: header: FULL', function (next) {


        request('http://localhost:' + port + '/dust', function (err, response, body) {
            if (err) {
                return next(err);
            }
            assert.ok(body);
            assert.include(body, 'www.qa.ebay.com');
            assert.include(body, '<link');
            assert.include(body, '<script');
            next();
        });
    });

});
