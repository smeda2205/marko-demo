'use strict';

var assert = require('assert');

var Footer = require('../lib/Footer');

describe(__filename + ' Test\n', function() {
    it('Footer empty options Test \n', function() {
        var footerResponse = {
            htmlTemplate: {
                render: function() {

                }
            }
        };
        var footer = new Footer(footerResponse);
        var options = {};
        var context = {
            beginAsync: function () {
                return {
                    write: function () {},
                    end: function () {}
                };
            }
        };
        footer.render(options, context);
        assert.ok(context);
        assert.ok(options);
    });
    it('Footer with options Test \n', function() {
        var footerResponse = {
            htmlTemplate: {
                render: function() {

                }
            }
        };
        var footer = new Footer(footerResponse);
        var options = {
            "var":"amp",
            "footerLayout":"MIN",
            "slot":"amp-slot",
            "ampForm":"true",
            "applicationPageId":"2376289",
            "app":"NODE",
            "pool":"qa.ebay.com",
            "signedIn":"0",
            "userId":"",
            "firstName":"",
            "siteId":0,
            "localeCookie":"US",
            "language":"en-US",
            "pageId":"2487217",
            "human":false,
            "cartCount":0,
            "host":"www.cse1.dev.qa.ebay.com"
        };
        var context = {
            beginAsync: function () {
                return {
                    write: function () {},
                    end: function () {}
                };
            }
        };
        footer.render(options, context);
        assert.ok(options.applicationPageId);
        assert.ok(options.var);
        assert.equal(options.applicationPageId, "2376289");
        assert.equal(options.var, "amp");

    });
    it('Footer should not crash node when render fails', function (done) {
        var footerResponse = {
            htmlTemplate: {
                render: function() {
                    throw new Error('render boom');
                }
            }
        };
        var footer = new Footer(footerResponse);
        var options = {
            "var":"amp",
            "footerLayout":"MIN",
            "slot":"amp-slot",
            "ampForm":"true",
            "applicationPageId":"2376289",
        };
        var context = {
            beginAsync: function () {
                return {
                    write: function () {},
                    end: function end(err) {
                        assert.ok(err);
                        assert.equal('render boom', err.message);
                        done();
                    }
                };
            }
        };
        footer.render(options, context);
    });

});
