'use strict';

var util = require('util');
var Transform = require('stream').Transform;
var debug = require('debug')('streams-ebay:multipart-stream');

var logger = require('logging-inc').logger('multipart-stream');

var MultipartStream = module.exports.MultipartStream = function MultipartStream() {
    Transform.call(this);
};

util.inherits(MultipartStream, Transform);

MultipartStream.prototype._transform = function(chunk, encoding, callback) {
    chunk = chunk ? chunk.toString().trim() : '';
    var multiChunks = chunk ? tryParse(chunk) : undefined;
    if (multiChunks) {
        this.emit((multiChunks instanceof Error ?
            'error' :
            'data'
        ), multiChunks);
    }
    callback();
};

function tryParse(chunk) {
    try {
        return JSON.parse(chunk);
    } catch (err) {
        debug('Unable to parse Chunk, Error : ' + err + ', chunk: ' + chunk);
        return new Error('Unable to parse chunk ' + chunk);
    }
}
