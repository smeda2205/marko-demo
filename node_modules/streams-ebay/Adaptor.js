'use strict';

var EventEmitter = require('events').EventEmitter;
var util = require('util');

function Adaptor() {
    EventEmitter.call(this);
}

util.inherits(Adaptor, EventEmitter);


Adaptor.prototype.handle = function handle() {
    var self = this;
    var onceEnd = function _onceEnd() {
        onceEnd = function noop() {};
        self.emit('end');
    };

    return function handler(err, response) {
        var name;
        var body;
        var data = {};
    
        if (err) {
            self.emit('error', err);
            return onceEnd();
        }
        body = response && response.body;
        if (body) {
            name = body.name || body.id;
            if (name === 'end' || name === 'end-event') {
                return onceEnd();
            }
            data[name || 'unknown'] = body.data || body;
            return self.emit('data', data);
        }

        return onceEnd();
    };

};

module.exports.Adaptor = Adaptor;
