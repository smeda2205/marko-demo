'use strict';

var debug = require('debug');
var utils = require('./utils/index');
var testAapp;
var punch = require('httpunch');
var svr;
var request = require('supertest');

var streams = require('../index');
var chunked = streams.ChunkedStream;
var eventStream = streams.EventStream;

var assert = require('assert');
var nock;
describe(__filename, function() {


    it('Should pass this test', function(done) {
        testAapp = utils.testAppEvents();
        svr = testAapp.listen(2222, done);
        this.timeout(2000);

        var stream = new chunked();
        nock = require('nock');
        var mock = nock('http://localhost:2222').get('/304').reply(304, 'Not Modified');
        var options = {
            url: 'http://localhost:2222/304'
        };
        var req = punch.get(options, function(err, result) {
            nock.restore();
            assert.equal(result.body.toString(), 'Not Modified');
            done();
            svr.close();
        });

        var eventParts = new eventStream();
        var parts = [];
        stream.pipe(eventParts);
        req.pipe(stream);

        req.on('response', function(res) {
            var chunks = [];
            res.on('data', function(chunk) {
                chunks.push(chunk.toString());
            });
            res.on('end', function() {
                res.body = chunks.join('').toString();
            });
        });
    });

});