'use strict';

var debug = require('debug');
var utils = require('./utils/index');
var testAapp = require('./utils/index').testAppMultipartChunking();
var punch = require('httpunch');
var svr;
var request = require('supertest');

var streams = require('../index');
var chunked = streams.ChunkedStream;
var multipartStream = streams.MultipartStream;

var assert = require('assert');

describe(__filename, function() {

    beforeEach(function(done) {
        utils.cleanup(done);
    });

    before(function(done) {
        svr = testAapp.listen(8888, done);
    });

    after(function() {
        svr.close();
    });

    it('Should parse weirdly chunked responses', function(done) {
        debug('booting %s', __filename);
        this.timeout(10000);
        var stream = new chunked();

        var req = punch.get('http://localhost:8888');
        var eventParts = new multipartStream();
        var parts = [];
        stream.pipe(eventParts);
        req.pipe(stream);

        eventParts.on('data', function(part) {
            parts.push(part);
        });

        eventParts.once('finish', function() {
            assert.equal(2, parts.length);
            done();
        });
    });

});