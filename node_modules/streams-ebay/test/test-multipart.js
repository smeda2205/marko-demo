/*jshint esversion: 6 */
'use strict';

var Assert = require('assert');
var express = require('express');
var expected = require('./fixtures/multipart-chunks.js');
var MultipartStream = require('../lib/multipart-stream').MultipartStream;
var ChunkedStream = require('../lib/chunked-stream').ChunkedStream;

describe(__filename, function () {

    it('should receive parts', function (done) {
        var chunks = [];
        var cstream = new ChunkedStream();
        var stream = new MultipartStream();

        cstream.pipe(stream);

        stream.on('data', data => {
            chunks.push(data);
        });
        stream.on('end', () => {
            Assert.equal(expected.length, chunks.length);
            Assert.deepEqual(expected, chunks);
            done();
        });
        stream.on('error', done);

        expected.forEach(chunk => {
            cstream.write(JSON.stringify(chunk));
            cstream.write('\n\n');
        });
        cstream.end();

    });
    it('should recieve unable to parse chunk error', function (done) {
        var chunks = [];
        var cstream = new ChunkedStream();
        var stream = new MultipartStream();

        cstream.pipe(stream);

        stream.on('error', function(err) {
            Assert(err instanceof Error);
            done();
        });
        cstream.write('{"foo":"123423"');
        cstream.write('\n\n');
        cstream.end();
    });
});