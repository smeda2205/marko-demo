<?xml version="1.0" encoding="UTF-8"?>

<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

    <xsl:template match="ProfileRequest" mode="memory">
        <form action="profile" id="profile" method="get">
            <h2>Memory dump request</h2>
            <h5 class="warn">Note: Taking memory dump may freeze the worker for the time needed to write dump. Make sure you take the box out of traffic in production.</h5>
            <h5 class="warn">Note: You may also consider restarting the app once you are done with heap profiling.</h5>
            <xsl:text>Number of dumps: </xsl:text>
            <select class="btn" name="dumps">
                <option value="2">2 dumps</option>
                <option value="3">3 dumps</option>
                <option value="4">4 dumps</option>
            </select>
            <br />
            <div>Pick a worker to dump: <select class="btn" name="worker">
                <xsl:call-template name="displayWorkerOption">
                    <xsl:with-param name="max" select="@workersNumber" />
                    <xsl:with-param name="selected" select="@worker" />
                </xsl:call-template>
            </select></div>
            <br/>
            <xsl:text>Interval between dumps: </xsl:text> <input type="text" name="interval" value="10"/>
            <xsl:text> </xsl:text>
            <select class="btn" name="units">
                <option value="min">minute(s)</option>
                <option value="hour">hour(s)</option>
            </select>
            <br/>
            <a class="btn btn-primary" href="javascript: document.getElementById('profile').submit();">Start</a>
            <input name="type" type="hidden" value="memory"/>
            <input id="start" name="start" type="hidden" value="true" />
        </form>

        <xsl:if test="Status/@left &gt; 0">
            <hr />
            <div class="status">
                <h2>Memory profiling</h2>
                <div class="state">State: <span id="status">
                    <xsl:if test="Status/@left > 0">Active</xsl:if></span>
                </div>
                <div class="state">Requested: <span class="state-val"><xsl:value-of select="Status/@requested" /></span></div>
                <div class="state">Left: <span class="state-val"><xsl:value-of select="Status/@left" /></span></div>
                <div class="state">Next dump in: <span id="timeLeft" class="state-val">...</span></div>
                <div class="state">Interval: <span class="state-val">
                    <xsl:value-of select="Status/@interval" />
                    <xsl:text> </xsl:text><xsl:value-of select="Status/@units" /></span>
                </div>
            </div>
            <script>
                var lastDump = <xsl:value-of select="Status/@lastDump" />;
                var nextDump = <xsl:value-of select="Status/@nextDump" /> + 5000;
                var requested = <xsl:value-of select="Status/@requested" />;
                var left = <xsl:value-of select="Status/@left" />;
                <![CDATA[
                var statusRefreshTimer = setInterval(function statusRefresh() {
                    nextDump -= 1000;
                    if (nextDump <= 0) {
                        nextDump = 0;
                        clearInterval(statusRefreshTimer);
                        statusRefreshTimer = undefined;
                        document.getElementById('status').innerHTML = 'Done';
                        setTimeout(function () {
                            $('#profile input#start').first()[0].value = 'false';
                            $('#profile').submit();
                        }, 1000);
                    }
                    var timeLeftEl = document.getElementById('timeLeft');
                    timeLeftEl.innerHTML = formatDumpTime(nextDump);
                }, 1000);

                function formatDumpTime(ts) {
                    var hours = parseInt(ts/3600000, 10);
                    ts -= hours * 3600000;
                    var mins = parseInt((ts)/60000, 10);
                    ts -= mins * 60000;
                    var seconds = parseInt(ts/1000, 10);
                    return hours + ' h. ' + mins + ' min. ' + seconds + ' sec.';
                }
                ]]>
            </script>
        </xsl:if>
    </xsl:template>

</xsl:stylesheet>
