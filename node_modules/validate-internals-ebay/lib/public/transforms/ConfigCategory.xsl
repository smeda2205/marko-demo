<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:output method="html"/>
<xsl:include href='PageLayout.xsl'/>

<xsl:template match="/">
    <xsl:call-template name='page-layout'>
        <xsl:with-param name='root-node' select="ViewConfigCategory"/>
        <xsl:with-param name='title-text' select="'View Configuration Category'"/>
    </xsl:call-template>
</xsl:template>

<xsl:template name='page-content'>
    <xsl:apply-templates select="ViewConfigCategory/ConfigCategory"/>
</xsl:template>

  <!--******************************************************
    ** "ConfigCategory" template
    ***************************************************-->
  <xsl:template match="ConfigCategory">
  <div class="table_title" id="infoTableId_title"><xsl:value-of select="@id"/></div>
  <table width="100%" border="0" cellspacing="0" cellpadding="3" id="infoTableId" class="display">
    <thead>
      <tr>
        <th class="left" width="25%">Configuration</th>
        <th class="left" width="75%">Value</th>
      </tr>
    </thead>
    <tr>
      <td>ID</td>
      <td><xsl:value-of select="@id"/></td>
    </tr>
    <tr>
      <td>Alias</td>
      <td><xsl:value-of select="@alias"/></td>
    </tr>
    <tr>
      <td>Group</td>
      <td><xsl:value-of select="@group"/></td>
    </tr>
    <tr>
      <td>Initializable</td>
      <td><xsl:value-of select="@initializable"/></td>
    </tr>
    <tr>
      <td>Site&#160;Operations&#160;Command</td>
      <td><xsl:value-of select="@site-ops-command"/></td>
    </tr>
    <tr>
      <td>Validator&#160;Class&#160;Name</td>
      <td><xsl:value-of select="@Validator"/></td>
    </tr>
    <tr>
      <td>Description</td>
      <td><xsl:value-of select="@category-desc"/></td>
    </tr>
    <tr>
      <td>Last&#160;Updated</td>
      <td><xsl:value-of select="@timestamp"/></td>
    </tr>
    <tr>
      <td>Persistent</td>
      <td><xsl:value-of select="@persist-updates"/></td>
    </tr>
    <tr>
      <td>Persistent&#160;Location</td>
      <td><xsl:value-of select="@persistent-location"/></td>
    </tr>
  </table>

  <div class="legend_wrapper">
    <div class="legend_left">Click the below values to edit</div>
    <div class="legend_right">
    <table class="legend_table">
    <tr><td class="updated-row-head">Current&#160;changes</td>
    <td class="updated-row-head-failure">Value&#160;not&#160;updated</td>
    <td class="updated-row-head-success">Value&#160;updated</td>
    </tr>
    </table>
    </div>
  </div>
  <div class="table_title" id="propTableId_title">Configurable Properties</div>
    <table width="100%" border="0" cellspacing="0" cellpadding="3" id="propTableId" class="display">
        <thead>
          <tr>
            <th class="left" width="25%">Property</th>
            <th class="left" width="75%">Value</th>
          </tr>
        </thead>
      <xsl:choose>
        <xsl:when test="@id = 'ebay.kernel.ServeTraffic'">
            <xsl:apply-templates select="attribute" mode="ServeTraffic"/>
        </xsl:when>
        <xsl:otherwise>
            <xsl:apply-templates select="attribute"/>
        </xsl:otherwise>
      </xsl:choose>
    </table>
    <div id="updateControls" >
      <span class="add_delete_toolbar">
       <button id="btnAddNewRow" class='add_row'>Add property</button>
       <button id="btnDeleteRow" class='delete_row'>Reset Property</button>
      </span>
      <form style="display:inline;" id="submitFormId" action="UpdateConfigCategoryXml" method="put">
        <input id="submitBtnId" type="submit" name="" value="Submit" disabled="true"></input>
        <input id="resetBtnId" type="reset" name="" value="Cancel" disabled="true"></input>
        <input type="hidden" name="id"><xsl:attribute name="value"><xsl:value-of select='@id'/></xsl:attribute></input>
      </form>
    </div>
    <div id="processing_message" style="display: none" title="Processing">
      Please wait, patience is allegedly a virtue...
    </div>
    <form id="formAddNewRow" action="" title="Add a new property">
        <label id="lblAddError" style="display: none" class="error"></label>
        <table id="formAddNewRow_table">
        <tr><td><label for="nameAddId">Name</label></td>
        <td><input type="text" name="name" id="nameAddId" rel="0"/></td>
        </tr>
        <tr>
        <td><label for="valueAddId">Value</label></td>
        <td><input type="text" name="value" id="valueAddId" rel="1"/></td>
        </tr>
        </table>
    </form>
    <script>
function initPage() {
 if ( $.browser.msie ) {
  $("#btnDeleteRow").hide();
 }
}
function postInitPage(fnUpdateTdValue) {
<xsl:apply-templates select="attribute" mode="initpage" />
$('select').live('change', function () {
$(this).parent().submit();
});
}
    </script>
  </xsl:template>

  <xsl:template match="attribute">
    <xsl:variable name="attrId"><xsl:value-of select="translate(@name, '.', '_')"></xsl:value-of></xsl:variable>
    <tr>
      <xsl:attribute name="id"><xsl:value-of select="$attrId"/></xsl:attribute>
      <xsl:choose>
            <xsl:when test="@updateStatus = 'success'">
                <td class='updated-row-head-success'><xsl:value-of select="@name"/></td>
            </xsl:when>
            <xsl:when test="@updateStatus = 'failed'">
                <td class='updated-row-head-failure'><xsl:value-of select="@name"/></td>
            </xsl:when>
            <xsl:otherwise>
                <td><xsl:value-of select="@name"/></td>
            </xsl:otherwise>
      </xsl:choose>
      <td id="td_{$attrId}"><xsl:if test="@persist-policy='Always'">
          <xsl:attribute name="title">(Persist : <xsl:value-of select="@persist-policy"/>)</xsl:attribute>
        </xsl:if><xsl:value-of select="@value"/></td>
    </tr>
  </xsl:template>

  <xsl:template match="attribute" mode="initpage">
$('#td_<xsl:value-of select="translate(@name, '.', '_')"/>').editable(function(value, settings) {
 fnUpdateTdValue(value, settings, this);
 return(value);
},{
onblur: 'submit'
<xsl:choose>
<xsl:when test="@type = 'java.lang.Boolean'">,
type :'select',
data :"{'true':'true', 'false':'false'}"</xsl:when>
<xsl:when test="validValues">,
type :'select',
data :"{<xsl:for-each select="validValues/validValue">'<xsl:value-of select="@value" />':'<xsl:value-of select="@name" />',</xsl:for-each>}"</xsl:when>
</xsl:choose>});
  </xsl:template>

  <xsl:template match="attribute" mode="ServeTraffic">
    <xsl:variable name="fontcolor">
        <xsl:choose>
            <xsl:when test="@name = 'Server-Init-Failure'">
                <xsl:text>red</xsl:text>
            </xsl:when>
            <xsl:otherwise>
                <xsl:text>black</xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:variable>
    <tr>
        <xsl:attribute name="id"><xsl:value-of select="@name"/></xsl:attribute>
        <xsl:choose>
            <xsl:when test="@updateStatus = 'success'">
                <td class='updated-row-head-success'><xsl:value-of select="@name"/></td>
            </xsl:when>
            <xsl:when test="@updateStatus = 'failed'">
                <td class='updated-row-head-failure'><xsl:value-of select="@name"/></td>
            </xsl:when>
            <xsl:otherwise>
                <td><xsl:value-of select="@name"/></td>
            </xsl:otherwise>
        </xsl:choose>
        <td style="color: {$fontcolor}" id="td_{@name}"><xsl:value-of select="@value"/><xsl:if test="@persist-policy='Always'">
             <xsl:attribute name="title">(Persist : <xsl:value-of select="@persist-policy"/>)</xsl:attribute>
          </xsl:if></td>
  </tr>
  </xsl:template>
</xsl:stylesheet>
