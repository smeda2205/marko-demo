<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:output method="html"/>
<xsl:include href='PageLayout.xsl'/>

<xsl:template match="/">
  <xsl:call-template name='page-layout'>
    <xsl:with-param name='root-node' select="ValidateInternals"/>
    <xsl:with-param name='title-text' select="'Administration Console'"/>
  </xsl:call-template>
</xsl:template>

<xsl:template name='page-content'>
    <xsl:if test="count(ValidateInternals/Component) > 1">
    <div class="page_nav_wrapper">
    <div class="page_nav"><div>Go to</div>
    <ul>
    <xsl:apply-templates select="ValidateInternals/Component" mode="page_navigation" />
  </ul>
  </div>
  </div>
  </xsl:if>
  <xsl:apply-templates select="ValidateInternals/Component"/>
</xsl:template>

<xsl:template match="Component[not(@isComplex)]" mode="page_navigation">
<li><a href="#Component_{position()}"><xsl:value-of select="@name"/></a></li>
</xsl:template>

<!--******************************************************
  ** "Component" template used for components that
  ** have name-value pair properties
  ***************************************************-->
  <xsl:template match="Component[not(@isComplex)]">
    <a name="Component_{position()}"/>
    <xsl:variable name="tableId" select="concat('comp_table_', position())"/>
    <div id='{$tableId}_title' class="table_title"><xsl:value-of select="@name"/></div>
    <table id='{$tableId}' class="display componentTable">
    <thead>
      <tr>
      <th class="left" style="width: 25%;">Metric</th>
      <th class="left" style="width: 75%;">Value</th>
      </tr>
    </thead>
    <tbody>
         <xsl:apply-templates select="Properties/Property"/>
      </tbody>
    </table>
    <div class="space20v"></div>
  </xsl:template>

  <xsl:template match="Component[@name = 'Application Build Information']">
    <a name="Component_{position()}"/>
    <xsl:variable name="tableId" select="concat('comp_table_', position())"/>
    <div id='{$tableId}_title' class="table_title"><xsl:value-of select="@name"/></div>
    <table id='{$tableId}' class="display componentTable">
      <thead>
        <tr>
          <th class="left" style="width: 25%;">Metric</th>
          <th class="left" style="width: 75%;">Value</th>
        </tr>
      </thead>
      <tbody>
         <xsl:apply-templates select="Properties/Property" mode="AppBuildInfo"/>
      </tbody>
    </table>
    <div class="space20v"></div>
  </xsl:template>

  <xsl:template name="WarningStyle">
      <xsl:param name="level" />
      <xsl:choose>
          <xsl:when test="$level &lt; 1">background:linear-gradient(#aa0000,#ff0000);color:white</xsl:when>
          <xsl:when test="$level &lt; 2">background:linear-gradient(#ffffaa,#ff2222)</xsl:when>
          <xsl:when test="$level &lt; 3">background:linear-gradient(#ffffaa,#ffffcc)</xsl:when>
          <xsl:when test="$level &lt; 4">background:linear-gradient(#aaffaa,#aaffcc)</xsl:when>
          <xsl:otherwise><xsl:text> </xsl:text></xsl:otherwise>
      </xsl:choose>
  </xsl:template>

  <!--******************************************************
    ** "Property" template used for components that
    ** have name-value pair properties
    ***************************************************-->
   <xsl:template match="Property">
       <xsl:param name="max" select="0" />
       <xsl:param name="min" select="0" />
    <tr>
        <td>
          <xsl:choose>
              <xsl:when test="@keyHref">
                  <a href="ViewConfigCategoryXml?id={@keyHref}"><xsl:value-of select="@name"/></a>
              </xsl:when>
              <xsl:otherwise>
                  <xsl:value-of select="@name"/>
              </xsl:otherwise>
          </xsl:choose>
        </td>
        <td>
            <xsl:if test="$max &gt; 0 or $min &gt; 0 or @warningLevel">
                <xsl:variable name="propValueNum" select="number(normalize-space(.))" />
                <xsl:variable name="level">
                    <xsl:choose>
                        <xsl:when test="@warningLevel">
                            <xsl:value-of select="@warningLevel" />
                        </xsl:when>
                        <xsl:when test="$max &gt; 0">
                            <xsl:value-of select="($max div $propValueNum)" />
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:value-of select="($propValueNum div $min)" />
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsl:attribute name="style">
                    <xsl:call-template name="WarningStyle">
                        <xsl:with-param name="level" select="$level" />
                    </xsl:call-template>
                </xsl:attribute>
            </xsl:if>
        <xsl:choose>
            <xsl:when test="@href">
                <a href="{@href}" target="_blank">
                    <xsl:value-of select="." />
                </a>
            </xsl:when>
            <xsl:otherwise>
            <xsl:choose>
              <xsl:when test="@escape = 'no'">
                <xsl:value-of disable-output-escaping="yes" select="." />
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="." />
              </xsl:otherwise>
            </xsl:choose>
          </xsl:otherwise>
        </xsl:choose>
        </td>
    </tr>
  </xsl:template>

  <xsl:template match="Property" mode="AppBuildInfo">
    <xsl:if test=". != ''">
    <tr>
        <td><xsl:value-of select="@name"/></td>
        <td>
        <xsl:choose>
            <xsl:when test="@href">
                <a href="{@href}" target="_blank">
                    <xsl:choose>
                      <xsl:when test="contains(., '&#10;')">
                        <pre><xsl:value-of select="." /></pre>
                      </xsl:when>
                      <xsl:otherwise>
                            <xsl:value-of select="." />
                      </xsl:otherwise>
                    </xsl:choose>
                </a>
            </xsl:when>
            <xsl:otherwise>
                <xsl:choose>
                  <xsl:when test="contains(., '&#10;')">
                    <pre><xsl:value-of select="." /></pre>
                  </xsl:when>
                  <xsl:otherwise>
                        <xsl:value-of select="." />
                  </xsl:otherwise>
                </xsl:choose>
            </xsl:otherwise>
        </xsl:choose>
        </td>
    </tr>
    </xsl:if>
  </xsl:template>

   <!--************************************************
  ** Following templates are component specific
  ***************************************************-->
  <!--******************************************************
  ** "Component" template used for Host Information
  ***************************************************-->
  <xsl:template match="Component[@name = 'Host Information']">
    <a name="Component_{position()}"/>
    <div id="hostInfoTableId_title" class="table_title"><xsl:value-of select="@name"/></div>
    <table id="hostInfoTableId" class="display componentTable">
    <thead>
     <tr>
     <th class="left" style="width: 25%;">Metric</th>
     <th class="left" style="width: 75%;">Value</th>
     </tr>
    </thead>
    <xsl:apply-templates select="Properties/Property[@name = 'Host']"/>
    <xsl:apply-templates select="Properties/Property[@name = 'OS']"/>
  <xsl:apply-templates select="Properties/Property[@name = 'Container']"/>
  <xsl:apply-templates select="Properties/Property[@name = 'Worker']"/>
  <xsl:apply-templates select="Properties/Property[@name = 'Workers']"/>

  <xsl:if test="Properties/Property[@name = 'ServletContainer']">
    <xsl:apply-templates select="Properties/Property[@name = 'ServletContainer']"/>
  </xsl:if>

    <xsl:apply-templates select="Properties/Property[@name = 'Host System Time']"/>
    <xsl:apply-templates select="Properties/Property[@name = 'EAR Re-start Time at']"/>
    <xsl:apply-templates select="Properties/Property[@name = 'EAR start Time']"/>
    <xsl:apply-templates select="Properties/Property[@name = 'Environment']"/>
    <xsl:apply-templates select="Properties/Property[@name = 'Initial VM Memory']"/>
    <xsl:apply-templates select="Properties/Property[@name = 'Initial Used Memory']"/>
     <xsl:apply-templates select="Properties/Property[@name = 'CPU Usage']" mode="hostinfo_cpuusage" />
     <xsl:apply-templates select="Properties/Property[@name = 'JVM CPU Usage']">
         <xsl:with-param name="max" select="80" />
     </xsl:apply-templates>
     <xsl:apply-templates select="Properties/Property[@name = 'Physical Memory Available']"/>
     <xsl:apply-templates select="Properties/Property[@name = 'Physical Memory Total']"/>
     <xsl:apply-templates select="Properties/Property[@name = 'Java Process Memory Used']">
         <xsl:with-param name="max" select="1500000000" />
     </xsl:apply-templates>
     <xsl:apply-templates select="Properties/Property[@name = 'Java Process Private Bytes']"/>
     <xsl:apply-templates select="Properties/Property[@name = 'Java Process Virtual Bytes']"/>
     <xsl:apply-templates select="Properties/Property[@name = 'JVM Memory Available']"/>
    <xsl:apply-templates select="Properties/Property[@name = 'JVM Memory Total']"/>
    <xsl:apply-templates select="Properties/Property[@name = 'Node.js Memory Limits Available']" />
    <xsl:apply-templates select="Properties/Property[@name = 'Node.js Memory Available']" />
    <xsl:apply-templates select="Properties/Property[@name = 'Node.js Memory Limits Total']"/>
    <xsl:apply-templates select="Properties/Property[@name = 'Node.js Memory Total']"/>
   <xsl:apply-templates select="Properties/Property[@name = 'Node.js Memory Used']">
       <xsl:with-param name="max" select="1500000000" />
   </xsl:apply-templates>
  <xsl:apply-templates select="Properties/Property[@name = 'Min Used Static VM Memory']"/>
    <xsl:apply-templates select="Properties/Property[@name = 'Initialization Status']" mode="hostinfo"/>
    <xsl:apply-templates select="Properties/Property[@name = 'PaaSRealm']"/>
    <xsl:apply-templates select="Properties/Property[@name = 'VPC']"/>
    </table>
    <div class="space20v"></div>
  </xsl:template>
  <!--******************************************************
  ** "Property" template used for Host Information
  ***************************************************-->
   <xsl:template match="Property" mode="hostinfo">
    <tr>
      <td><xsl:value-of select="@name"/></td>
      <td>
      <xsl:choose>
        <xsl:when test="contains(., 'Success')">
          <xsl:value-of select="." disable-output-escaping="yes"/>
        </xsl:when>
        <xsl:otherwise>
          <font color="red"><xsl:value-of select="." /></font>
        </xsl:otherwise>
      </xsl:choose>
      </td>
    </tr>
  </xsl:template>

  <xsl:template match="Property" mode="hostinfo_cpuusage">
    <tr>
      <td><xsl:value-of select="@name"/></td>
      <td>
          <xsl:variable name="propValueNum" select="number(normalize-space(.))" />
          <xsl:attribute name="style">
              <xsl:call-template name="WarningStyle">
                  <xsl:with-param name="level" select="80 div $propValueNum" />
              </xsl:call-template>
          </xsl:attribute>
          <xsl:value-of select="."/>% (<a href ="ValidateInternals?component=Troubleshooting%20Info">details</a>)
      </td>
    </tr>
  </xsl:template>

<!--******************************************************
  ** "Component" template used for Databases
  ***************************************************-->
  <xsl:template match="Component[@name = 'Databases']">
    <a name="Component_{position()}"/>
    <div id='allScrollableTableId_title' class="table_title"><xsl:value-of select="@name"/></div>
    <table id='allScrollableTableId' border="1" class="display scrollableTable">
    <thead>
    <tr>
    <th>Database</th>
    <th>Required</th>
    <th>Used</th>
    <th>User</th>
    <th>Connect URL</th>
    <th>Status</th>
    <th>Create Connection Failures Since Markup</th>
    <th>Last Create Connection Failure</th>
    <th>Auto-Markdown Create Connection Failures</th>
    <th>Error Using Connection Failures Since Markup</th>
    <th>Last Error Using Connection Failure</th>
    <th>Auto-Markdown Error Using Connection Failures</th>
    <th>Connection Wait T/Os Since Markup</th>
    <th>Last Wait T/O</th>
    <th>Auto-Markdown Wait T/Os</th>
    <th>Requests Since Markdown</th>
    <th>Markdown Start Time</th>
    <th>IsUTF8</th>
  </tr>
  </thead>
  <tbody>
    <xsl:apply-templates select="Properties" mode="database"/>
    </tbody>
    </table>
    <div class="space20v"></div>
  </xsl:template>
<!--******************************************************
  ** "Properties" template for Database table
  ***************************************************-->
  <xsl:template match="Properties" mode="database">
    <!-- Create a background color variable for the table row based on the Status column -->
    <xsl:variable name="trclass">
     <xsl:choose>
       <xsl:when test="Property[@name = 'Status' and contains(., 'Up')]">
       <xsl:text>gradeA</xsl:text>
       </xsl:when>
       <xsl:when test="Property[@name = 'Status' and contains(., 'Iffy')]">
       <xsl:text>gradeC</xsl:text>
       </xsl:when>
       <xsl:otherwise>
       <xsl:text>gradeX</xsl:text>
       </xsl:otherwise>
     </xsl:choose>
  </xsl:variable>

  <!-- Invoke templates according to table column headings -->
  <tr class="{$trclass}">
    <xsl:choose>
      <xsl:when test="Property[@name = 'Required' and . = 'true']">
         <xsl:apply-templates select="Property[@name = 'Name']" mode="database-name-required"/>
       </xsl:when>
      <xsl:when test="Property[@name = 'Used' and . = 'true']">
         <xsl:apply-templates select="Property[@name = 'Name']" mode="database-name-required"/>
       </xsl:when>
       <xsl:otherwise>
         <xsl:apply-templates select="Property[@name = 'Name']" mode="database"/>
       </xsl:otherwise>
     </xsl:choose>

    <xsl:apply-templates select="Property[@name = 'Required']" mode="database"/>
    <xsl:apply-templates select="Property[@name = 'Used']" mode="database"/>
    <xsl:apply-templates select="Property[@name = 'User']" mode="database"/>
    <xsl:apply-templates select="Property[@name = 'Connect URL']" mode="database"/>
    <xsl:apply-templates select="Property[@name = 'Status']" mode="database"/>
    <xsl:apply-templates select="Property[@name = 'Create Connection Failures Since Markup']" mode="database"/>
    <xsl:apply-templates select="Property[@name = 'Last Create Connection Failure']" mode="database"/>
    <xsl:apply-templates select="Property[@name = 'Auto-Markdown Create Connection Failures']" mode="database"/>
    <xsl:apply-templates select="Property[@name = 'Error Using Connection Failures Since Markup']" mode="database"/>
    <xsl:apply-templates select="Property[@name = 'Last Error Using Connection Failure']" mode="database"/>
    <xsl:apply-templates select="Property[@name = 'Auto-Markdown Error Using Connection Failures']" mode="database"/>
    <xsl:apply-templates select="Property[@name = 'Connection Wait T/Os Since Markup']" mode="database"/>
    <xsl:apply-templates select="Property[@name = 'Last Wait T/O']" mode="database"/>
    <xsl:apply-templates select="Property[@name = 'Auto-Markdown Wait T/Os']" mode="database"/>
    <xsl:apply-templates select="Property[@name = 'Requests Since Markdown']" mode="database"/>
    <xsl:apply-templates select="Property[@name = 'MarkdownStartTime']" mode="database"/>
    <xsl:apply-templates select="Property[@name = 'IsUTF8']" mode="database"/>
  </tr>
  </xsl:template>
<!--******************************************************
  ** "Property" template for required/inuse Database name
  ***************************************************-->
  <xsl:template match="Property" mode="database-name-required">
  <td>
   <xsl:text>*</xsl:text>
    <xsl:value-of select="."/>
  </td>
  </xsl:template>
<!--******************************************************
  ** "Property" template for Database table
  ***************************************************-->
  <xsl:template match="Property" mode="database">
  <td class="nowrap">
    <xsl:value-of select="."/>
  </td>
  </xsl:template>
<!--*************************************************************
  ** "Component" template used for Robots Configuration Files
  *************************************************************-->
  <xsl:template match="Component[@name = 'Robot Configuration Files']">
  <a name="Component_{position()}"/>
  <xsl:variable name="tableId" select="concat('comp_table_', position())"/>
  <div id='{$tableId}_title' class="table_title"><xsl:value-of select="@name"/></div>
  <table id='{$tableId}' border='1' class="display componentTable">
    <thead>
  <tr>
    <xsl:for-each select="Properties[1]/Property">
      <td><xsl:value-of select="@name"/></td>
    </xsl:for-each>
  </tr>
  </thead>
  <tbody>
     <xsl:apply-templates select="Properties" mode="robot"/>
  </tbody>
  </table>
  <div class="space20v"></div>
  </xsl:template>
<!--******************************************************
  ** "Properties" template  for Robots Configuration Files
  ***************************************************-->
  <xsl:template match="Properties" mode="robot">
  <tr>
    <xsl:apply-templates select="Property" mode="single_td"/>
  </tr>
  </xsl:template>
<!--******************************************************
  ** "Component" template used for V3 Email Status
  ***************************************************-->
  <xsl:template match="Component[@name = 'V3 Email Status']">
  <a name="Component_{position()}"/>
  <xsl:variable name="tableId" select="concat('comp_table_', position())"/>
  <div id='{$tableId}_t1_title' class="table_title"><xsl:value-of select="@name"/></div>
  <table id='{$tableId}_t1' class="display componentTable">
   <thead>
    <th>Property</th>
    <th>Value</th>
   </thead>
   <tbody>
    <tr>
    <xsl:apply-templates select="Properties/Property[@name = 'Number of Waiting Threads']" mode="email"/>
  </tr>
  <tr>
    <xsl:apply-templates select="Properties/Property[@name = 'Wait Failures']" mode="email"/>
  </tr>
   </tbody>
  </table>

  <div class="space20v"></div>
  <div id='{$tableId}_t2_title' class="table_title">Status</div>
  <table id='{$tableId}_t2' class="display componentTable">
   <thead>
  <tr>
    <th>Host</th>
    <th>Port</th>
    <th>State</th>
    <th>Last Good Connect Time</th>
    <th>Last Bad Connect Time</th>
    <th>Last Bad Send</th>
    <th>Number of Bad Sends Since Connect</th>
    <th>Connection Wait Time</th>
    <th>Retries</th>
  </tr>
  </thead>
  <tbody>
  <xsl:apply-templates select="Properties" mode="email"/>
  </tbody>
  </table>
      <div class="space20v"></div>
  </xsl:template>
<!--******************************************************
  ** "Properties" template for V3 Email
  ***************************************************-->
  <xsl:template match="Properties" mode="email">
    <xsl:if test="Property[@name = 'Connection Wait Time']">
      <!-- Create a background color variable for the table row based on the State column -->
      <xsl:variable name="color">
       <xsl:choose>
         <xsl:when test="Property/@name = 'State' and Property[contains(., 'good')]">
         <xsl:text>gradeA</xsl:text>
         </xsl:when>
         <xsl:when test="Property/@name = 'State' and Property[contains(., 'Ify')]">
         <xsl:text>gradeC</xsl:text>
         </xsl:when>
         <xsl:when test="Property/@name = 'State' and Property[contains(., 'BAD')]">
         <xsl:text>gradeX</xsl:text>
         </xsl:when>
         <xsl:otherwise>
         <xsl:text>gradeU</xsl:text>
         </xsl:otherwise>
       </xsl:choose>
    </xsl:variable>
    <tr class="{$color}">
      <xsl:apply-templates select="Property[@name = 'Host']" mode="single_td"/>
      <xsl:apply-templates select="Property[@name = 'Port']" mode="single_td"/>
      <xsl:apply-templates select="Property[@name = 'State']" mode="single_td"/>
      <xsl:apply-templates select="Property[@name = 'Last Good Connect Time']" mode="single_td"/>
      <xsl:apply-templates select="Property[@name = 'Last Bad Connect Time']" mode="single_td"/>
      <xsl:apply-templates select="Property[@name = 'Last Bad Send']" mode="single_td"/>
      <xsl:apply-templates select="Property[@name = 'Number of Bad Sends Since Connect']" mode="single_td"/>
      <xsl:apply-templates select="Property[@name = 'Connection Wait Time']" mode="single_td"/>
      <xsl:apply-templates select="Property[@name = 'Retries']" mode="single_td"/>
    </tr>
  </xsl:if>
  </xsl:template>
  <!--******************************************************
  ** "Property" template for V3 Email
  ***************************************************-->
  <xsl:template match="Property" mode="email">
  <td>
    <xsl:value-of select="@name"/>
  </td>
  <td>
    <xsl:value-of select="."/>
  </td>
  </xsl:template>
<!--******************************************************
  ** "Property" template for V3 Email
  ***************************************************-->
  <xsl:template match="Property" mode="single_td">
  <td>
    <xsl:value-of select="."/>
  </td>
  </xsl:template>
  <!--******************************************************
  ** "Component" template used for InitializationContext
  ***************************************************-->
  <xsl:template match="Component[@name = 'InitializationContext']">
  <a name="Component_{position()}"/>
  <xsl:variable name="tableId" select="concat('comp_table_', position())"/>
  <div class="page_title"><xsl:value-of select="@name"/></div>
  <div id='{$tableId}_t1_title' class="table_title">Initialization Processor Tag</div>
  <table id='{$tableId}_t1' border='1' class="display componentTable">
    <thead>
    <tr>
    <td>Name</td>
    <td>Time (milliseconds)</td>
  </tr>
  </thead>
  <tbody>
  <xsl:for-each select="Properties">
    <xsl:sort select="Property[@name = 'InitProcessorTime']/." data-type="number" order="descending"/>
    <xsl:if test="Property[@name = 'InitTag'] or Property[@name = 'InitProcessorTime']">
      <tr>
        <xsl:apply-templates select="Property[@name = 'InitTag']" mode="single_td"/>
        <xsl:apply-templates select="Property[@name = 'InitProcessorTime']" mode="single_td"/>
      </tr>
    </xsl:if>
  </xsl:for-each>
  </tbody>
  </table>

  <div id='{$tableId}_t2_title' class="table_title">Deployment Steps</div>
  <table id='{$tableId}_t2' border='1' class="display componentTable">
    <thead>
    <tr>
        <td>Name</td>
        <td>Time (milliseconds)</td>
    </tr>
    </thead>
    <tbody>
  <xsl:for-each select="Properties">
    <xsl:if test="Property[@name = 'DeployStepName'] or Property[@name = 'DeployStepTime']">
      <tr>
        <xsl:apply-templates select="Property[@name = 'DeployStepName']" mode="single_td"/>
        <xsl:apply-templates select="Property[@name = 'DeployStepTime']" mode="single_td"/>
      </tr>
    </xsl:if>
  </xsl:for-each>
    </tbody>
    </table>

  <div class="space20v"></div>
  <div id='{$tableId}_t3_title' class="table_title">Initialization Steps</div>
  <table id='{$tableId}_t3' border='1' class="display componentTable">
    <thead>
    <tr>
        <td>Name</td>
        <td>Time (milliseconds)</td>
    </tr>
    </thead>
    <tbody>
  <xsl:for-each select="Properties">
    <xsl:if test="Property[@name = 'InitStepName'] or Property[@name = 'InitStepTime']">
      <tr>
        <xsl:apply-templates select="Property[@name = 'InitStepName']" mode="single_td"/>
        <xsl:apply-templates select="Property[@name = 'InitStepTime']" mode="single_td"/>
      </tr>
    </xsl:if>
  </xsl:for-each>
    </tbody>
    </table>

  <div class="space20v"></div>
  <div id='{$tableId}_t4_title' class="table_title">Initializable Name</div>
  <table id='{$tableId}_t4' border='1' class="display componentTable">
    <thead>
    <tr>
        <td>Name</td>
        <td>Time (milliseconds)</td>
    </tr>
    </thead>
    <tbody>
    <xsl:for-each select="Properties">
    <xsl:sort select="Property[@name = 'InitTime']/." data-type="number" order="descending"/>
    <xsl:if test="Property[@name = 'ClassName'] or Property[@name = 'InitTime']">
      <tr>
        <xsl:apply-templates select="Property[@name = 'ClassName']" mode="single_td"/>
        <xsl:apply-templates select="Property[@name = 'InitTime']" mode="single_td"/>
      </tr>
    </xsl:if>
  </xsl:for-each>
  </tbody>
  </table>
      <div class="space20v"></div>
  </xsl:template>
    <!--******************************************************
  ** "Component" template used for Web Cammands
  ***************************************************-->
  <xsl:template match="Component[@name='Web']">
  <a name="Component_{position()}"/>
  <xsl:variable name="tableId" select="concat('comp_table_', position())"/>
  <div id='{$tableId}_ta_title' class="table_title"><xsl:value-of select="@name"/></div>
  <table id='{$tableId}_ta' border='1' class="display componentTable">
    <thead>
     <th>Property</th>
     <th>Value</th>
    </thead>
    <tbody>
    <xsl:apply-templates select="Property[contains(@name, 'Total Num Svc Invc')]" mode="single_td"/>
    <tr>
        <td>Total Access Count</td>
        <td><xsl:value-of select="Properties/Property[@name = 'TotalRequestsServed']/."/></td>
    </tr>
    <tr>
        <td>Last Access Time</td>
        <td><xsl:value-of select="Properties/Property[@name = 'LastTimeRequestServed']/."/></td>
    </tr>
    </tbody>
  </table>

  <div class="space20v"></div>
  <div id='{$tableId}_tb_title' class="table_title">Commands</div>
  <table id='{$tableId}_tb' border='1' class="display componentTable">
   <thead>
  <tr>
    <th>Command</th>
    <th>Status</th>
    <th>Class Name</th>
    <th>Execution Count</th>
    <th>Version</th>
  </tr>
   </thead>
   <tbody>
  <xsl:apply-templates select="Properties" mode="webCmds">
    <xsl:sort select="Property[@name = 'Command']"/>
  </xsl:apply-templates>
   </tbody>
  </table>
  <div class="space20v"></div>
  </xsl:template>
  <!--******************************************************
  ** "Properties" template  for Web Cammand Status
  ***************************************************-->
  <xsl:template match="Property[@name = 'TotalRequestsServed']">
  <tr>
    <td>Total Requests Served</td>
      <td><xsl:value-of select="."/></td>
  </tr>
  </xsl:template>
  <xsl:template match="Property[@name = 'DateTimeLastRequestServed']">
  <tr>
    <td>Date Time Last Request Served</td>
      <td><xsl:value-of select="."/></td>
  </tr>
  </xsl:template>
  <xsl:template match="Properties" mode="webCmds">
  <tr>
    <xsl:apply-templates select="Property[@name = 'Command']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name = 'Status']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name = 'Class']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name = 'CommandExecutionCount']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name = 'Version']" mode="single_td"/>
  </tr>
  </xsl:template>
  <!--******************************************************
  ** "Component" template used for Api and WebSvc Cammands
  ***************************************************-->
  <xsl:template match="Component[@name='ApiApp' or @name='WebSvc' or @name='WebSearch' or @name='Interop']">
  <a name="Component_{position()}"/>
  <xsl:variable name="tableId" select="concat('comp_table_', position())"/>
  <div id='{$tableId}_title' class="table_title"><xsl:value-of select="@name"/></div>
  <table id='{$tableId}' border='1' class="display componentTable">
   <thead>
  <tr>
    <th>Command</th>
    <th>Status</th>
    <th>Class Name</th>
  </tr>
   </thead>
   <tbody>
  <xsl:apply-templates select="Properties" mode="web">
    <xsl:sort select="Property[@name = 'Command']"/>
  </xsl:apply-templates>
   </tbody>
  </table>
  </xsl:template>
  <!--******************************************************
  ** "Properties" template  for Api and WebSvc Cammand
  ***************************************************-->
  <xsl:template match="Properties" mode="web">
  <tr>
    <xsl:apply-templates select="Property[@name = 'Command']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name = 'Status']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name = 'Class']" mode="single_td"/>
  </tr>
  </xsl:template>
   <!--******************************************************
  ** "Component" template used for EPS WebServer
  ***************************************************-->
  <xsl:template match="Component[@name='EPS WebServer']">
  <a name="Component_{position()}"/>
  <xsl:variable name="tableId" select="concat('comp_table_', position())"/>
  <div id='{$tableId}_title' class="table_title"><xsl:value-of select="@name"/></div>
  <table id='{$tableId}' border='1' class="display componentTable">
   <thead>
  <tr>
    <th>Server Name</th>
    <th>System Name</th>
    <th>Sequence Name</th>
    <th>Server Status</th>
    <th>DB Server Status</th>
    <th>In Memory Server Status</th>
    <th>Server Markdown Since</th>
    <th>Server Markup Since</th>
    <th>Failure Since Server Markup</th>
    <th>Last Failed File Upload Time</th>
    <th>Total Uploaded Files Since Server Markup</th>
  </tr>
   </thead>
   <tbody>
  <xsl:apply-templates select="Properties" mode="epswebserver"/>
   </tbody>
  </table>
  <div class="space20v"></div>
  </xsl:template>
  <!--******************************************************
  ** "Properties" template  for EPS WebServer
  ***************************************************-->
  <xsl:template match="Properties" mode="epswebserver">
  <tr>
    <xsl:apply-templates select="Property[@name='Server Name']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name='System Name']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name='Sequence Name']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name='Server Status']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name='DB Server Status']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name='In Memory Server Status']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name='Server Markdown Since']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name='Server Markup Since']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name='Failure Since Server Markup']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name='Last Failed File Upload Time']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name='Total Uploaded Files Since Server Markup']" mode="single_td"/>
  </tr>
  </xsl:template>
<!--******************************************************
  ** "Component" template used for Service Client Status
  ***************************************************-->
  <xsl:template match="Component[@name = 'Service Client Status']">
  <a name="Component_{position()}"/>
  <xsl:variable name="tableId" select="concat('comp_table_', position())"/>
  <div id='{$tableId}_title' class="table_title"><xsl:value-of select="@name"/></div>
  <table id='{$tableId}' border='1' class="display componentTable">
   <thead>
  <tr>
    <th>Name</th>
    <th>NIO</th>
    <th>Status</th>
    <th>ConfigCategory Id</th>
    <th>Markdown Start Time</th>
    <th>Markdown Reason</th>
  </tr>
   </thead>
   <tbody>
  <xsl:apply-templates select="Properties" mode="service"/>
  </tbody>
  </table>
  <div class="space20v"></div>
  </xsl:template>
<!--******************************************************
  ** "Properties" template  for Service Client Status
  ***************************************************-->
  <xsl:template match="Properties" mode="service">
    <xsl:variable name="color">
        <xsl:choose>
            <xsl:when test="Property[@name = 'NioSvcClient'] = 'true'">
            <xsl:text>gradeA</xsl:text>
            </xsl:when>
            <xsl:otherwise>
            <xsl:text></xsl:text>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:variable>
  <tr class="{$color}">
    <xsl:apply-templates select="Property[contains(@name, 'Name')]" mode="single_td"/>
        <xsl:apply-templates select="Property[contains(@name, 'NioSvcClient')]" mode="single_td"/>
    <xsl:apply-templates select="Property[contains(@name, 'Status')]" mode="single_td"/>
    <xsl:apply-templates select="Property[contains(@name, 'ConfigCategory Id')]" mode="viewconfig"/>
    <xsl:apply-templates select="Property[contains(@name, 'MarkdownStartTime')]" mode="single_td"/>
    <xsl:apply-templates select="Property[contains(@name, 'MarkdownReason')]" mode="single_td"/>
  </tr>
  </xsl:template>
<!--******************************************************
  ** "Property" template for a single td with href
  ***************************************************-->
  <xsl:template match="Property" mode="viewconfig">
  <td>
    <a href="ViewConfigCategoryXml?id={.}" title="View ConfigCategory">
    <xsl:value-of select="."/>
    </a>
  </td>
  </xsl:template>
<!--******************************************************
  ** "Component" template used for Service Client Invocation
  ***************************************************-->
  <xsl:template match="Component[@name = 'Service Client Invocation']">
  <a name="Component_{position()}"/>
  <xsl:variable name="tableId" select="concat('comp_table_', position())"/>
  <div id='{$tableId}_title' class="table_title"><xsl:value-of select="@name"/></div>
  <table id='{$tableId}' border='1' class="display componentTable">
   <thead>
  <tr>
    <th rowspan="3">Service Name</th>
    <th colspan="4">Request</th>
    <th colspan="4">Connection</th>
    <th rowspan="3">ConfigCategory Id</th>
  </tr>
  <tr>
    <th colspan="2">Cumulated Total</th>
    <th colspan="2">Current Window</th>
    <th colspan="2">Cumulated Total</th>
    <th colspan="2">Current Window</th>
  </tr>
  <tr>
    <th>Invocation</th>
    <th>Failure</th>
    <th>Invocation</th>
    <th>Failure</th>
    <th>Invocation</th>
    <th>Failure</th>
    <th>Invocation</th>
    <th>Failure</th>
  </tr>
  </thead>
  <tbody>
  <xsl:apply-templates select="Properties" mode="clientInvc"/>
  </tbody>
  </table>
  <div class="space20v"></div>
  </xsl:template>
<!--******************************************************
  ** "Properties" template  for Service Client Invocation
  ***************************************************-->
  <xsl:template match="Properties" mode="clientInvc">
  <tr>
    <xsl:apply-templates select="Property[contains(@name, 'Name')]" mode="single_td"/>
    <xsl:apply-templates select="Property[contains(@name, 'Total Num Svc Invc')]" mode="single_td"/>
    <xsl:apply-templates select="Property[contains(@name, 'Total Num Failure')]" mode="single_td"/>
    <xsl:apply-templates select="Property[contains(@name, 'Num Svc Invc In Current Window')]" mode="single_td"/>
    <xsl:apply-templates select="Property[contains(@name, 'Num Failure In Current Window')]" mode="single_td"/>
    <xsl:apply-templates select="Property[contains(@name, 'Total Num Conn Invc')]" mode="single_td"/>
    <xsl:apply-templates select="Property[contains(@name, 'Total Num Conn Failure')]" mode="single_td"/>
    <xsl:apply-templates select="Property[contains(@name, 'Num Conn Invc In Current Window')]" mode="single_td"/>
    <xsl:apply-templates select="Property[contains(@name, 'Num Conn Failure In Current Window')]" mode="single_td"/>
    <xsl:apply-templates select="Property[contains(@name, 'Category Id')]" mode="viewconfig"/>
  </tr>
  </xsl:template>
<!--******************************************************
  ** "Component" template used for MutiSiteHost
  ***************************************************-->
  <xsl:template match="Component[@name = 'MultiSiteHost']">
  <a name="Component_{position()}"/>
  <xsl:variable name="tableId" select="concat('comp_table_', position())"/>
  <div id='{$tableId}_title' class="table_title"><xsl:value-of select="@name"/></div>
  <table id='{$tableId}' border='1' class="display componentStatus">
   <thead>
  <tr>
    <th>Service Name</th>
    <th>Registered Hostname</th>
    <th>Resolved Hostname</th>
    <th>Resolved IP Address</th>
  </tr>
   </thead>
   <tbody>
  <xsl:apply-templates select="Properties" mode="multisite"/>
   </tbody>
  </table>
  <div class="space20v"></div>
  </xsl:template>
  <!--******************************************************
    ** "Properties" template  for MutiSiteHost
    ***************************************************-->
    <xsl:template match="Properties" mode="multisite">
    <tr>
    <xsl:apply-templates select="Property[@name='ServiceName']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name='RegisteredHostName']"  mode="single_td"/>
    <xsl:apply-templates select="Property[@name='HostName']"  mode="single_td"/>
    <xsl:apply-templates select="Property[@name='IpAddress']"  mode="single_td"/>
  </tr>
    </xsl:template>

  <!--******************************************************
  ** "Component" template used for FireMarshal Policy
  ***************************************************-->
  <xsl:template match="Component[@name = 'Fire Marshal Policy']">
  <a name="Component_{position()}"/>
  <xsl:variable name="tableId" select="concat('comp_table_', position())"/>
  <div id='{$tableId}_title' class="table_title"><xsl:value-of select="@name"/></div>
  <table id='{$tableId}' border='1' class="display componentTable">
    <thead>
    <tr>
      <th>Policy Name</th>
      <th>Type</th>
      <th>Version</th>
      <th>Enabled</th>
      <th>Degradation</th>
      <th>Blocked</th>
      <th>Config Category Id</th>
    </tr>
    </thead>
    <tbody>
  <xsl:apply-templates select="FMPolicy/Policy" mode="FMPolicy"/>
  </tbody>
  </table>
    <div class="space20v"></div>
  </xsl:template>
<!--******************************************************
  ** "Properties" template  for FireMarshal Policy
  ***************************************************-->
  <xsl:template match="FMPolicy/Policy" mode="FMPolicy">
  <xsl:variable name="NBSP" select="'&#160;'"/>
  <tr>
      <td><xsl:value-of select="@name"/></td>
      <td><xsl:value-of select="@type"/></td>
      <td><xsl:value-of select="@version"/></td>
      <td><xsl:value-of select="@enabled"/></td>
      <td><xsl:value-of select="@degredation"/></td>
      <td><xsl:value-of select="@blocked"/></td>
    <xsl:choose>
      <xsl:when test="CategoryId[contains(.,'Unknown')]">
        <td><xsl:copy-of select="$NBSP"/></td>
      </xsl:when>
      <xsl:otherwise>
        <td>
        <a href="ViewConfigCategoryXml?id={CategoryId}" title="View ConfigCategory">
          <xsl:value-of select="CategoryId"/>
        </a>
        </td>
      </xsl:otherwise>
    </xsl:choose>
  </tr>
  </xsl:template>
<!--******************************************************
  ** Add included templates
  ** Please, modify ValidateInternalsInclude.txt for new Application Component Status XSL
  ** Use ValidateInternalsDefInclude.txt for Kernel Component Status XSL
  ***************************************************-->



  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'CacheManager']">
  <a name="Component_{position()}"/>
  <div class="table_title" id="scrollableComponentTableId_title"><xsl:value-of select="@name"/></div>
  <table id="scrollableComponentTableId" border="1" class="display">
    <thead>
  <tr class="left">
    <th rowspan="2">Cache</th>
    <th rowspan="2">State</th>
    <th rowspan="2">Init TimeMs</th>
    <th rowspan="2">InitPut TimeMs</th>
        <th rowspan="2">Refresh TimeMs</th>
        <th rowspan="2">Entries</th>
        <th rowspan="2">Objects</th>
        <th rowspan="2">Resident Objs</th>
        <th rowspan="2">Resident Entries</th>
        <th rowspan="2">Refreshes</th>

    <th colspan="7">Since Start</th>
    <th colspan="9">Since Refresh</th>

        <th rowspan="2">Backing Store</th>

    <th colspan="3">Resident Serial Sizes</th>
    <th colspan="3">Non-Resident Serial Sizes</th>
    <td> </td>
  </tr>
  <tr class="left">
    <th>Hits</th>
    <th>Misses</th>
    <th>Access</th>
    <th>Back Puts</th>
    <th>Back Gets</th>
    <th>Index Back Puts</th>
    <th>Index Back Gets</th>
    <th>Hits</th>
    <th>Unique Hits</th>
    <th>Misses</th>
    <th>Access</th>
    <th>Unique Access</th>
    <th>Back Puts</th>
    <th>Back Gets</th>
    <th>Index Back Puts</th>
    <th>Index Back Gets</th>
    <th>Values</th>
    <th>Keys</th>
    <th>Total +overhead</th>
    <th>Values</th>
    <th>Keys +overhead</th>
    <th>Total +overhead</th>
    <th>Offload Saving Total Size</th>
  </tr>
  </thead>
  <tfoot>
     <xsl:apply-templates select="Properties" mode="footer"/>
  </tfoot>
  <tbody>
   <xsl:apply-templates select="Properties" mode="cacheManager"/>
  </tbody>
  </table>
  </xsl:template>


    <xsl:template match="Properties" mode="footer">
     <xsl:if test="Property/@name = 'CacheName' and (Property[contains(., '== SUMMARY ==')])">
      <tr>
        <xsl:apply-templates select="Property[@name = 'CacheName']" mode="single_td"/>
        <xsl:apply-templates select="Property[@name = 'CacheState']" mode="single_td"/>
        <xsl:apply-templates select="Property[@name = 'InitTimeMs']" mode="single_td"/>
        <xsl:apply-templates select="Property[@name = 'InitPutTimeMs']" mode="single_td"/>
        <xsl:apply-templates select="Property[@name = 'RefreshTimeMs']" mode="single_td"/>
        <xsl:apply-templates select="Property[@name = 'Entries']" mode="single_td"/>
        <xsl:apply-templates select="Property[@name = 'Objects']" mode="single_td"/>
        <xsl:apply-templates select="Property[@name = 'ResidentObjects']" mode="single_td"/>
        <xsl:apply-templates select="Property[@name = 'ResidentEntries']" mode="single_td"/>

        <td> </td>
        <td> </td>
        <td> </td>
        <td> </td>
        <td> </td>
        <td> </td>
        <td> </td>
        <td> </td>
        <td> </td>
        <td> </td>
        <td> </td>
        <td> </td>
        <td> </td>
        <td> </td>
        <td> </td>
        <td> </td>
        <td> </td>
        <td> </td>

        <xsl:apply-templates select="Property[@name = 'ResidentValueSize']" mode="single_td"/>
        <xsl:apply-templates select="Property[@name = 'ResidentKeySize']" mode="single_td"/>
        <xsl:apply-templates select="Property[@name = 'ResidentTotalSize']" mode="single_td"/>
        <xsl:apply-templates select="Property[@name = 'NonResidentValueSize']" mode="single_td"/>
        <xsl:apply-templates select="Property[@name = 'NonResidentKeySize']" mode="single_td"/>
        <xsl:apply-templates select="Property[@name = 'NonResidentTotalSize']" mode="single_td"/>
        <xsl:apply-templates select="Property[@name = 'OffloadSavingTotalSize']" mode="single_td"/>
        </tr>
        </xsl:if>
    </xsl:template>

  <xsl:template match="Properties" mode="cacheManager">
     <xsl:if test="Property/@name = 'CacheName' and not (Property[contains(., '== SUMMARY ==')])">
      <tr>
    <xsl:apply-templates select="Property[@name = 'CacheName']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name = 'CacheState']" mode="single_td"/>
        <xsl:choose>
        <xsl:when test="Property[@name = 'InitTimeMs']">
    <xsl:apply-templates select="Property[@name = 'InitTimeMs']" mode="single_td"/>
    </xsl:when>
    <xsl:otherwise>
    <td> </td>
    </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
        <xsl:when test="Property[@name = 'InitPutTimeMs']">
    <xsl:apply-templates select="Property[@name = 'InitPutTimeMs']" mode="single_td"/>
        </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'RefreshTimeMs']">
    <xsl:apply-templates select="Property[@name = 'RefreshTimeMs']" mode="single_td"/>
        </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'Entries']">
    <xsl:apply-templates select="Property[@name = 'Entries']" mode="single_td"/>
        </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'Objects']">
    <xsl:apply-templates select="Property[@name = 'Objects']" mode="single_td"/>
        </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'ResidentObjects']">
    <xsl:apply-templates select="Property[@name = 'ResidentObjects']" mode="single_td"/>
        </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'ResidentEntries']">
    <xsl:apply-templates select="Property[@name = 'ResidentEntries']" mode="single_td"/>
        </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'Refreshes']">
    <xsl:apply-templates select="Property[@name = 'Refreshes']" mode="single_td"/>
        </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'Hits']">
    <xsl:apply-templates select="Property[@name = 'Hits']" mode="single_td"/>
        </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'Misses']">
    <xsl:apply-templates select="Property[@name = 'Misses']" mode="single_td"/>
        </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'Access']">
    <xsl:apply-templates select="Property[@name = 'Access']" mode="single_td"/>
        </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'BackPuts']">
    <xsl:apply-templates select="Property[@name = 'BackPuts']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'BackGets']">
    <xsl:apply-templates select="Property[@name = 'BackGets']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'IndexBackPuts']">
    <xsl:apply-templates select="Property[@name = 'IndexBackPuts']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'IndexBackGets']">
    <xsl:apply-templates select="Property[@name = 'IndexBackGets']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'RefreshHits']">
    <xsl:apply-templates select="Property[@name = 'RefreshHits']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'RefreshUniqueHits']">
    <xsl:apply-templates select="Property[@name = 'RefreshUniqueHits']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'RefreshMisses']">
    <xsl:apply-templates select="Property[@name = 'RefreshMisses']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'RefreshAccess']">
    <xsl:apply-templates select="Property[@name = 'RefreshAccess']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'RefreshUniqueAccess']">
    <xsl:apply-templates select="Property[@name = 'RefreshUniqueAccess']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'RefreshBackPuts']">
    <xsl:apply-templates select="Property[@name = 'RefreshBackPuts']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'RefreshBackGets']">
    <xsl:apply-templates select="Property[@name = 'RefreshBackGets']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'RefreshIndexBackPuts']">
    <xsl:apply-templates select="Property[@name = 'RefreshIndexBackPuts']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'RefreshIndexBackGets']">
    <xsl:apply-templates select="Property[@name = 'RefreshIndexBackGets']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'BackingStoreClassName']">
    <xsl:apply-templates select="Property[@name = 'BackingStoreClassName']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'ResidentValueSize']">
    <xsl:apply-templates select="Property[@name = 'ResidentValueSize']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'ResidentKeySize']">
    <xsl:apply-templates select="Property[@name = 'ResidentKeySize']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'ResidentTotalSize']">
    <xsl:apply-templates select="Property[@name = 'ResidentTotalSize']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'NonResidentValueSize']">
    <xsl:apply-templates select="Property[@name = 'NonResidentValueSize']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'NonResidentKeySize']">
    <xsl:apply-templates select="Property[@name = 'NonResidentKeySize']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'NonResidentTotalSize']">
    <xsl:apply-templates select="Property[@name = 'NonResidentTotalSize']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        <xsl:choose>
        <xsl:when test="Property[@name = 'OffloadSavingTotalSize']">
    <xsl:apply-templates select="Property[@name = 'OffloadSavingTotalSize']" mode="single_td"/>
    </xsl:when>
        <xsl:otherwise>
        <td> </td>
        </xsl:otherwise>
        </xsl:choose>
        </tr>
     </xsl:if>
  </xsl:template>





  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[contains(@name, 'Xsl') and contains(@name, 'Cache')]">
  <a name="Component_{position()}"/>
  <div class="table_title" id="xslCacheTable_title"><xsl:value-of select="@name"/></div>
    <xsl:apply-templates select="Properties/Property[@name = 'Status']" mode="xsl_cache_expanded"/>
    <xsl:apply-templates select="Properties/Property[@name = 'Last Refresh']" mode="xsl_cache_expanded"/>
    <xsl:apply-templates select="Properties/Property[@name = 'Number of Entries']" mode="xsl_cache_expanded"/>
    <xsl:apply-templates select="Properties/Property[@name = 'Number of Currently Cached Entries']" mode="xsl_cache_expanded"/>
    <xsl:apply-templates select="Properties/Property[@name = 'Total Usage']" mode="xsl_cache_expanded"/>
    <xsl:apply-templates select="Properties/Property[@name = 'Total Cache Hit']" mode="xsl_cache_expanded"/>
    <xsl:apply-templates select="Properties/Property[@name = 'Total Evictions']" mode="xsl_cache_expanded"/>

  <table border="1" class="display componentTable" id="xslCacheTable">
   <thead>
  <tr>
    <th>File Path</th>
    <th>Usage</th>
    <th>Cache Hit</th>
    <th>Load Time</th>
    <th>Access Timestamp</th>
    <th>In Cache</th>
    <th>Evict Count</th>
  </tr>
   </thead>
   <tbody>
  <xsl:for-each select="Properties">
    <xsl:sort select="Property[@name = 'usage']" data-type="number" order="descending"/>
  <tr>
    <xsl:apply-templates select="Property[@name = 'filePath']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name = 'usage']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name = 'cacheHits']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name = 'loadTime']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name = 'accessTime']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name = 'inCache']" mode="single_td"/>
    <xsl:apply-templates select="Property[@name = 'numEviction']" mode="single_td"/>
  </tr>
  </xsl:for-each>
   </tbody>
  </table>
  </xsl:template>

  <xsl:template match="Property" mode="xsl_cache_expanded">
   <div class="page_subtitle"><xsl:value-of select="@name"/><xsl:text>:&amp;nbsp;</xsl:text><xsl:value-of select="."/></div>
  </xsl:template>




  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[contains(@name, 'TransformStats') and not(contains(@name, 'Coproc'))]">
  <a name="Component_{position()}"/>
  <div class="table_title" id="xslTransformStatsTable_title"><xsl:value-of select="@name"/></div>
  <table border="1" class="display componentTable" id="xslTransformStatsTable">
  <thead>
   <tr>
    <th>Total Requests Processed</th>
    <th>Requests in last 1 min</th>
    <th>Requests in last 10 min</th>
    <th>Error Count</th>
    <th>Min/Max/Avg (ms)</th>
   </tr>
  </thead>
  <tbody>
  <tr>
  <xsl:apply-templates select="Properties/Property[@name = 'Total Requests Processed']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'Requests in last 1 min']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'Requests in last 10 min']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'Transform Error Count']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'Min/Max/Avg (ms)']" mode="center_single_td"/>
  </tr>
  </tbody>
</table>
<div class="spce20h"/>
<table border="1" class="display componentTable" if="xslTransformStatsTable2">
  <tr>
    <th>File Path</th>
    <th>Request Count</th>
    <th>Error Count</th>
    <th>Min/Max/Avg (ms)</th>
  </tr>

  <xsl:for-each select="Properties">
    <xsl:sort select="Property[@name = 'Request Count']" data-type="number" order="descending"/>
  <tr>
    <td>
        <xsl:value-of select="Property[@name = 'File Path']"/>
        </td>
        <td>
          <xsl:value-of select="Property[@name = 'Request Count']"/>
        </td>
        <td>
        <xsl:value-of select="Property[@name = 'Error Count']"/>
        </td>
        <td>
      <xsl:value-of select="Property[@name = 'File Min/Max/Avg (ms)']"/>
        </td>
  </tr>
  </xsl:for-each>
  </table>
  </xsl:template>




  <xsl:template match="Component[contains(@name, 'CoprocTransformStats')]">
  <a name="Component_{position()}"/>
  <div class="table_title" id="xslTransformStatsTable3_title"><xsl:value-of select="@name"/></div>
  <table border="1" class="display" id="xslTransformStatsTable3">
   <thead>
  <tr>
    <th colspan="2">Total Requests Processed</th>
    <th colspan="2">Requests in last 1 min</th>
    <th colspan="2">Requests in last 10 min</th>
    <th colspan="2">Error Count</th>
    <th colspan="2">Not In Cache Count</th>
    <th colspan="2">Busy Compiling Count</th>
    <th colspan="2">Min/Max/Avg (ms)</th>
    <th colspan="2">Coproc Min/Max/Avg (ms)</th>
    <th colspan="2">Connection Sockets</th>
  </tr>
  <tr>
  <th>Created</th>
  <th>Reused</th>
  </tr>
  <tr>
  <xsl:apply-templates select="Properties/Property[@name = 'Total Requests Processed']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'Requests in last 1 min']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'Requests in last 10 min']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'Transform Error Count']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'NotInCache Count']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'BusyCompile Count']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'Min/Max/Avg (ms)']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'Coproc Min/Max/Avg (ms)']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'Socket Connections Created']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'Socket Reuse Count']" mode="center_single_td"/>
  </tr>

  <tr>
    <th colspan="4">File Path</th>
    <th>Request Count</th>
    <th>Error Count</th>
    <th>Not In Cache Count</th>
    <th>Busy Compiling Count</th>
    <th>Min/Max/Avg (ms)</th>
    <th>Coproc Min/Max/Avg (ms)</th>
  </tr>
   </thead>
   <tbody>
  <xsl:for-each select="Properties">
    <xsl:sort select="Property[@name = 'Request Count']" data-type="number" order="descending"/>
  <tr>
    <td colspan="4">
        <xsl:value-of select="Property[@name = 'File Path']"/>
        </td>
        <td align="center">
          <xsl:value-of select="Property[@name = 'Request Count']"/>
        </td>
        <td align="center">
        <xsl:value-of select="Property[@name = 'Error Count']"/>
        </td>
        <td align="center">
      <xsl:value-of select="Property[@name = 'File NotInCache Count']"/>
        </td>
        <td align="center">
      <xsl:value-of select="Property[@name = 'File BusyCompile Count']"/>
        </td>
        <td align="center">
      <xsl:value-of select="Property[@name = 'File Min/Max/Avg (ms)']"/>
        </td>
        <td align="center">
      <xsl:value-of select="Property[@name = 'Coproc File Min/Max/Avg (ms)']"/>
        </td>
  </tr>
  </xsl:for-each>
   </tbody>
  </table>
  <div class="space20v"/>
  </xsl:template>

  <xsl:template match="Property" mode="center_single_td">
    <td align="center">
      <xsl:value-of select="."/>
    </td>
  </xsl:template>



  <xsl:template match="Component[contains(@name, 'XsltService')]">
  <a name="Component_{position()}"/>
  <div class="table_title" id="xsltServiceTable_title"><xsl:value-of select="@name"/></div>
  <table border="1" class="display componentTable" id="xsltServiceTable">
   <thead>
  <tr>
    <th>Active Thread Count</th>
    <th>Command Queue Size</th>
    <th>XML size Min/Max/Avg (kb)</th>
    <th>Total Requests Processed</th>
    <th>Requests in last 1 min</th>
    <th>Requests in last 10 min</th>
    <th>Error Count</th>
    <th>Not In Cache Count</th>
    <th>Busy Compiling Count</th>
    <th>Min/Max/Avg (ms)</th>
  </tr>
   </thead>
   <tbody>
  <tr>
  <xsl:apply-templates select="Properties/Property[@name = 'CommandQueueSize']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'ActiveThreadCount']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'XmlSize']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'Total Requests Processed']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'Requests in last 1 min']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'Requests in last 10 min']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'Transform Error Count']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'NotInCache Count']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'BusyCompile Count']" mode="center_single_td"/>
  <xsl:apply-templates select="Properties/Property[@name = 'Min/Max/Avg (ms)']" mode="center_single_td"/>
  </tr>
   </tbody>
  </table>
  <div class="space20v"/>
  <table border="1" class="display componentTable" id="xsltServiceTable2">
   <thead>
  <tr>
    <th>File Path</th>
    <th>Request Count</th>
    <th>Error Count</th>
    <th>Not In Cache Count</th>
    <th>Busy Compiling Count</th>
    <th>Min/Max/Avg (ms)</th>
  </tr>
   </thead>
   <tbody>
  <xsl:for-each select="Properties">
    <xsl:sort select="Property[@name = 'Request Count']" data-type="number" order="descending"/>
  <tr>
    <td colspan="5">
        <xsl:value-of select="Property[@name = 'File Path']"/>
        </td>
        <td align="center">
          <xsl:value-of select="Property[@name = 'Request Count']"/>
        </td>
        <td align="center">
        <xsl:value-of select="Property[@name = 'Error Count']"/>
        </td>
        <td align="center">
      <xsl:value-of select="Property[@name = 'File NotInCache Count']"/>
        </td>
        <td align="center">
      <xsl:value-of select="Property[@name = 'File BusyCompile Count']"/>
        </td>
        <td align="center">
      <xsl:value-of select="Property[@name = 'File Min/Max/Avg (ms)']"/>
        </td>
  </tr>
  </xsl:for-each>
   </tbody>
  </table>
  <br/>
  </xsl:template>




  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'Configuration Change History']">
  <a name="Component_{position()}"/>
  <div class="table_title" id="configChangeHistory_title"><xsl:value-of select="@name"/></div>
  <table border="1" class="display componentTable" id="configChangeHistory">
   <thead>
  <tr>
    <th>ConfigCategory Id</th>
    <th>Property Name</th>
    <th>Old Value</th>
    <th>New Value</th>
    <th>Start Time</th>
    <th>End Time</th>
    <th>Status</th>
    <th>Message</th>
    <th>StackTrace</th>
    <th>Responsible Party</th>
  </tr>
   </thead>
  <xsl:apply-templates select="Properties" mode="configchg"/>
  </table>
  </xsl:template>

  <xsl:template match="Properties" mode="configchg">
  <tr>
    <xsl:apply-templates select="Property[@name='ConfigCategoryId']" mode="config_chg_id"/>
    <xsl:apply-templates select="Property[@name='PropertyName']" mode="config_chg"/>
    <xsl:apply-templates select="Property[@name='OldValue']" mode="config_chg"/>
    <xsl:apply-templates select="Property[@name='NewValue']" mode="config_chg"/>
    <xsl:apply-templates select="Property[@name='StartTime']" mode="config_chg"/>
    <xsl:apply-templates select="Property[@name='EndTime']" mode="config_chg"/>
    <xsl:apply-templates select="Property[@name='Status']" mode="config_chg"/>
    <xsl:apply-templates select="Property[@name='Message']" mode="config_chg"/>
    <xsl:apply-templates select="Property[@name='StackTrace']" mode="config_chg"/>
    <xsl:apply-templates select="Property[@name='ResponsibleParty']" mode="config_chg"/>
  </tr>
  </xsl:template>

  <xsl:template match="Property" mode="config_chg_id">
     <td>
     <a href="ViewConfigCategoryXml?id={.}"><xsl:value-of select="."/></a>
      </td>
  </xsl:template>

  <xsl:template match="Property" mode="config_chg">
     <td>
     <xsl:value-of select="."/>
      </td>
  </xsl:template>



  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'DDRToupleProviders']">
  <a name="Component_{position()}"/>
  <div class="table_title" id="allScrollableTableId_title"><xsl:value-of select="@name"/></div>
  <table border="1" class="display" id="allScrollableTableId">
    <thead>
  <tr>
    <th>Logical Table</th>
    <th>Touple Provider</th>
    <th>All Possible Touples (PhysicalTable/Datasource)</th>
  </tr>
  </thead>
  <tbody>
  <xsl:apply-templates select="Properties" mode="DDRToupleProviders"/>
  </tbody>
  </table>
  </xsl:template>

  <xsl:template match="Properties" mode="DDRToupleProviders">
  <tr>
    <xsl:apply-templates select="Property[@name='LogicalTable']" mode="DDRToupleProviders"/>
    <xsl:apply-templates select="Property[@name='ToupleProvider']" mode="DDRToupleProviders"/>
    <xsl:apply-templates select="Property[@name='AllPossibleTouples']" mode="DDRToupleProviders"/>
  </tr>
  </xsl:template>

  <xsl:template match="Property" mode="DDRToupleProviders">
    <td>
    <pre><xsl:value-of select="."/></pre>
   </td>
  </xsl:template>



  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'DDRToupleProvidersFiltered']">
    <meta http-equiv="REFRESH" content="0; url='/admin/v3console/DDRToupleProvidersFiltered'"/>
  </xsl:template>



  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'DDRSubSequenceToupleProviders']">
  <a name="Component_{position()}"/>
  <div class="table_title" id="allScrollableTableId_title"><xsl:value-of select="@name"/></div>
  <table border="1" id="allScrollableTableId">
    <thead>
  <tr>
    <th><center><b>ID</b></center></th>
    <th><center><b>Sequence Touple Provider</b></center></th>
    <th><center><b>All Possible Touples (SequenceName/Datasource)</b></center></th>
  </tr>
  </thead>
  <tbody>
  <xsl:apply-templates select="Properties" mode="DDRSubSequenceToupleProviders"/>
  </tbody>
  </table>
  </xsl:template>

  <xsl:template match="Properties" mode="DDRSubSequenceToupleProviders">
  <tr>
    <xsl:apply-templates select="Property[@name='ID']" mode="DDRSubSequenceToupleProviders"/>
    <xsl:apply-templates select="Property[@name='SubSequenceToupleProvider']" mode="DDRSubSequenceToupleProviders"/>
    <xsl:apply-templates select="Property[@name='AllPossibleTouples']" mode="DDRSubSequenceToupleProviders"/>
  </tr>
  </xsl:template>

  <xsl:template match="Property" mode="DDRSubSequenceToupleProviders">
    <td>
    <pre><xsl:value-of select="."/></pre>
   </td>
  </xsl:template>




  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'WebEntryHandlerUsageStatus']">
  <a name="Component_{position()}"/>
  <div class="table_title" id="webEntryStatusTable_title"><xsl:value-of select="@name"/></div>
  <table border="1" class="display componentTable" id="webEntryStatusTable">
   <thead>
  <tr>
    <th>Handler</th>
    <th>Command Name</th>
    <th>Usage Count</th>
  </tr>
   </thead>
   <tbody>
  <xsl:for-each select="WebEntryHandlerUsageStatus/CmdUsages/Handler">
    <xsl:variable name="rowspan" select="count(Cmd)"/>
    <tr>
      <td rowspan="{$rowspan}">
        <xsl:value-of select="@name"/>
      </td>
            <td>
                <xsl:value-of select="Cmd[1]/Name"/>
            </td>
            <td>
                <xsl:value-of select="Cmd[1]/@count"/>
            </td>
      </tr>
    <xsl:for-each select="Cmd">
     <xsl:if test="position() &gt; 1">
        <tr>
          <td>
            <xsl:value-of select="Name"/>
          </td>
          <td>
            <xsl:value-of select="@count"/>
          </td>
      </tr>
     </xsl:if>
    </xsl:for-each>
  </xsl:for-each>
   </tbody>
  </table>

  <div class="space20v"/>

  <b><a href="UpdateConfigCategoryXml?id=ebay.kernel.logservice&amp;com.ebay.af.pres.web=fine">Enable</a> or <a href="UpdateConfigCategoryXml?id=ebay.kernel.logservice&amp;com.ebay.af.pres.web=default">Disable</a> debug output in ebay.log for web entry handler</b>
  </xsl:template>




  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'DataSources']">
  <div class="table_title" id="dsTableId_title">Data Sources</div>
    <table align="center" border="1" class="display scrollableTable" id="dsTableId">
     <thead>
      <tr class="nowrap">
        <th class="nowrap" rowspan="2">Database</th>
        <th class="nowrap" colspan="5">Properties</th>
        <th class="nowrap" colspan="19">Connection Statistics</th>
        <th class="nowrap" colspan="10">Connection Pool Config</th>
        <th class="nowrap" colspan="12">Scorecard</th>
      </tr>
      <tr>
                 <th class="nowrap">Required</th>
                       <th class="nowrap">Used</th>
                       <th class="nowrap">User</th>
                       <th class="nowrap">Connect URL</th>
                       <th class="nowrap">Status</th>

                       <th class="nowrap">Adapter</th>
                       <th class="nowrap">Pool Sz</th>
                       <th class="nowrap">Active Num</th>
                       <th class="nowrap">Total Waits</th>
                       <th class="nowrap">Concurrent Waiters</th>
                       <th class="nowrap">Timeouts</th>
                       <th class="nowrap">Idle Num</th>
                       <th class="nowrap">Allocated Num</th>
                       <th class="nowrap">Created Num</th>
                       <th class="nowrap">Closed Num</th>
                       <th class="nowrap">Returned Num</th>
                       <th class="nowrap">% Maxed</th>
                       <th class="nowrap">% Used</th>
                       <th class="nowrap">Stmt Sz</th>
                       <th class="nowrap">Dscrd Stmts</th>
                       <th class="nowrap">% Stmt Cache Maxed</th>
                       <th class="nowrap">Idled Stmts</th>
                       <th class="nowrap">Cache Buffer Sizes in bytes(byte[]:char[])</th>
                       <th class="nowrap">Throttle Data</th>

                       <th class="nowrap">Min Pool Sz</th>
                       <th class="nowrap">Max Pool Sz</th>
                       <th class="nowrap">Conn T/O</th>
                       <th class="nowrap">Idle T/O</th>
                       <th class="nowrap">Orphan T/O</th>
                       <th class="nowrap">Max Stmt Sz</th>
                       <th class="nowrap">Idle Stmt T/O</th>
                       <th class="nowrap">Connection Properties</th>
                       <th class="nowrap">AutoFlushType</th>
                       <th class="nowrap">ConnRateThrottle</th>

                       <th class="nowrap">Create Conn Failures Since Markup</th>
                       <th class="nowrap">Last Create Conn Failure</th>
                       <th class="nowrap">Auto Markdown Create Conn Failures</th>
                       <th class="nowrap">Error Using Conn Failures Since Markup</th>
                       <th class="nowrap">Last Error Using Conn Failure</th>
                       <th class="nowrap">Auto Markdown Error Using Conn Failures</th>
                       <th class="nowrap">Conn Wait T/Os Since Markup</th>
                       <th class="nowrap">Last Wait T/O</th>
                       <th class="nowrap">Auto Markdown Wait T/Os</th>
                       <th class="nowrap">Reqs Since Markdown</th>
                       <th class="nowrap">Markdown Start Time</th>
                       <th class="nowrap">UTF8?</th>
      </tr>
    </thead>
    <tbody>

    <xsl:if test="DataSourceList/Error">
      <tr class="gradeX">
      <xsl:apply-templates select="DataSourceList/Error"/>
      <xsl:call-template name="tds">
        <xsl:with-param name="howMany" select="46"/>
      </xsl:call-template>
      </tr>
    </xsl:if>
    <xsl:apply-templates select="DataSourceList/DataSource"/>
    </tbody>
    </table>
    <div class="space20v"/>
  </xsl:template>

  <xsl:template match="Error">
      <td class="td_error">Errors</td>
    <td class="td_error nowrap">
      <pre><xsl:value-of select="."/></pre>
    </td>
  </xsl:template>

  <xsl:template match="DataSourceList/DataSource">

    <xsl:variable name="rowClass">
      <xsl:choose>
        <xsl:when test="Status='Up'">
          <xsl:text>gradeA</xsl:text>
        </xsl:when>
        <xsl:when test="Status='Iffy'">
          <xsl:text>gradeC</xsl:text>
        </xsl:when>
        <xsl:otherwise>
          <xsl:text>gradeX</xsl:text>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>


      <xsl:variable name="dbName">
          <xsl:value-of select="Name"/>
        </xsl:variable>
    <tr class="{$rowClass}">
       <td class="nowrap">
      <xsl:choose>
        <xsl:when test="@isRequired ='true'">
          <xsl:apply-templates select="Name" mode="database-name-required"/>
        </xsl:when>
        <xsl:when test="@isUsed ='true'">
          <xsl:apply-templates select="Name" mode="database-name-required"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:apply-templates select="Name" mode="database"/>
        </xsl:otherwise>
      </xsl:choose>
       </td>

      <xsl:choose>
        <xsl:when test="Error">
          <xsl:apply-templates select="Error"/>
                       <xsl:call-template name="tds">
                         <xsl:with-param name="howMany" select="3"/>
                       </xsl:call-template>
        </xsl:when>
        <xsl:otherwise>
          <td><xsl:value-of select="@isRequired"/></td>
          <td><xsl:value-of select="@isUsed"/></td>
          <td><xsl:value-of select="User"/></td>
          <td><xsl:value-of select="ConnectUrl"/></td>
          <td class="nowrap"><xsl:value-of select="Status"/></td>
        </xsl:otherwise>
      </xsl:choose>

      <xsl:choose>
        <xsl:when test="ConnectionStatistics">
          <xsl:apply-templates select="ConnectionStatistics">
            <xsl:with-param name="dbName" select="$dbName"/>
          </xsl:apply-templates>
        </xsl:when>
        <xsl:otherwise>
          <xsl:call-template name="tds">
            <xsl:with-param name="howMany" select="19"/>
          </xsl:call-template>
        </xsl:otherwise>
      </xsl:choose>

      <xsl:choose>
        <xsl:when test="ConnectionPoolConfig">
          <xsl:apply-templates select="ConnectionPoolConfig">
            <xsl:with-param name="dbName" select="$dbName"/>
          </xsl:apply-templates>
        </xsl:when>
        <xsl:otherwise>
          <xsl:call-template name="tds">
            <xsl:with-param name="howMany" select="10"/>
          </xsl:call-template>
        </xsl:otherwise>
      </xsl:choose>

      <xsl:choose>
        <xsl:when test="Scorecard">
          <xsl:apply-templates select="Scorecard">
            <xsl:with-param name="dbName" select="$dbName"/>
          </xsl:apply-templates>
        </xsl:when>
        <xsl:otherwise>
          <xsl:call-template name="tds">
            <xsl:with-param name="howMany" select="12"/>
          </xsl:call-template>
        </xsl:otherwise>
      </xsl:choose>

    </tr>
  </xsl:template>


  <xsl:template match="Name" mode="database-name-required">
      <xsl:text>*</xsl:text>
      <xsl:value-of select="."/>
  </xsl:template>


  <xsl:template match="Name" mode="database">
    <xsl:value-of select="."/>
  </xsl:template>


  <xsl:template match="ConnectionStatistics">
      <xsl:param name="dbName"/>
          <xsl:choose>
                            <xsl:when test="Error">
                                <xsl:apply-templates select="Error"/>
                           <xsl:call-template name="tds">
                             <xsl:with-param name="howMany" select="17"/>
                           </xsl:call-template>
                            </xsl:when>
                            <xsl:when test="NoStats">
                                <td class="nowrap"><xsl:value-of select="NoStats"/></td>
                           <xsl:call-template name="tds">
                             <xsl:with-param name="howMany" select="18"/>
                           </xsl:call-template>
                            </xsl:when>
                            <xsl:otherwise>
                                <td class="nowrap"><xsl:value-of select="Adapter"/></td>
                                <td class="nowrap"><xsl:value-of select="PoolSize"/></td>
                                <td class="nowrap"><xsl:value-of select="ActiveCount"/></td>
                                <td class="nowrap"><xsl:value-of select="Waits"/></td>
                                <td class="nowrap"><xsl:value-of select="ConcurrentWaiters"/></td>
                                <td class="nowrap"><xsl:value-of select="Timeouts"/></td>
                                <td class="nowrap"><xsl:value-of select="IdleCount"/></td>
                                <td class="nowrap"><xsl:value-of select="Allocated"/></td>
                                <td class="nowrap"><xsl:value-of select="Created"/></td>
                                <td class="nowrap"><xsl:value-of select="Destroyed"/></td>
                                <td class="nowrap"><xsl:value-of select="Returned"/></td>
                                <td class="nowrap"><xsl:value-of select="PercentMaxed"/></td>
                                <td class="nowrap"><xsl:value-of select="PercentUsed"/></td>
                                <td class="nowrap"><xsl:value-of select="StmtCacheSize"/></td>
                                <td class="nowrap"><xsl:value-of select="DiscardedStatements"/></td>
                                <td class="nowrap"><xsl:value-of select="PercentStmtCacheMaxed"/></td>
                                <td class="nowrap"><xsl:value-of select="IdledOutStatements"/></td>
                                <td class="nowrap"><xsl:value-of select="CacheBufferSize"/></td>
                                <xsl:choose>
                                    <xsl:when test="TlWarmupEndTime">
                                        <td class="nowrap"><xsl:value-of select="TlWarmupEndTime"/>/
                                            <xsl:value-of select="TlDelayStartTime"/>/
                                            <xsl:value-of select="TlDelayEndTime"/>/
                                            <xsl:value-of select="TlDelayedAttempts"/>/
                                            <xsl:value-of select="TlConnectionRequestTime"/></td>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <td>N/A</td>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:otherwise>
          </xsl:choose>

  </xsl:template>


  <xsl:template match="ConnectionPoolConfig">
      <xsl:param name="dbName"/>

            <xsl:choose>
                  <xsl:when test="Error">
                        <xsl:apply-templates select="Error"/>
                         <xsl:call-template name="tds">
                           <xsl:with-param name="howMany" select="8"/>
                         </xsl:call-template>
                      </xsl:when>
                      <xsl:otherwise>
                          <td class="nowrap"><xsl:value-of select="MinPoolSize"/></td>
                          <td class="nowrap"><xsl:value-of select="MaxPoolSize"/></td>
                          <td class="nowrap"><xsl:value-of select="ConnectionTimeout"/></td>
                          <td class="nowrap"><xsl:value-of select="IdleTimeout"/></td>
                          <td class="nowrap"><xsl:value-of select="OrphanTimeout"/></td>
                          <td class="nowrap"><xsl:value-of select="MaxStmtCacheSize"/></td>
                          <td class="nowrap"><xsl:value-of select="IdleStmtTimeout"/></td>
                          <td class="nowrap"><xsl:value-of select="ConnectionProperties"/></td>
                          <td class="nowrap"><xsl:value-of select="AutoFlushTypeDesc"/></td>
                          <td class="nowrap"><xsl:value-of select="ConnRateThrottle"/></td>
                      </xsl:otherwise>
            </xsl:choose>

  </xsl:template>


  <xsl:template match="Scorecard">
    <xsl:param name="dbName"/>

         <xsl:choose>
                   <xsl:when test="Error">
                       <xsl:apply-templates select="Error"/>
             <xsl:call-template name="tds">
             <xsl:with-param name="howMany" select="10"/>
             </xsl:call-template>
                   </xsl:when>
                   <xsl:otherwise>
                        <td class="nowrap"><xsl:value-of select="CreateConnectionFailuresSinceMarkup"/></td>
                        <td class="nowrap"><xsl:value-of select="LastCreateConnectionFailure"/></td>
                        <td class="nowrap"><xsl:value-of select="AutoMarkdownCreateConnectionFailures"/></td>
                        <td class="nowrap"><xsl:value-of select="ErrorUsingConnectionFailuresSinceMarkup"/></td>
                        <td class="nowrap"><xsl:value-of select="LastErrorUsingConnectionFailure"/></td>
                        <td class="nowrap"><xsl:value-of select="AutoMarkdownErrorUsingConnFailures"/></td>
                        <td class="nowrap"><xsl:value-of select="ConnectionWaitTimeoutSinceMarkup"/></td>
                        <td class="nowrap"><xsl:value-of select="LastWaitTimeout"/></td>
                        <td class="nowrap"><xsl:value-of select="AutoMarkdownWaitTimeout"/></td>
                        <td class="nowrap"><xsl:value-of select="RequestsSinceMarkdown"/></td>
                        <td class="nowrap"><xsl:value-of select="MarkdownStartTime"/></td>
                        <td><xsl:value-of select="IsUTF8"/></td>
                   </xsl:otherwise>
         </xsl:choose>
  </xsl:template>


  <xsl:template name="tds">
    <xsl:param name="howMany">1</xsl:param>
    <xsl:if test="$howMany &gt; 0">
      <td> </td>
      <xsl:call-template name="tds">
        <xsl:with-param name="howMany" select="$howMany - 1"/>
      </xsl:call-template>
    </xsl:if>
  </xsl:template>



  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'PersistedDataSources']">
      <div class="page_title">Persisted Data Sources</div>
    <xsl:apply-templates select="PersistedDataSources"/>
  </xsl:template>

  <xsl:template match="Error">
    <td><pre><xsl:value-of select="."/></pre></td>
  </xsl:template>

  <xsl:template match="PersistedDataSources">
      <div class="space20v"/>
      <div class="table_title" id="persistedDataSourcesTable_title">Source: <xsl:value-of select="Source"/></div>
    <table border="1" width="100%" class="display componentTable" id="persistedDataSourcesTable">
      <thead>
      <tr>
        <th>Name</th>
        <th>User</th>
        <th>URL</th>
        <th>Min Pool Sz</th>
        <th>Max Pool Sz</th>
        <th>Conn T/O</th>
        <th>Idle T/O</th>
        <th>Orphan T/O</th>
        <th>Max Stmt Sz</th>
        <th>Idle Stmt T/O</th>
        <th>Driver Type</th>
      </tr>
      </thead>
      <tbody>
      <xsl:apply-templates select="PersistedConnPoolConfig"/>
      </tbody>
    </table>
  </xsl:template>


  <xsl:template match="PersistedConnPoolConfig">

      <xsl:choose>
        <xsl:when test="Error">
          <tr class="gradeX">
            <td>Errors:</td>
          <xsl:apply-templates select="Error"/>
                    <td> </td>
                    <td> </td>
                    <td> </td>
                    <td> </td>
                    <td> </td>
                    <td> </td>
                    <td> </td>
                    <td> </td>
                    <td> </td>
          </tr>
        </xsl:when>
        <xsl:otherwise>
          <tr>
          <td><xsl:value-of select="Name"/></td>
          <td><xsl:value-of select="User"/></td>
          <td><xsl:value-of select="URL"/></td>
          <td><xsl:value-of select="MinPoolSize"/></td>
          <td><xsl:value-of select="MaxPoolSize"/></td>
          <td><xsl:value-of select="ConnectionTimeout"/></td>
          <td><xsl:value-of select="IdleTimeout"/></td>
          <td><xsl:value-of select="OrphanTimeout"/></td>
          <td><xsl:value-of select="MaxStmtCacheSize"/></td>
          <td><xsl:value-of select="IdleStmtTimeout"/></td>
          <td><xsl:value-of select="DriverType"/></td>
          </tr>
        </xsl:otherwise>
      </xsl:choose>
  </xsl:template>



  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'SPI']">
  <div class="space20v"/>
    <div class="page_title">System Performance Interface</div>
    <div class="page_subtitle"><xsl:value-of select="PerformanceMonitor/Node/@name"/>/<xsl:value-of select="PerformanceMonitor/Node/Server/@name"/></div>
  <div class="page_subtitle"><xsl:value-of select="PerformanceMonitor/Node/Server/@container"/>(<xsl:value-of select="PerformanceMonitor/@time"/>)</div>
    <xsl:apply-templates select="PerformanceMonitor/Node/Server/jvmRuntimeModule"/>
  </xsl:template>

  <xsl:template match="jvmRuntimeModule">
  <div class="space20v"/>
  <div class="table_title" id="jvmRuntimeModuleTable_title">JVM Runtime Module</div>
  <table border="1" width="100%" class="display componentTable" id="jvmRuntimeModuleTable">
    <thead>
    <tr bgcolor="#E0FFFF" width="100%">
      <th rowspan="2">Vendor</th>
      <th rowspan="2">Version</th>
      <th colspan="3">Total Memory</th>
      <th colspan="3">Free Memory</th>
      <th colspan="3">Used Memory</th>
    </tr>
    <tr bgcolor="#E0FFFF">
      <th>Unit</th>
      <th>Low</th>
      <th>High</th>
      <th>Unit</th>
      <th>Low</th>
      <th>High</th>
      <th>Unit</th>
      <th>Low</th>
      <th>High</th>
    </tr>
   </thead>
   <tbody>
    <tr bgcolor="white">
      <td><xsl:value-of select="@vendor"/></td>
      <td><xsl:value-of select="@version"/></td>
      <xsl:apply-templates select="totalMemory/RangeStat"/>
      <xsl:apply-templates select="freeMemory/RangeStat"/>
      <xsl:apply-templates select="usedMemory/RangeStat"/>
    </tr>
    </tbody>
  </table>
  </xsl:template>

  <xsl:template match="RangeStat">
    <td><xsl:value-of select="@unit"/></td>
    <td><xsl:value-of select="@low"/></td>
    <td><xsl:value-of select="@high"/></td>
  </xsl:template>

  <xsl:template match="connectionPoolModule">
  <table cellspacing="0" cellpadding="4" border="1" width="100%">
    <tr style="background-color: #FFFFE0;color:#000080;font-weight:bold;text-align:center">
      <td colspan="21">Connection Pool Module</td>
    </tr>
    <tr bgcolor="#E0FFFF">
      <th rowspan="2">Data Source Name</th>
      <th colspan="2">Actives</th>
      <th colspan="2">Allocates</th>
      <th colspan="2">Concurrent Waiters</th>
      <th colspan="2">Creates</th>
      <th colspan="2">Destroys</th>
      <th colspan="2">Faults</th>
      <th colspan="2">Idles</th>
      <th colspan="2">Pool Size</th>
      <th colspan="2">Stmt Discards</th>
      <th colspan="2">Returns</th>
    </tr>
    <tr bgcolor="#E0FFFF">
      <th>Unit</th>
      <th>Val</th>
      <th>Unit</th>
      <th>Val</th>
      <th>Unit</th>
      <th>Val</th>
      <th>Unit</th>
      <th>Val</th>
      <th>Unit</th>
      <th>Val</th>
      <th>Unit</th>
      <th>Val</th>
      <th>Unit</th>
      <th>Val</th>
      <th>Unit</th>
      <th>Val</th>
      <th>Unit</th>
      <th>Val</th>
      <th>Unit</th>
      <th>Val</th>
    </tr>
  </table>
  </xsl:template>



  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'Jdbc Driver Information']">
  <a name="Component_{position()}"/>
  <div id="jdbcDriverDatum_title" class="table_title"><xsl:value-of select="@name"/></div>
  <table id="jdbcDriverDatum" class="display componentTable">
   <thead>
  <tr>
    <th>Name</th>
    <th>Version</th>
    <th>Last Modified By</th>
    <th>Last Modified Date</th>
    <th>Fixes</th>
  </tr>
  </thead>
  <tbody>
  <xsl:apply-templates select="Properties" mode="JdbcDriverInfo"/>
  </tbody>
  </table>
  </xsl:template>


  <xsl:template match="Properties" mode="JdbcDriverInfo">
  <tr>
  <xsl:apply-templates select="Property[@name = 'Driver Name']" mode="single_td"/>
  <xsl:apply-templates select="Property[@name = 'Driver Version']" mode="single_td"/>
  <xsl:apply-templates select="Property[@name = 'Last Modified User']" mode="single_td"/>
  <xsl:apply-templates select="Property[@name = 'Last Modified Date']" mode="single_td"/>
  <xsl:apply-templates select="Property[@name = 'Fixes']" mode="single_td_pre"/>
  </tr>
  </xsl:template>

  <xsl:template match="Property" mode="single_td_pre">
  <td>
  <xsl:choose>
  <xsl:when test="contains(., '
')">
  <pre><xsl:value-of select="."/></pre>
  </xsl:when>
  <xsl:otherwise>
  <xsl:value-of select="."/>
  </xsl:otherwise>
  </xsl:choose>
  </td>
  </xsl:template>





  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'Threads']">
    <a name="Component_{position()}"/>
  <p><i>Note: Holding mouse over underlined list items will show additional information.</i></p>
  <a href="#commandrunner">CommandRunner</a><br/>
  <a href="#taskexecutors">TaskExecutors</a><br/>
  <a href="#jvm">JVM</a><br/>
  <p id="commandrunner">
  <big><b>CommandRunner</b></big> (Created=<xsl:value-of select="Threads/CommandRunners/@alive"/>
    Destroyed=<xsl:value-of select="Threads/CommandRunners/@dead"/>
    ActiveWorkers=<xsl:value-of select="count(//Worker)"/>
    RunawayWorkers=<xsl:value-of select="count(//Worker/@runaway)"/>
    TotalWorkers=<xsl:value-of select="sum(//CommandRunner/@workerThreadCount)"/>)<br/>
    <ul type="square">
  <xsl:apply-templates select="Threads/CommandRunners/CommandRunner">
    <xsl:sort select="@name"/>
    <xsl:sort select="@queueSize"/>
  </xsl:apply-templates>
  </ul>
  </p>
  <p id="taskexecutors">
  <big><b>TaskExecutors</b></big> (Alive=<xsl:value-of select="Threads/TaskExecutors/@alive"/>
    Destroyed=<xsl:value-of select="Threads/TaskExecutors/@dead"/>
    ActiveTasks=<xsl:value-of select="count(//ActiveTask)"/>
    RunawayTasks=<xsl:value-of select="count(//ActiveTask/@runaway)"/>
    TotalActiveTasks=<xsl:value-of select="sum(//TaskExecutor/@activeCount)"/>)<br/>
    <ul type="square">
  <xsl:apply-templates select="Threads/TaskExecutors/TaskExecutor">
    <xsl:sort select="@name"/>
    <xsl:sort select="@queueSize"/>
  </xsl:apply-templates>
  </ul>
  </p>
  <p id="jvm">
  <big><b>JVM</b></big> (<xsl:value-of select="count(//Thread)"/> threads created)<br/>
    <ul type="square">
  <xsl:apply-templates select="Threads/ThreadGroup"/>
  </ul>
  </p>
  </xsl:template>

   <xsl:template match="CommandRunner">
       <li><u><b title="MaxQueueSize={@maxQueueSize} IdleRemovalTimeout={@idleRemovalTimeout} RunawayMaxElapsedTime={@runawayMaxElapsedTime} RunawayReportingInterval={@runawayReportingInterval} MinThreads={@minThreads} MaxThreads={@maxThreads} ActiveThreads={@activeThreadCount}"><xsl:value-of select="@name"/></b></u>
         QueueSize=<xsl:value-of select="@queueSize"/> NannyCheckInterval=<xsl:value-of select="@nannyCheckInterval"/>
         <xsl:variable name="activeWorkers" select="count(Worker)"/>
      <xsl:if test="@workerThreadCount - $activeWorkers &gt; 0">
        SleepingWorkers=<xsl:value-of select="@workerThreadCount - $activeWorkers"/>
      </xsl:if>
      <xsl:if test="$activeWorkers &gt; 0">
        ActiveWorkers=<xsl:value-of select="$activeWorkers"/>
      </xsl:if>
    </li>
       <ul type="square">
    <xsl:apply-templates select="Worker">
      <xsl:sort order="descending" data-type="number" select="@elapsedTime"/>
      <xsl:sort select="@name"/>
    </xsl:apply-templates>
    </ul>
  </xsl:template>

   <xsl:template match="Worker">
      <li>
        <b>
          <xsl:choose>
            <xsl:when test="@runaway">
              <font color="#FF0000"><u><b title="runaway worker"><xsl:value-of select="@name"/></b></u></font>
            </xsl:when>
            <xsl:otherwise>
            <xsl:value-of select="@name"/>
            </xsl:otherwise>
          </xsl:choose>
      </b> ElapsedTime=<xsl:value-of select="@elapsedTime"/>
    </li>
  </xsl:template>

   <xsl:template match="TaskExecutor">
       <li><u><b title="Type={@type} CoreSize={@coreSize} MaxSize={@maxSize} KeepAliveTime={@keepAliveTime}  RunawayMaxElapsedTime={@runawayMaxElapsedTime}"><xsl:value-of select="@name"/></b></u>
         ActiveCount=<xsl:value-of select="@activeCount"/> CurrentPoolSize=<xsl:value-of select="@currentSize"/> LargestPoolSize=<xsl:value-of select="@largestPoolSize"/> QueueSize=<xsl:value-of select="@queueSize"/>
         <xsl:variable name="activeTasks" select="count(ActiveTask)"/>
      <xsl:if test="$activeTasks &gt; 0">
        ActiveTasks=<xsl:value-of select="$activeTasks"/>
      </xsl:if>
    </li>
       <ul type="square">
    <xsl:apply-templates select="ActiveTask">
      <xsl:sort order="descending" data-type="number" select="@elapsedTime"/>
      <xsl:sort select="@name"/>
    </xsl:apply-templates>
    </ul>
  </xsl:template>

   <xsl:template match="ActiveTask">
      <li>
        <b>
          <xsl:choose>
            <xsl:when test="@runaway">
              <font color="#FF0000"><u><b title="runaway task"><xsl:value-of select="@name"/></b></u></font>
            </xsl:when>
            <xsl:otherwise>
            <xsl:value-of select="@name"/>
            </xsl:otherwise>
          </xsl:choose>
      </b> ElapsedTime=<xsl:value-of select="@elapsedTime"/>
    </li>
  </xsl:template>

   <xsl:template match="ThreadGroup">
       <li><b><xsl:value-of select="@name"/></b> Daemon=<xsl:value-of select="@daemon"/> MaxPriority=<xsl:value-of select="@maxPriority"/></li>
       <ul type="square">
    <xsl:apply-templates select="ThreadGroup">
      <xsl:sort select="@name"/>
    </xsl:apply-templates>
    <xsl:apply-templates select="Thread">
      <xsl:sort select="@name"/>
    </xsl:apply-templates>
    </ul>
  </xsl:template>

   <xsl:template match="Thread">
      <li>
    <u><b title="ClassName={@classname}; Worker={@worker}"><xsl:value-of select="@name"/></b></u>
    Daemon=<xsl:value-of select="@daemon"/> Priority=<xsl:value-of select="@priority"/>
    </li>
  </xsl:template>




  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'ParallelQueryStats']">
  <xsl:apply-templates select="ParallelQueryStatsManager"/>
  </xsl:template>

  <xsl:template match="Error">
    <td class="gradeX">
      <pre><xsl:value-of select="."/></pre>
    </td>
  </xsl:template>

  <xsl:template match="ParallelQueryStatsManager">
      <div class="space20v"/>
        <div class="table_title" id="parallelQueryStats_title">Parallel Query Statistics</div>
        <table border="1" class="display componentTable" id="parallelQueryStats" width="100%">
         <thead>
      <tr>
        <th>Query Name</th>
        <th>Exec Count</th>
        <th>Cmd Count Average</th>
        <th>Cmd Count Std Deviation</th>
        <th>Queue Overload Count</th>
      </tr>
     </thead>
     <tbody>
      <xsl:apply-templates select="ParallelQueryStats"/>
     </tbody>
    </table>
  </xsl:template>


  <xsl:template match="ParallelQueryStats">
    <tr>
      <xsl:choose>
        <xsl:when test="Error">
            <td>Errors:</td>
          <xsl:apply-templates select="Error"/>
                    <td> </td>
                    <td> </td>
                    <td> </td>
        </xsl:when>
        <xsl:otherwise>
          <td><xsl:value-of select="FullName"/></td>
          <td><xsl:value-of select="ExecCount"/></td>
          <td><xsl:value-of select="CmdCountAverage"/></td>
          <td><xsl:value-of select="CmdCountStdDeviation"/></td>
          <td><xsl:value-of select="QueueOverloadCount"/></td>
        </xsl:otherwise>
      </xsl:choose>
    </tr>
  </xsl:template>



  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'MemTrace']">
    <xsl:apply-templates select="MemTrace"/>
  </xsl:template>

  <xsl:template match="Error">
    <xsl:param name="errorColSpan"/>
    <td class="gradeX" colspan="{$errorColSpan}">
      <pre><xsl:value-of select="."/></pre>
    </td>
  </xsl:template>

  <xsl:template match="MemTrace">
      <font face="arial" size="2">
      <a href="ValidateInternals?component=MemTrace&amp;commands">Commands Only</a>
      <br/>
      <a href="ValidateInternals?component=MemTrace&amp;large_allocs">Large Allocs Only</a>
      <br/>
      <a href="ValidateInternals?component=MemTrace&amp;threadsamples">Thread Execution Sampling</a>
      <br/>
      <a href="ValidateInternals?component=MemTrace&amp;threads">Threads</a>
      <br/>
      <a href="http://wiki.arch.ebay.com/index.php?page=MemTrace" target="_blank">Help</a>
      <br/>
      </font>

      <xsl:apply-templates select="MemTrace_Commands"/>
      <xsl:apply-templates select="MemTrace_LargeAllocs"/>
      <xsl:apply-templates select="MemTrace_ThreadsAggr"/>
      <xsl:if test="MemTrace_Threads[Stats/@expand = 'true']">
        <xsl:apply-templates select="MemTrace_Threads"/>
      </xsl:if>
      <xsl:apply-templates select="MemTrace_ThreadExecSamples"/>
  </xsl:template>

  <xsl:template match="MemTrace_Commands">
          <div class="space20v"/>
    <xsl:if test="@showdesc = 'true'">
      Click on individual commands to see details. All numbers are for average command execution.
      Class data includes class name, instance count and total size of all instances.
           <div class="space20v"/>
    </xsl:if>
    <div class="table_title" id="memStatsTable_title">Per-Command Memory Stats</div>
    <table border="1" width="100%" id="memStatsTable" class="display componentTable">
      <thead>
      <tr>
        <th colspan="5">
          Monitoring enabled: <xsl:value-of select="@enabled"/>
        </th>
      </tr>
      <tr bgcolor="#F3F3F3">
        <th>Command</th>
        <th>Executions</th>
        <th>Avg Memory Size</th>
        <th>Max Memory Size</th>
        <th>Avg Object Count</th>
      </tr>
     </thead>
     <tbody>
      <xsl:apply-templates select="MemTrace_Command"/>
     </tbody>
    </table>
  </xsl:template>

  <xsl:template match="MemTrace_Command">
    <tr>
      <xsl:choose>
        <xsl:when test="Error">
          <xsl:apply-templates select="Error">
            <xsl:with-param name="errorColSpan">1</xsl:with-param>
          </xsl:apply-templates>
          <td/><td/><td/><td/>
        </xsl:when>
        <xsl:otherwise>
          <td>
            <xsl:choose>
              <xsl:when test="link/.">
                <a href="{link}"><xsl:value-of select="@name"/></a>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="@name"/>
              </xsl:otherwise>
            </xsl:choose>
          </td>
          <td><xsl:value-of select="@execs"/></td>
          <td><xsl:value-of select="@avgsize"/></td>
          <td><xsl:value-of select="@maxsize"/></td>
          <td><xsl:value-of select="@avgallocs"/></td>
        </xsl:otherwise>
      </xsl:choose>
    </tr>
    <xsl:if test="urldata/.">
      <tr>
        <td>URL Data</td>
        <td>
          <xsl:choose>
            <xsl:when test="cal/.">
              <a href="{cal}"><xsl:value-of select="urldata"/></a>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="urldata"/>
            </xsl:otherwise>
          </xsl:choose>
        </td><td/><td/><td/>
      </tr>
    </xsl:if>
    <xsl:if test="@expandtable = 'true' and classes/.">
      <tr>
        <td>
          <pre><xsl:call-template name="AttrReplaceSubstringWithBr">
            <xsl:with-param name="string" select="classes"/>
            <xsl:with-param name="find" select="','"/>
          </xsl:call-template></pre>
        </td><td/><td/><td/><td/>
      </tr>
    </xsl:if>
    <xsl:if test="@expandtable = 'true' and methods/.">
      <tr>
        <td>
          <pre><xsl:call-template name="AttrReplaceSubstringWithBr">
            <xsl:with-param name="string" select="methods"/>
            <xsl:with-param name="find" select="';'"/>
          </xsl:call-template></pre>
        </td><td/><td/><td/><td/>
      </tr>
    </xsl:if>
    <xsl:apply-templates select="MemTrace_Top_Commands"/>
  </xsl:template>

  <xsl:template match="MemTrace_Top_Commands">
    <xsl:apply-templates select="MemTrace_Command"/>
  </xsl:template>

  <xsl:template match="MemTrace_LargeAllocs">
    <xsl:if test="@showdesc = 'true'">
    <div class="space20v"/>
      All sizes are averaged for distinct combinations of class name and stack trace
    </xsl:if>
    <div class="space20v"/>
    <div class="table_title" id="memTraceAllocatesTable_title">Large Allocations</div>
    <table border="1" width="100%" id="memTraceAllocatesTable" class="display componentTable">
     <thead>
      <tr>
        <th colspan="5">
          Monitoring enabled: <xsl:value-of select="@enabled"/><br/>
          Threshold: <xsl:value-of select="@threshold"/>
        </th>
      </tr>
      <tr bgcolor="#F3F3F3">
        <th>Class</th>
        <th>Alloc Count</th>
        <th>Avg Object Size</th>
        <th>Thread Stack</th>
        <th>Object Sizes</th>
      </tr>
     </thead>
     <tbody>
      <xsl:apply-templates select="MemTrace_LargeAlloc"/>
     </tbody>
    </table>
  </xsl:template>

  <xsl:template match="MemTrace_LargeAlloc">
    <tr>
      <xsl:choose>
        <xsl:when test="Error">
          <xsl:apply-templates select="Error">
            <xsl:with-param name="errorColSpan">1</xsl:with-param>
          </xsl:apply-templates><td/><td/><td/><td/>
        </xsl:when>
        <xsl:otherwise>
          <td><xsl:value-of select="@class"/></td>
          <td><xsl:value-of select="@allocs"/></td>
          <td><xsl:value-of select="@avgsize"/></td>
          <td>
            <xsl:call-template name="AttrReplaceSubstringWithBr">
              <xsl:with-param name="string" select="stack"/>
              <xsl:with-param name="find" select="';'"/>
            </xsl:call-template>
          </td>
          <td>
            <xsl:call-template name="AttrReplaceSubstringWithBr">
              <xsl:with-param name="string" select="sizes"/>
              <xsl:with-param name="find" select="','"/>
            </xsl:call-template>
          </td>
        </xsl:otherwise>
      </xsl:choose>
    </tr>
  </xsl:template>

  <xsl:template match="MemTrace_Threads">
  <div class="space20v"/>
    <div class="table_title" id="memTraceThreadsTable_title">Individual Threads</div>
    <table border="1" width="100%" id="memTraceThreadsTable" class="display componentTable">
          <thead>
      <tr>
        <th colspan="2">
          Monitoring enabled: <xsl:value-of select="@enabled"/><br/>
          Displayed thread count: <xsl:value-of select="Stats/@display_count"/><br/>
          Running thread count: <xsl:value-of select="Stats/@running"/>
        </th>
      </tr>
      <tr bgcolor="#F3F3F3">
        <th>Info</th>
        <th>Creation Stack</th>
      </tr>
     </thead>
     <tbody>
      <xsl:apply-templates select="MemTrace_Thread"/>
     </tbody>
    </table>
  </xsl:template>

  <xsl:template match="MemTrace_Thread">
    <tr>
      <xsl:choose>
        <xsl:when test="Error">
          <xsl:apply-templates select="Error">
            <xsl:with-param name="errorColSpan">1</xsl:with-param>
          </xsl:apply-templates><td/>
        </xsl:when>
        <xsl:otherwise>
          <td valign="top">
            <a name="thread{@id}"/>
            ID: <xsl:value-of select="@id"/><br/>
            Name: <xsl:value-of select="name"/><br/>
            Group: <xsl:value-of select="group"/><br/>
            Class: <xsl:value-of select="@thread_class"/><br/>
            <xsl:if test="@runnable_class/.">
              Runnable: <xsl:value-of select="@runnable_class"/><br/>
            </xsl:if>
            Daemon: <xsl:value-of select="@daemon"/><br/>
            Creator: <xsl:value-of select="@creator"/><br/>
            Created: <xsl:value-of select="@create_time"/><br/>
            <xsl:if test="@start_time/.">
              Started: <xsl:value-of select="@start_time"/><br/>
            </xsl:if>
            <xsl:if test="@end_time/.">
              Ended: <xsl:value-of select="@end_time"/><br/>
            </xsl:if>
            State: <xsl:value-of select="@state"/><br/>
            <xsl:if test="@duration/.">
              Duration: <xsl:value-of select="@duration"/><br/>
            </xsl:if>
          </td>
          <td>
            <xsl:choose>
              <xsl:when test="stacklink/.">
                <a href="{stacklink}"><xsl:value-of select="stack"/></a>
              </xsl:when>
              <xsl:otherwise>
                <xsl:call-template name="AttrReplaceSubstringWithBr">
                  <xsl:with-param name="string" select="stack"/>
                  <xsl:with-param name="find" select="';'"/>
                </xsl:call-template>
              </xsl:otherwise>
            </xsl:choose>
          </td>
        </xsl:otherwise>
      </xsl:choose>
    </tr>
  </xsl:template>

  <xsl:template match="MemTrace_ThreadsAggr">
        <div class="space20v"/>
        <div class="page_nav_wrapper">
    <ul>
     <li><a href="ValidateInternals?component=MemTrace&amp;threads_all">All Threads</a></li>
     <li><a href="ValidateInternals?component=MemTrace&amp;threads_running">Running Threads</a></li>
     <li><a href="ValidateInternals?component=MemTrace&amp;threads_completed">Completed Threads</a></li>
     <li><a href="ValidateInternals?component=MemTrace&amp;threads_orphan">Orphan Threads</a></li>
    </ul>
    </div>

      <div class="space20v"/>

     <div class="table_title" id="aggrThreadStatsTable_title">Aggregated Threads Stats</div>
    <table border="1" width="100%" id="aggrThreadStatsTable" class="display componentTable">
      <thead>
      <tr>
        <th colspan="2">
          Monitoring enabled: <xsl:value-of select="@enabled"/><br/>
          Displayed thread count: <xsl:value-of select="Stats/@display_count"/><br/>
          Running thread count: <xsl:value-of select="Stats/@running"/><br/>
          Uptime: <xsl:value-of select="@uptime_hr"/> hr <xsl:value-of select="@uptime_min"/> min
        </th>
      </tr>
      <tr>
        <th>Info</th>
        <th>Sample Stack</th>
      </tr>
     </thead>
     <tbody>
      <xsl:apply-templates select="MemTrace_ThreadAggr"/>
     </tbody>
    </table>
  </xsl:template>

  <xsl:template match="MemTrace_ThreadAggr">
    <tr>
      <xsl:choose>
        <xsl:when test="Error">
          <xsl:apply-templates select="Error">
            <xsl:with-param name="errorColSpan">1</xsl:with-param>
          </xsl:apply-templates><td/>
        </xsl:when>
        <xsl:otherwise>
          <td valign="top">
            Group: <xsl:value-of select="group"/><br/>
            Class: <xsl:value-of select="@thread_class"/><br/>
            <xsl:if test="@runnable_class/.">
              Runnable: <xsl:value-of select="@runnable_class"/><br/>
            </xsl:if>
            Count: <xsl:value-of select="@count"/><br/>
            <xsl:if test="@running/.">
              Running: <xsl:value-of select="@running"/><br/>
            </xsl:if>
            <xsl:if test="@rate/.">
              Rate: <xsl:value-of select="@rate"/><br/>
            </xsl:if>
            <br/>

            <xsl:choose>
              <xsl:when test="idlink/.">
                Sample ID: <a href="{idlink}"><xsl:value-of select="@id"/></a>
              </xsl:when>
              <xsl:otherwise>
                Sample ID: <xsl:value-of select="@id"/>
              </xsl:otherwise>
            </xsl:choose>
            <br/>

            Sample Name: <xsl:value-of select="name"/><br/>
            Sample Daemon: <xsl:value-of select="@daemon"/><br/>
            Sample Creator: <xsl:value-of select="@creator"/><br/>
          </td>
          <td>
            <xsl:call-template name="AttrReplaceSubstringWithBr">
              <xsl:with-param name="string" select="stack"/>
              <xsl:with-param name="find" select="';'"/>
            </xsl:call-template>
          </td>
        </xsl:otherwise>
      </xsl:choose>
    </tr>
  </xsl:template>

  <xsl:template match="MemTrace_ThreadExecSamples">
    <div class="space20v"/>
    <div class="table_title" id="memTraceExecSamplesTable_title">Thread Execution Sampling Data</div>
    <table border="1" width="100%" id="memTraceExecSamplesTable" class="display componentTable">
         <thead>
      <tr>
        <th>
          Sampling mode: <xsl:value-of select="@mode"/>
        </th>
      </tr>
     </thead>
     <tbody>
      <tr>
        <td>
          <pre><xsl:call-template name="AttrReplaceSubstringWithBr">
            <xsl:with-param name="string" select="samples"/>
            <xsl:with-param name="find" select="';'"/>
          </xsl:call-template></pre>
        </td>
      </tr>
     </tbody>
    </table>
  </xsl:template>

  <xsl:template name="AttrReplaceSubstringWithBr">
    <xsl:param name="string"/>
    <xsl:param name="find"/>
    <xsl:choose>
      <xsl:when test="contains($string, $find)">
        <xsl:value-of select="substring-before($string, $find)"/>
        <br/>
        <xsl:call-template name="AttrReplaceSubstringWithBr">
          <xsl:with-param name="string" select="substring-after($string, $find)"/>
          <xsl:with-param name="find" select="$find"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$string"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>



    <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'NioAsyncSvcClientStatus']">
    <a name="Component_{position()}"/>
    <div class="table_title" id="nioServiceClStatusTable_title">NIO Asynchronous Service Client Status</div>
    <table align="center" border="1" class="dsplay componentTable" id="nioServiceClStatusTable">
      <thead>
            <tr>
                <th>Name</th>
                <th>Status</th>
                <th>Config Category Id</th>
                <th>Markdown Time</th>
            </tr>
      </thead>

      <tbody>
            <xsl:apply-templates select="Services/Service"/>
      </tbody>
      </table>
    <div class="space20v"/>
    </xsl:template>

<xsl:template match="Services/Service">
  <tr bgcolor="white">
    <td><xsl:value-of select="Name"/></td>
    <td><xsl:value-of select="Status"/></td>
    <xsl:apply-templates select="CategoryId"/>
    <td><xsl:value-of select="MarkdownTime"/></td>
  </tr>
</xsl:template>

<xsl:template match="CategoryId">
  <xsl:variable name="catId" select="."/>
  <xsl:choose>
    <xsl:when test="string-length($catId) &gt; 0">
      <td><a href="ViewConfigCategoryXml?id={.}"><xsl:value-of select="$catId"/></a></td>
    </xsl:when>
    <xsl:otherwise>
      <td>N/A</td>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<xsl:template match="MarkdownTime">
  <xsl:variable name="mdt" select="."/>
  <xsl:choose>
    <xsl:when test="string-length($mdt) &gt; 0">
      <td><xsl:value-of select="$mdt"/></td>
    </xsl:when>
    <xsl:otherwise>
      <td> </td>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>




    <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'NioSvcInvStatistics']">
    <a name="Component_{position()}"/>
    <div class="table_title" id="nioServiceStatsTable_title">NIO Service Invocation Statistics</div>
        <table border="1" class="display componentTable" id="nioServiceStatsTable">
         <thead>
            <tr>
                <th>Service</th>
                <th>Average Response Time(ms)</th>
                <th>Average Connect Time(ms)</th>
                <th>Completed Requests</th>
                <th>Failed Requests</th>
                <th>Timeout Requests</th>
                <th>Failed Connections</th>
                <th>Successful Connections</th>
            </tr>
          </thead>
          <tbody>
            <xsl:apply-templates select="NioSvcInvStats/Service"/>
          </tbody>
      </table>
    <div class="space20v"/>
    </xsl:template>

<xsl:template match="NioSvcInvStats/Service">
  <tr>
    <xsl:variable name="catId" select="CategoryId"/>
    <xsl:variable name="name" select="Name"/>
    <xsl:choose>
      <xsl:when test="string-length($catId) &gt; 0">
        <td><a href="ViewConfigCategoryXml?id={$catId}"><xsl:value-of select="$name"/></a></td>
      </xsl:when>
      <xsl:otherwise>
        <td><xsl:value-of select="$name"/></td>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:call-template name="format">
       <xsl:with-param name="val" select="AverageResponseTime"/>
    </xsl:call-template>
    <xsl:call-template name="format">
       <xsl:with-param name="val" select="AverageConnectTime"/>
    </xsl:call-template>
    <xsl:call-template name="format">
       <xsl:with-param name="val" select="CompletedRequests"/>
    </xsl:call-template>
    <xsl:call-template name="format">
       <xsl:with-param name="val" select="FailedRequests"/>
    </xsl:call-template>
    <xsl:call-template name="format">
       <xsl:with-param name="val" select="TimeoutRequests"/>
    </xsl:call-template>
    <xsl:call-template name="format">
       <xsl:with-param name="val" select="FailedConnections"/>
    </xsl:call-template>
    <xsl:call-template name="format">
       <xsl:with-param name="val" select="SuccessfulConnections"/>
    </xsl:call-template>
  </tr>
</xsl:template>

<xsl:template match="Name">
  <xsl:param name="catId"/>
  <xsl:choose>
    <xsl:when test="string-length($catId) &gt; 0">
      <td><a href="ViewConfigCategoryXml?id={.}"><xsl:value-of select="Name"/></a></td>
    </xsl:when>
    <xsl:otherwise>
      <td><xsl:value-of select="."/></td>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>

<xsl:template name="format">
  <xsl:param name="val"/>
  <xsl:choose>
    <xsl:when test="string-length($val) &gt; 0">
      <td><xsl:value-of select="$val"/></td>
    </xsl:when>
    <xsl:otherwise>
      <td> </td>
    </xsl:otherwise>
  </xsl:choose>
</xsl:template>





  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'ThreadsResourceConsumption']">
    <a name="Component_{position()}"/>
    <xsl:choose>
  <xsl:when test="//ThreadsResourceConsumption[@error ='true']">
    <xsl:apply-templates select="//ThreadsResourceConsumption/ErrorMessage"/>
     </xsl:when>
  <xsl:otherwise>
    <xsl:apply-templates select="//ThreadsResourceConsumption/Summary"/>
        <div id="threadsDatum_title" class="table_title">Threads Resource Consumption</div>
    <table id="threadsDatum" class="display componentTable">
        <thead>
      <tr>
      <xsl:choose>
           <xsl:when test="//ThreadsResourceConsumption/ThreadResourceConfig[@display =0]">
          <th> Name </th>
          <th> Group </th>
          <th> CPU Usage in this interval %</th>
           </xsl:when>
           <xsl:when test="//ThreadsResourceConsumption/ThreadResourceConfig[@display =1]">
          <th> Name </th>
          <th> Id </th>
          <th> Group </th>
          <th> State </th>
          <th> Total CPU Usage % </th>
          <th> Stack Trace </th>
           </xsl:when>
        <xsl:otherwise>
          <th> Name </th>
          <th> Id </th>
          <th> Group </th>
          <th> State </th>
          <th> CPU Usage in this interval %</th>
          <th> Total CPU Usage % </th>
          <th> Stack Trace </th>
         </xsl:otherwise>
        </xsl:choose>
      </tr>
      </thead>
      <tbody>
        <xsl:apply-templates select="ThreadsResourceConsumption/ThreadResources/ThreadResourceInfo"/>
      </tbody>
    </table>
   </xsl:otherwise>
  </xsl:choose>

  </xsl:template>

   <xsl:template match="ThreadResourceInfo">
  <tr>
  <xsl:choose>
       <xsl:when test="//ThreadsResourceConsumption/ThreadResourceConfig[@display =0]">
      <td><xsl:value-of select="@name"/></td>
      <td><xsl:value-of select="@group"/></td>
      <td><xsl:value-of select="@cpuUsagePercent"/>(<xsl:value-of select="@cpuUsage"/>)</td>
       </xsl:when>
       <xsl:when test="//ThreadsResourceConsumption/ThreadResourceConfig[@display =1]">
      <td><xsl:value-of select="@name"/></td>
         <td><a href="{@calThreadUrl}"><xsl:value-of select="@calThreadId"/>(<xsl:value-of select="@id"/>)</a></td>
      <td><xsl:value-of select="@group"/></td>
      <td><xsl:value-of select="@state"/></td>
      <td><xsl:value-of select="@totalCpuUsagePercent"/>(<xsl:value-of select="@totalCpuUsage"/>)</td>
      <td><xsl:value-of select="@stacktrace"/></td>
       </xsl:when>
    <xsl:otherwise>
      <td><xsl:value-of select="@name"/></td>
         <td><a href="{@calThreadUrl}"><xsl:value-of select="@calThreadId"/>(<xsl:value-of select="@id"/>)</a></td>
      <td><xsl:value-of select="@group"/></td>
      <td><xsl:value-of select="@state"/></td>
      <td><xsl:value-of select="@cpuUsagePercent"/>(<xsl:value-of select="@cpuUsage"/>)</td>
      <td><xsl:value-of select="@totalCpuUsagePercent"/>(<xsl:value-of select="@totalCpuUsage"/>)</td>
      <td><xsl:value-of select="@stacktrace"/></td>
     </xsl:otherwise>
  </xsl:choose>

     </tr>
   </xsl:template>

  <xsl:template match="Summary">
      <div class="page_title">Summary</div>
      Total Thread Count = <xsl:value-of select="@totalThreads"/><br/>
      Active Count = <xsl:value-of select="@activeThreads"/> <br/>
      Interval Size = <xsl:value-of select="@intervalSize"/> <br/>
      <xsl:if test="//ThreadsResourceConsumption/ThreadResourceConfig[@display !=1]">
      CPU usage in this interval = <xsl:value-of select="@cpuUsagePercent"/>%(<xsl:value-of select="@sumCpuUsage"/>ms)<br/>
      </xsl:if>
      Sum of total CPU usage = <xsl:value-of select="@cpuUsageFromStartPercent"/>%(<xsl:value-of select="@sumCpuUsageFromStart"/>ms)<br/>
      <a href="https://wiki2.arch.ebay.com/confluence/display/KERNELDOCS/VI+High+CPU+Thread">Wiki Help</a>
      <div class="space20v"/>
   </xsl:template>
    <xsl:template match="ErrorMessage">
      <b>Error:  </b> <xsl:value-of select="@desc"/>
   </xsl:template>




  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'Config Directory Viewer']">
  <a name="Component_{position()}"/>
  <div class="table_title" id="configDirTable_title"><xsl:value-of select="@name"/></div>
  <table border="1" class="display componentTable" id="configDirTable">
   <thead>
  <tr>
    <td>Path</td>
    <td>Size</td>
    <td>Hash Value</td>
    <td>Last Modified</td>
  </tr>
   </thead>
   <tbody>
  <xsl:apply-templates select="Properties" mode="configdirview"/>
   </tbody>
  </table>
  </xsl:template>

  <xsl:template match="Properties" mode="configdirview">
  <tr>
    <xsl:apply-templates select="Property[@name='Path']" mode="configdirview"/>
    <xsl:apply-templates select="Property[@name='Size']" mode="configdirview"/>
    <xsl:apply-templates select="Property[@name='HashValue']" mode="configdirview"/>
    <xsl:apply-templates select="Property[@name='LastModified']" mode="configdirview"/>
  </tr>
  </xsl:template>

  <xsl:template match="Property" mode="configdirview">
     <td>
     <pre><xsl:value-of select="."/></pre>
      </td>
  </xsl:template>



  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'JavaCpuTimeStats']">
  <a name="Component_{position()}"/>

  <xsl:for-each select="JavaCpuTimeStats/Stats">
  <H3><xsl:value-of select="TimePeriod"/></H3>

  <table border="1" cellpadding="5" style="font-family:arial;font-size:15px">
  <tr>
    <td bgcolor="#F3F3F3"><center><b>Command Name</b></center></td>
    <td bgcolor="#F3F3F3"><center><b>Count</b></center></td>
    <td bgcolor="#F3F3F3"><center><b>Avg Cpu Time (ms)</b></center></td>
    <td bgcolor="#F3F3F3"><center><b>Avg Elapsed Time (ms)</b></center></td>
    <td bgcolor="#F3F3F3"><center><b>Max Cpu Time (ms)</b></center></td>
    <td bgcolor="#F3F3F3"><center><b>Max Elapsed Time (ms)</b></center></td>
    <td bgcolor="#F3F3F3"><center><b>Cpu Time Variance (ms)</b></center></td>
  </tr>

   <xsl:for-each select="Counter">
    <tr>
      <td>
        <xsl:value-of select="Name"/>
      </td>
      <td align="right">
        <xsl:value-of select="Count"/>
      </td>
      <td align="right">
        <xsl:value-of select="AvgCpuTime"/>
      </td>
      <td align="right">
        <xsl:value-of select="AvgElapsedTime"/>
      </td>
      <td align="right">
        <xsl:value-of select="MaxCpuTime"/>
      </td>
      <td align="right">
        <xsl:value-of select="MaxElapsedTime"/>
      </td>
      <td align="right">
        <xsl:value-of select="CpuTimeVariance"/>
      </td>
   </tr>
  </xsl:for-each>
  </table>
  <P/>
  </xsl:for-each>

  </xsl:template>




  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[contains(@name, 'MsTransformThrottlerStats')]">
  <a name="Component_{position()}"/>
  <div id="msTransformsThrottlesTable_title" class="table_title"><xsl:value-of select="@name"/></div>
  <table border="1" id="msTransformsThrottlesTable" class="display componentTable">
   <thead>
  <tr>
    <th>File Path</th>
    <th>Total Semaphore Permits</th>
    <th>Available Semaphore Permits</th>
    <th>Waiting Queue Threads</th>
  </tr>
   </thead>
   <tbody>
  <xsl:for-each select="Properties">
    <xsl:sort select="Property[@name = 'Total Semaphore Permits']" data-type="number" order="descending"/>
  <tr>
    <td>
        <xsl:value-of select="Property[@name = 'File Path']"/>
        </td>
        <td>
          <xsl:value-of select="Property[@name = 'Total Semaphore Permits']"/>
        </td>
        <td>
        <xsl:value-of select="Property[@name = 'Available Semaphore Permits']"/>
        </td>
        <td>
        <xsl:value-of select="Property[@name = 'Waiting Queue Threads']"/>
        </td>
  </tr>
  </xsl:for-each>
   </tbody>
  </table>
  </xsl:template>

  <xsl:template match="Property" mode="center_single_td">
    <td align="center">
      <xsl:value-of select="."/>
    </td>
  </xsl:template>



  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'DscFiles']">
   <div class="space20v"/>
   <div class="page_title"><xsl:value-of select="@name"/></div>
   <xsl:apply-templates mode="DscFiles"/>
  </xsl:template>

  <xsl:template match="Property" mode="DscFiles">
      <tr>
        <td><xsl:value-of select="@name"/></td>
      <td><pre><xsl:value-of select="."/></pre></td>
      </tr>
  </xsl:template>

  <xsl:template match="FileList" mode="DscFiles">
      <xsl:variable name="tableId" select="position()"/>
    <table border="1" width="100%" class="display componentTable" id="table_{$tableId}">
      <thead>
      <tr class="gradeA">
        <td colspan="5">
          <xsl:value-of select="@dirLocation"/>
        </td>
      </tr>
      <tr>
        <th>File</th>
        <th>Size</th>
        <th>Timestamp</th>
        <th>DiffWithActive</th>
        <th>Path (if different)</th>
      </tr>
     </thead>
     <tbody>
      <xsl:apply-templates select="FileInfo" mode="DscFiles"/>
     </tbody>
    </table>
  </xsl:template>

  <xsl:template match="FileInfo" mode="DscFiles">
      <xsl:choose>
        <xsl:when test="Error">
          <xsl:apply-templates select="Error" mode="DscFiles"/>
        </xsl:when>
        <xsl:otherwise>
         <tr>
             <td><a href="{@fileNameLink}"><xsl:value-of select="@fileName"/></a></td>
          <td><xsl:value-of select="@fileSize"/></td>
          <td><xsl:value-of select="@fileTimestamp"/></td>
             <td><a href="{@diffNameLink}"><xsl:value-of select="@fileDiffWithActive"/></a></td>
          <td><xsl:value-of select="@filePath"/></td>
         </tr>
        </xsl:otherwise>
      </xsl:choose>
  </xsl:template>

  <xsl:template match="Error" mode="DscFiles">
       <tr class="gradeX">
        <td>Error</td>
        <td>
            <pre><xsl:value-of select="."/></pre>
        </td><td> </td><td> </td><td> </td>
      </tr>
    </xsl:template>


<xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[contains(@name, 'CmdStatMetricsComponentStatus')]">
  <a name="{@name}"/>
  <table border="1">
    <tr>
        <td colspan="10" bgcolor="#FFCC00">
            <H3><CENTER><B><xsl:value-of select="@name"/></B></CENTER></H3>
        </td>
    </tr>
    <tr bgcolor="#ffffcc">
        <th width="150px" rowspan="2"><center><b>Command Name</b></center></th>
        <th width="250px" rowspan="2"><center><b>Metrics Type</b></center></th>
        <th width="100px" colspan="2"><center><b>Last Minute</b></center></th>
        <th width="100px" colspan="2"><center><b>Last Hour</b></center></th>
        <th width="100px" colspan="2"><center><b>Yesterday</b></center></th>
        <th width="100px" colspan="2"><center><b>Last Week</b></center></th>
    </tr>
    <tr bgcolor="#ffffcc">
        <td width="50px"><center><b><xsl:value-of select="Time/Minute/@startTime"/></b></center></td>
        <td width="50px"><center><b><xsl:value-of select="Time/Minute/@endTime"/></b></center></td>
        <td width="50px"><center><b><xsl:value-of select="Time/Hour/@startTime"/></b></center></td>
        <td width="50px"><center><b><xsl:value-of select="Time/Hour/@endTime"/></b></center></td>
        <td width="50px"><center><b><xsl:value-of select="Time/Day/@startTime"/></b></center></td>
        <td width="50px"><center><b><xsl:value-of select="Time/Day/@endTime"/></b></center></td>
        <td width="50px"><center><b><xsl:value-of select="Time/Week/@startTime"/></b></center></td>
        <td width="50px"><center><b><xsl:value-of select="Time/Week/@endTime"/></b></center></td>
    </tr>

    <xsl:for-each select="Transaction">
        <tr>
            <td rowspan="7"><center><xsl:value-of select="@name"/></center></td>
            <td>
                Throughput(request per second)
            </td>
            <td colspan="2">
                <xsl:value-of select="Period[@name = 'Minute']/throughput/@value"/>
            </td>
            <td colspan="2">
                <xsl:value-of select="Period[@name = 'Hour']/throughput/@value"/>
            </td>
            <td colspan="2">
               <xsl:value-of select="Period[@name = 'Day']/throughput/@value"/>
            </td>
            <td colspan="2">
               <xsl:value-of select="Period[@name = 'Week']/throughput/@value"/>
            </td>
        </tr>
        <tr>
            <td>
                Min(ms)
            </td>
            <td colspan="2">
                <xsl:value-of select="Period[@name = 'Minute']/min/@value"/>
            </td>
            <td colspan="2">
                <xsl:value-of select="Period[@name = 'Hour']/min/@value"/>
            </td>
            <td colspan="2">
               <xsl:value-of select="Period[@name = 'Day']/min/@value"/>
            </td>
            <td colspan="2">
               <xsl:value-of select="Period[@name = 'Week']/min/@value"/>
            </td>
        </tr>
        <tr>
            <td>
                Max(ms)
            </td>
            <td colspan="2">
                <xsl:value-of select="Period[@name = 'Minute']/max/@value"/>
            </td>
            <td colspan="2">
                <xsl:value-of select="Period[@name = 'Hour']/max/@value"/>
            </td>
            <td colspan="2">
               <xsl:value-of select="Period[@name = 'Day']/max/@value"/>
            </td>
            <td colspan="2">
               <xsl:value-of select="Period[@name = 'Week']/max/@value"/>
            </td>
        </tr>
        <tr>
            <td>
                Average(ms)
            </td>
            <td colspan="2">
                <xsl:value-of select="Period[@name = 'Minute']/average/@value"/>
            </td>
            <td colspan="2">
                <xsl:value-of select="Period[@name = 'Hour']/average/@value"/>
            </td>
            <td colspan="2">
               <xsl:value-of select="Period[@name = 'Day']/average/@value"/>
            </td>
            <td colspan="2">
               <xsl:value-of select="Period[@name = 'Week']/average/@value"/>
            </td>
        </tr>
        <tr>
            <td>
                Median(ms)
            </td>
            <td colspan="2">
                <xsl:value-of select="Period[@name = 'Minute']/median/@value"/>
            </td>
            <td colspan="2">
                <xsl:value-of select="Period[@name = 'Hour']/median/@value"/>
            </td>
            <td colspan="2">
               <xsl:value-of select="Period[@name = 'Day']/median/@value"/>
            </td>
            <td colspan="2">
               <xsl:value-of select="Period[@name = 'Week']/median/@value"/>
            </td>
        </tr>
        <tr>
            <td>
                95th%(ms)
            </td>
            <td colspan="2">
                <xsl:value-of select="Period[@name = 'Minute']/responseTime95thPercent/@value"/>
            </td>
            <td colspan="2">
                <xsl:value-of select="Period[@name = 'Hour']/responseTime95thPercent/@value"/>
            </td>
            <td colspan="2">
               <xsl:value-of select="Period[@name = 'Day']/responseTime95thPercent/@value"/>
            </td>
            <td colspan="2">
               <xsl:value-of select="Period[@name = 'Week']/responseTime95thPercent/@value"/>
            </td>
        </tr>
        <tr>
            <td>
                Mode(ms)
            </td>
            <td colspan="2">
                <xsl:value-of select="Period[@name = 'Minute']/mode/@value"/>
            </td>
            <td colspan="2">
                <xsl:value-of select="Period[@name = 'Hour']/mode/@value"/>
            </td>
            <td colspan="2">
               <xsl:value-of select="Period[@name = 'Day']/mode/@value"/>
            </td>
            <td colspan="2">
               <xsl:value-of select="Period[@name = 'Week']/mode/@value"/>
            </td>
        </tr>
    </xsl:for-each>
  </table>
</xsl:template>

<xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'com.ebay.kernel.cal.java.JavaCalService']">
 <div class="space20v"/>
 <div class="table_title" id="javaCalServiceDatum_title"><xsl:value-of select="@name"/></div>
  <table border="1" class="display componentTable" id="javaCalServiceDatum">
  <thead>
    <tr>
      <th>Remote Address</th>
      <th>Instance</th>
      <th>State</th>
      <th>Status</th>
    </tr>
  </thead>
  <tbody>
     <xsl:apply-templates select="Properties" mode="JavaCalServiceProperties"/>
  </tbody>
  </table>
</xsl:template>

<xsl:template match="Properties" mode="JavaCalServiceProperties">
   <xsl:variable name="color">
     <xsl:choose>
       <xsl:when test="Property/@name = 'status' and Property[contains(., 'GOOD')]">
       <xsl:text>gradeA</xsl:text>
       </xsl:when>
       <xsl:when test="Property/@name = 'status' and Property[contains(., 'IFY')]">
       <xsl:text>gradeC</xsl:text>
       </xsl:when>
       <xsl:when test="Property/@name = 'status' and Property[contains(., 'BAD')]">
       <xsl:text>gradeX</xsl:text>
       </xsl:when>
       <xsl:otherwise>
       <xsl:text>gradeU</xsl:text>
       </xsl:otherwise>
     </xsl:choose>
  </xsl:variable>
  <tr class="{$color}">
    <td><xsl:value-of select="Property[contains(@name, 'host')]"/></td>
    <td><xsl:value-of select="Property[contains(@name, 'instance')]"/></td>
    <td><xsl:value-of select="Property[contains(@name, 'state')]"/></td>
    <td><xsl:value-of select="Property[contains(@name, 'status')]"/></td>
  </tr>
</xsl:template>


  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name='ResourceManager Cache']">
    <a name="{@name}"/>
    <br/>
    <xsl:apply-templates select="ResourceRepoProperties"/>
    <br/>
    <xsl:apply-templates select="TopResourceAggregation"/>
    <br/>
    <a href="http://resrepo/dashboard">Resource Repo Dashboard</a>
  </xsl:template>
  <xsl:template match="ResourceRepoProperties">
    <table border="1">
      <tr VALIGN="MIDDLE" ALIGN="CENTER">
        <td colspan="2" bgcolor="#D3D6FF">
          <H3>
            <B>ResourceRepo Properties</B>
          </H3>
        </td>
      </tr>
      <xsl:apply-templates select="Heading" mode="two"/>
      <xsl:apply-templates select="Property"/>
    </table>
    <br/>
  </xsl:template>
  <xsl:template match="TopResourceAggregation">
    <table border="1">
      <tr VALIGN="MIDDLE" ALIGN="CENTER">
        <td colspan="2" bgcolor="#D3D6FF">
          <H3>
            <B>Resource Aggregation(Top 50)</B>
          </H3>
        </td>
      </tr>
      <xsl:apply-templates select="Heading" mode="two"/>
      <xsl:apply-templates select="Property"/>
    </table>
    <br/>
  </xsl:template>
  <xsl:template match="Aggregations">
    <table border="1">
      <tr VALIGN="MIDDLE" ALIGN="CENTER">
        <td colspan="3" bgcolor="#D3D6FF">
          <H3>
            <B>
              Aggregations in cache (
              <xsl:value-of select="@count"/>
              aggregations)
            </B>
          </H3>
        </td>
      </tr>
      <xsl:apply-templates select="Aggregation"/>
    </table>
  </xsl:template>
  <xsl:template match="Aggregation">
    <tr bgcolor="#ffffcc">
      <td colspan="3">
        <xsl:value-of select="@name"/>
        (
        <xsl:value-of select="@aggId"/>
        ,
        <xsl:value-of select="@size"/>
        bytes,
        <xsl:value-of select="@count"/>
        entries)
      </td>
    </tr>
    <xsl:apply-templates select="Heading" mode="three"/>
    <xsl:apply-templates select="Resource"/>
  </xsl:template>
  <xsl:template match="PublishedResources">
    <table border="1">
      <tr VALIGN="MIDDLE" ALIGN="CENTER">
        <td colspan="3" bgcolor="#D3D6FF">
          <H3>
            <B>
              Cached Resource Fragments (
              <xsl:value-of select="@count"/>
              applications)
            </B>
          </H3>
        </td>
      </tr>
      <xsl:apply-templates select="Application"/>
    </table>
  </xsl:template>
  <xsl:template match="Application">
    <tr bgcolor="#ffffcc">
      <td colspan="3">
        Context-Path:
        <xsl:value-of select="@cPath"/>
        count:
        <xsl:value-of select="@count"/>
      </td>
    </tr>
    <xsl:apply-templates select="Heading" mode="three"/>
    <xsl:apply-templates select="Resource"/>
  </xsl:template>


  <xsl:template match="Resource">
    <tr>
      <td>
        <xsl:value-of select="@name"/>
      </td>
      <td>
        <xsl:value-of select="@variation"/>
      </td>
      <td>
        <xsl:choose>
          <xsl:when test="contains(., '
')">
            <pre>
              <xsl:value-of select="."/>
            </pre>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="."/>
          </xsl:otherwise>
        </xsl:choose>
      </td>
    </tr>
  </xsl:template>
  <xsl:template match="Heading" mode="two">
    <tr bgcolor="#ffffcc">
      <td>
        <xsl:value-of select="@name"/>
      </td>
      <td>
        <xsl:choose>
          <xsl:when test="contains(., '
')">
            <pre>
              <xsl:value-of select="."/>
            </pre>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="."/>
          </xsl:otherwise>
        </xsl:choose>
      </td>
    </tr>
  </xsl:template>
  <xsl:template match="Heading" mode="three">
    <tr bgcolor="#ffffcc">
      <td colspan="1">
        <xsl:value-of select="@name"/>
      </td>
      <td>
        <xsl:value-of select="@variation"/>
      </td>
      <td>
        <xsl:choose>
          <xsl:when test="contains(., '
')">
            <pre>
              <xsl:value-of select="."/>
            </pre>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="."/>
          </xsl:otherwise>
        </xsl:choose>
      </td>
    </tr>
  </xsl:template>



  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'SOAClientMonitoring' or @name = 'SOAServerMonitoring']">
    <xsl:apply-templates select="ClientServiceMonitoring_Root"/>
    <xsl:apply-templates select="ServerServiceMonitoring_Root"/>
  </xsl:template>

  <xsl:template match="Error">
    <xsl:param name="errorColSpan"/>
    <td bgcolor="#D02090" colspan="{$errorColSpan}">
      <pre><font color="#FFFFFF"><xsl:value-of select="."/></font></pre>
    </td>
  </xsl:template>

  <xsl:template match="ClientServiceMonitoring_Root">
    <xsl:choose>
      <xsl:when test="@single-service">
        <xsl:call-template name="ServiceMetricsHeading_detail">
          <xsl:with-param name="compName">Client</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="ClientServiceMonitoring" mode="detail"/>
      </xsl:when>
      <xsl:otherwise>
        <form name="resetForm" action="/admin/v3console/ValidateInternals?component=SOAClientMonitoring" method="post">
        <input id="action" name="action" value="reset" type="hidden"/>
        <input id="target" name="target" type="hidden"/>
        <table align="center" bgcolor="#B4D2E5" border="1" width="100%">
          <tr>
            <td colspan="1">
              <H4><CENTER>Client SOA Monitoring</CENTER></H4>
            </td>
          </tr>
          <tr>
            <xsl:apply-templates select="Error">
              <xsl:with-param name="errorColSpan">1</xsl:with-param>
            </xsl:apply-templates>
          </tr>
          <xsl:apply-templates select="ClientServiceMonitoring" mode="list"/>
        </table>
        </form>
        <br/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <xsl:template match="ServerServiceMonitoring_Root">
    <xsl:choose>
      <xsl:when test="@single-service">
        <xsl:call-template name="ServiceMetricsHeading_detail">
          <xsl:with-param name="compName">Server</xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="ServerServiceMonitoring" mode="detail"/>
      </xsl:when>
      <xsl:otherwise>
        <form name="resetForm" action="/admin/v3console/ValidateInternals?component=SOAServerMonitoring" method="post">
        <input id="action" name="action" value="reset" type="hidden"/>
        <input id="target" name="target" type="hidden"/>
        <table align="center" bgcolor="#B4D2E5" border="1" width="100%">
          <tr>
            <td colspan="1">
              <H4><CENTER>Server SOA Monitoring</CENTER></H4>
            </td>
          </tr>
          <tr>
            <xsl:apply-templates select="Error">
              <xsl:with-param name="errorColSpan">3</xsl:with-param>
            </xsl:apply-templates>
          </tr>
          <xsl:apply-templates select="ServerServiceMonitoring" mode="list"/>
        </table>
        </form>
        <br/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>


  <xsl:template match="ClientServiceMonitoring" mode="list">
    <tr><td>
      <table border="0"><tr><td width="100px" align="center">
      <a href="/admin/v3console/ValidateInternals?component=SOAClientMonitoring&amp;detail={@name}"><xsl:value-of select="@name"/></a>
      </td><td width="100px" align="center">
      <a href="javascript:void(0)" onclick="document.getElementById('target').value='{@name}';document.forms['resetForm'].submit();return false">Reset Metrics</a><br/>
      </td></tr></table>
      <xsl:apply-templates select="ServiceMetrics" mode="SOA_list"/>
    </td></tr>
  </xsl:template>

  <xsl:template match="ServerServiceMonitoring" mode="list">
    <tr><td>
      <table border="0"><tr><td width="100px" align="center">
      <a href="/admin/v3console/ValidateInternals?component=SOAServerMonitoring&amp;detail={@name}"><xsl:value-of select="@name"/></a>
      </td><td width="100px" align="center">
      <a href="javascript:void(0)" onclick="document.getElementById('target').value='{@name}';document.forms['resetForm'].submit();return false">Reset Metrics</a><br/>
      </td></tr></table>
      <xsl:apply-templates select="ServiceMetrics" mode="SOA_list"/>
    </td></tr>
  </xsl:template>


  <xsl:template match="ClientServiceMonitoring" mode="detail">
    <xsl:call-template name="CommonServiceMetrics_detail">
      <xsl:with-param name="compName">Client</xsl:with-param>
    </xsl:call-template>
  </xsl:template>

  <xsl:template match="ServerServiceMonitoring" mode="detail">
    <xsl:call-template name="CommonServiceMetrics_detail">
      <xsl:with-param name="compName">Server</xsl:with-param>
    </xsl:call-template>
  </xsl:template>

  <xsl:template name="ServiceMetricsHeading_detail">
    <xsl:param name="compName"/>

    <xsl:variable name="categoryAdd">
      <xsl:choose>
        <xsl:when test="@category">
          &amp;category=<xsl:value-of select="@category"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:text/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>

    <xsl:variable name="modeAdd">
      <xsl:choose>
        <xsl:when test="@mode">
          &amp;mode=<xsl:value-of select="@mode"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:text/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>

    <xsl:variable name="baseUrl">
      /admin/v3console/ValidateInternals?component=SOA<xsl:value-of select="$compName"/>Monitoring&amp;detail=<xsl:value-of select="@single-service"/>
    </xsl:variable>

    <font face="arial" size="2">
      Mode: <a href="{$baseUrl}{$categoryAdd}">Latest Data</a> /
      <a href="{$baseUrl}{$categoryAdd}&amp;mode=diff">Diff</a>
      <br/>
      Category: <a href="{$baseUrl}{$modeAdd}&amp;category=all">All</a> /
      <a href="{$baseUrl}{$modeAdd}&amp;category=timing">Timing</a> /
      <a href="{$baseUrl}{$modeAdd}&amp;category=error">Errors</a> /
      <a href="{$baseUrl}{$modeAdd}&amp;category=other">Other</a>
      <br/>
      <a href="/admin/v3console/ValidateInternals?component=SOA{$compName}Monitoring">Back to List</a>
      <br/>
    </font>
    <br/>

    <xsl:if test="@diff_error">Diff Error: <xsl:value-of select="@diff_error"/><br/><br/></xsl:if>
  </xsl:template>

  <xsl:template match="ServiceMetrics" mode="SOA_list">
    <table border="1" width="100%" bgcolor="#F3F3F3">
      <tr>
        <th align="center" width="10%">
          Status
        </th>
        <th align="center" width="10%">
          Metric
        </th>
        <th align="center" width="10%">
          Current Value
        </th>
        <th align="center" width="10%">
          Total Call Count
        </th>
        <th align="center" width="10%">
          Average Time Per Call
        </th>
        <th align="center" width="10%">
          Average Execution Time Per Call
        </th>
        <th align="center" width="10%">
          Total Error Count
        </th>
        <th align="center" width="10%">
          Execution Error Count
        </th>
        <th align="center" width="10%">
          Average Request Processing Time
        </th>
        <th align="center" width="10%">
          Average Response Processing Time
        </th>
      </tr>
      <tr>
        <xsl:choose>
          <xsl:when test="Error">
            <xsl:apply-templates select="Error">
              <xsl:with-param name="errorColSpan">7</xsl:with-param>
            </xsl:apply-templates>
          </xsl:when>
          <xsl:otherwise>
            <xsl:variable name="timeTotalCount" select="metric[@name='SoaFwk.Time.Total']/component[@name='count']"/>

            <td><xsl:value-of select="metric[@name]/component[@name='serviceStatus']"/></td>
            <td><xsl:value-of select="metric[@name]/component[@name='metricName']"/></td>
            <td><xsl:value-of select="metric[@name]/component[@name='currentvalue']"/></td>

            <td><xsl:value-of select="$timeTotalCount"/></td>
            <td>
              <xsl:if test="$timeTotalCount!=0">
                <xsl:variable name="average" select="metric[@name='SoaFwk.Time.Total']/component[@name='totalTime'] div $timeTotalCount div 1000000.0"/>
                <xsl:value-of select="format-number($average, '#.00')"/>ms
              </xsl:if>
            </td>
            <td>
              <xsl:variable name="bizTimeTotalCount" select="metric[@name='SoaFwk.Time.Call']/component[@name='count']"/>
              <xsl:if test="$bizTimeTotalCount!=0">
                <xsl:variable name="averageBiz" select="metric[@name='SoaFwk.Time.Call']/component[@name='totalTime'] div $bizTimeTotalCount div 1000000.0"/>
                <xsl:value-of select="format-number($averageBiz, '#.00')"/>ms
              </xsl:if>
            </td>
            <td><xsl:value-of select="metric[@name='SoaFwk.Err.Total']/component[@name='value']"/>
            </td>
            <td><xsl:value-of select="metric[@name='SoaFwk.FailedCalls']/component[@name='value']"/>
            </td>
            <td>
              <xsl:variable name="reqTimeTotalCount" select="metric[@name='SoaFwk.Time.Pipeline_Request']/component[@name='count']"/>
              <xsl:if test="$reqTimeTotalCount!=0">
                <xsl:variable name="averageReq" select="metric[@name='SoaFwk.Time.Pipeline_Request']/component[@name='totalTime'] div $reqTimeTotalCount div 1000000.0"/>
                <xsl:value-of select="format-number($averageReq, '#.00')"/>ms
              </xsl:if>
            </td>
            <td>
              <xsl:variable name="respTimeTotalCount" select="metric[@name='SoaFwk.Time.Pipeline_Response']/component[@name='count']"/>
              <xsl:if test="$respTimeTotalCount!=0">
                <xsl:variable name="averageResp" select="metric[@name='SoaFwk.Time.Pipeline_Response']/component[@name='totalTime'] div $respTimeTotalCount div 1000000.0"/>
                <xsl:value-of select="format-number($averageResp, '#.00')"/>ms
              </xsl:if>
            </td>

          </xsl:otherwise>
        </xsl:choose>
      </tr>
    </table>
  </xsl:template>

  <xsl:template name="CommonServiceMetrics_detail">
    <xsl:param name="compName"/>

    <table border="1" width="100%">
      <tr bgcolor="#B4D2E5">
        <td colspan="3">
          <H4><CENTER>Detailed <xsl:value-of select="$compName"/> Monitoring Data for <xsl:value-of select="@name"/></CENTER></H4>
          <xsl:if test="../@category or ../@interval">
            <xsl:if test="../@category">Category Filter: <xsl:value-of select="../@category"/><br/></xsl:if>
            <xsl:if test="../@interval">Diff Interval: <xsl:value-of select="../@interval"/><br/></xsl:if>
          </xsl:if>
        </td>
      </tr>
      <tr bgcolor="#B4D2E5">
        <th width="40%">Metric</th>
        <th width="30%">Operation</th>
        <th width="30%">Value</th>
      </tr>
      <xsl:apply-templates select="ServiceMetrics" mode="SOA_detail"/>
      <xsl:apply-templates select="OperationMetrics" mode="SOA_detail"/>
    </table>
  </xsl:template>

  <xsl:template match="ServiceMetrics" mode="SOA_detail">
    <xsl:call-template name="CommonOperationMetrics_detail">
      <xsl:with-param name="opName">ALL</xsl:with-param>
    </xsl:call-template>
  </xsl:template>

  <xsl:template match="OperationMetrics" mode="SOA_detail">
    <xsl:call-template name="CommonOperationMetrics_detail">
      <xsl:with-param name="opName"><xsl:value-of select="@name"/></xsl:with-param>
    </xsl:call-template>
  </xsl:template>

  <xsl:template name="CommonOperationMetrics_detail">
    <xsl:param name="opName"/>
    <xsl:apply-templates select="metric" mode="CommonOperationMetric_detail">
      <xsl:with-param name="opName"><xsl:value-of select="$opName"/></xsl:with-param>
    </xsl:apply-templates>
  </xsl:template>

  <xsl:template match="metric" mode="CommonOperationMetric_detail">
    <xsl:param name="opName"/>
    <xsl:apply-templates select="component" mode="CommonOperationMetricComponent_detail">
      <xsl:with-param name="opName"><xsl:value-of select="$opName"/></xsl:with-param>
      <xsl:with-param name="metricName"><xsl:value-of select="@name"/></xsl:with-param>
    </xsl:apply-templates>
  </xsl:template>

  <xsl:template match="component" mode="CommonOperationMetricComponent_detail">
    <xsl:param name="opName"/>
    <xsl:param name="metricName"/>
    <tr>
      <td><xsl:value-of select="$metricName"/>.<xsl:value-of select="@name"/></td>
      <td><xsl:value-of select="$opName"/></td>
      <td><xsl:value-of select="."/></td>
    </tr>
  </xsl:template>



<xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[contains(@name, 'CommandInfoComponentStatus')]">
  <a name="{@name}"/>
  <h4>*The Stage Id and its corresponding Handlers will be listed only when the command has been accessed at least once.</h4>
  <table border="1">
  <tr>
      <td colspan="5" bgcolor="#FFCC00">
        <H3><CENTER><B><xsl:value-of select="@name"/></B></CENTER></H3>
      </td>
  </tr>
  <tr bgcolor="#ffffcc">
    <th><center><b>Command Name</b></center></th>
    <th><center><b>Command Info</b></center></th>
    <th><center><b>Stage Id</b></center></th>
    <th><center><b>Handler Name</b></center></th>
  </tr>

  <xsl:for-each select="Properties">
    <tr>
      <td><xsl:value-of select="Property[@name = 'Command Name']"/></td>
      <td width="150px">
       <xsl:value-of select="Property[@name = 'Command Info']"/>
      </td>
      <td width="250px">
        <xsl:call-template name="split-string">
           <xsl:with-param name="list"><xsl:value-of select="Property[@name = 'Stage Id']"/></xsl:with-param>
          <xsl:with-param name="delimiter"><xsl:value-of select="','"/></xsl:with-param>
        </xsl:call-template>
      </td>
      <td width="250px">
        <xsl:call-template name="split-string">
           <xsl:with-param name="list"><xsl:value-of select="Property[@name = 'Handler Name']"/></xsl:with-param>
          <xsl:with-param name="delimiter"><xsl:value-of select="','"/></xsl:with-param>
        </xsl:call-template>
      </td>
    </tr>
  </xsl:for-each>
  </table>
</xsl:template>



<xsl:template name="split-string">
    <xsl:param name="list"/>
    <xsl:param name="delimiter"/>
    <xsl:variable name="newlist">
    <xsl:choose>
      <xsl:when test="contains($list, $delimiter)"><xsl:value-of select="normalize-space($list)"/></xsl:when>
      <xsl:otherwise><xsl:value-of select="concat(normalize-space($list), $delimiter)"/></xsl:otherwise>
    </xsl:choose>
  </xsl:variable>

    <xsl:variable name="first" select="substring-before($newlist, $delimiter)"/>
    <xsl:variable name="remaining" select="substring-after($newlist, $delimiter)"/>
    <xsl:value-of select="$first"/>
    <xsl:if test="$remaining">
      <xsl:text>,
</xsl:text>
        <xsl:call-template name="split-string">
            <xsl:with-param name="list" select="$remaining"/>
      <xsl:with-param name="delimiter"><xsl:value-of select="$delimiter"/></xsl:with-param>
        </xsl:call-template>
    </xsl:if>
</xsl:template>



<xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[contains(@name, 'URLStrategyComponentStatus')]">

  <a name="{@name}"/>
  <table border="1">
  <tr>
      <td colspan="4" bgcolor="#FFCC00">
        <H3><CENTER><B><xsl:value-of select="@name"/></B></CENTER></H3>
      </td>
  </tr>
  <tr bgcolor="#ffffcc">
    <th><center><b>Application Name</b></center></th>
    <th><center><b>URLStrategy Class</b></center></th>
  </tr>

  <xsl:for-each select="Properties">
    <tr>
      <td><xsl:value-of select="Property[@name = 'ApplicationName']"/></td>
      <td><xsl:value-of select="Property[@name = 'URLStrategyClass']"/></td>
    </tr>
  </xsl:for-each>
  </table>
</xsl:template>

<xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[contains(@name, 'RaptorBundles')]">
 <div class="space20v"/>
 <div class="table_title" id="javaCalServiceDatum_title"><xsl:value-of select="@name"/></div>
  <table border="1" class="display componentTable" id="javaCalServiceDatum">
  <thead>
  <tr>
    <th colspan="3"><center>Bundle</center></th>
    <th colspan="3"><center>SCM</center></th>
    <th colspan="3"><center>Init</center></th>
  </tr>
  <tr>
    <th><center><b>Symbolic Name</b></center></th>
    <th><center><b>Version</b></center></th>
    <th><center><b>Top?</b></center></th>
    <th><center><b>URL</b></center></th>
    <th><center><b>Tag/Commit ID</b></center></th>
    <th><center><b>Branch</b></center></th>
    <th><center><b>ms</b></center></th>
    <th><center><b>Success?</b></center></th>
    <th><center><b>Messages</b></center></th>
  </tr>

  </thead>
  <tbody>
     <xsl:apply-templates select="Properties"/>
  </tbody>
  </table>
</xsl:template>

<xsl:template match="Properties">

  <tr>
      <td><xsl:value-of select="Property[@name = 'Bundle Symbolic Name']"/></td>
      <td><xsl:value-of select="Property[@name = 'Bundle Version']"/></td>
      <td style="text-align: center;"><xsl:value-of select="Property[@name = 'Top Level?']"/></td>
      <td><xsl:value-of select="Property[@name = 'SCM URL']"/></td>
      <td>
          <xsl:choose>
            <xsl:when test="Property[@name = 'Tag/Commit ID'] and Property[@href]">
            <span style="color:#0033CC">
              <u><a href="{Property[@name = 'Tag/Commit ID']/@href}" target="_blank">
                <xsl:choose>
                  <xsl:when test="contains(., '')">
                    <pre>
                      <xsl:value-of select="Property[@name = 'Tag/Commit ID']"/>
                    </pre>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="Property[@name = 'Tag/Commit ID']"/>
                  </xsl:otherwise>
                </xsl:choose>
              </a>

              </u>
              </span>
            </xsl:when>
            <xsl:otherwise>
              <xsl:choose>
                <xsl:when test="contains(., '')">
                  <pre>
                    <xsl:value-of select="Property[@name = 'Tag/Commit ID']"/>
                  </pre>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="Property[@name = 'Tag/Commit ID']"/>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:otherwise>
          </xsl:choose>
        </td>
      <td><xsl:value-of select="Property[@name = 'Branch']"/></td>
      <td style="text-align: right;"><xsl:value-of select="Property[@name = 'Init Time']"/></td>
      <td style="text-align: center;"><xsl:value-of select="Property[@name = 'Init Success?']"/></td>
      <td><xsl:value-of select="Property[@name = 'Init Messages']"/></td>

    </tr>
</xsl:template>







  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'OnDemandEchoInvokerResults']">
    <head>
      <STYLE TYPE="text/css">
           table.echo-results-table{
          border:1px solid black;
          border-collapse:collapse;
          font-family:verdana;
           }
           th.echo-results-table-header{
             background-color: #CCCCFF;
             border: 1px solid #AAAAAA;
             padding: 5px 2px 5px 2px;
             background-position: left center;
             background-repeat:no-repeat;
             align:left;
           }
           tr.echo-results-table-row{
            background-color:#DDDDDD;
           }
           table.echo-results-table td{
            border:1px solid #AAAAAA;
            padding:2px 2px;
            border-collapse:collapse;
            border-style:solid;
            font-size:12px;
           }
           table.echo-results-table tr:hover{
            background-color:#CCFFFF;
           }
           table.echo-results-table div {
             font-size:12px;
           }
           a.refresh{
             font:81.25%/1 arial,helvetica,sans-serif;
             font-size:16px;
           }
           a.clearAll{
             font:81.25%/1 arial,helvetica,sans-serif;
             font-size:16px;
           }
           span.refreshMessage{
             font:81.25%/1 arial,helvetica,sans-serif;
             font-size:12px;
           }
        td.echo-invocation-error{
            color:red;
           }
      </STYLE>
      <script language="javascript">

      /*! jQuery v1.6.4 http://jquery.com/ | http://jquery.org/license */
(function(a,b){function cu(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cr(a){if(!cg[a]){var b=c.body,d=f("&lt;"+a+"&gt;").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ch||(ch=c.createElement("iframe"),ch.frameBorder=ch.width=ch.height=0),b.appendChild(ch);if(!ci||!ch.createElement)ci=(ch.contentWindow||ch.contentDocument).document,ci.write((c.compatMode==="CSS1Compat"?"&lt;!doctype html&gt;":"")+"&lt;html&gt;&lt;body&gt;"),ci.close();d=ci.createElement(a),ci.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ch)}cg[a]=e}return cg[a]}function cq(a,b){var c={};f.each(cm.concat.apply([],cm.slice(0,b)),function(){c[this]=a});return c}function cp(){cn=b}function co(){setTimeout(cp,0);return cn=f.now()}function cf(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ce(){try{return new a.XMLHttpRequest}catch(b){}}function b$(a,c){a.dataFilter&amp;&amp;(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g&lt;i;g++){if(g===1)for(h in a.converters)typeof h=="string"&amp;&amp;(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&amp;&amp;l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&amp;&amp;(n=o);break}}}}!n&amp;&amp;!p&amp;&amp;f.error("No conversion from "+m.replace(" "," to ")),n!==!0&amp;&amp;(c=n?n(c):p(o(c)))}}return c}function bZ(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&amp;&amp;(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&amp;&amp;(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&amp;&amp;e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&amp;&amp;f.unshift(j);return d[j]}}function bY(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bA.test(a)?d(a,e):bY(a+"["+(typeof e=="object"||f.isArray(e)?b:"")+"]",e,c,d)});else if(!c&amp;&amp;b!=null&amp;&amp;typeof b=="object")for(var e in b)bY(a+"["+e+"]",b[e],c,d);else d(a,b)}function bX(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&amp;&amp;((g[d]?a:e||(e={}))[d]=c[d]);e&amp;&amp;f.extend(!0,a,e)}function bW(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bP,l;for(;i&lt;j&amp;&amp;(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&amp;&amp;(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bW(a,c,d,e,l,g)));(k||!l)&amp;&amp;!g["*"]&amp;&amp;(l=bW(a,c,d,e,"*",g));return l}function bV(a){return function(b,c){typeof b!="string"&amp;&amp;(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bL),e=0,g=d.length,h,i,j;for(;e&lt;g;e++)h=d[e],j=/^\+/.test(h),j&amp;&amp;(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function by(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?bt:bu;if(d&gt;0){c!=="border"&amp;&amp;f.each(e,function(){c||(d-=parseFloat(f.css(a,"padding"+this))||0),c==="margin"?d+=parseFloat(f.css(a,c+this))||0:d-=parseFloat(f.css(a,"border"+this+"Width"))||0});return d+"px"}d=bv(a,b,b);if(d&lt;0||d==null)d=a.style[b]||0;d=parseFloat(d)||0,c&amp;&amp;f.each(e,function(){d+=parseFloat(f.css(a,"padding"+this))||0,c!=="padding"&amp;&amp;(d+=parseFloat(f.css(a,"border"+this+"Width"))||0),c==="margin"&amp;&amp;(d+=parseFloat(f.css(a,c+this))||0)});return d+"px"}function bl(a,b){b.src?f.ajax({url:b.src,async:!1,dataType:"script"}):f.globalEval((b.text||b.textContent||b.innerHTML||"").replace(bd,"/*$0*/")),b.parentNode&amp;&amp;b.parentNode.removeChild(b)}function bk(a){f.nodeName(a,"input")?bj(a):"getElementsByTagName"in a&amp;&amp;f.grep(a.getElementsByTagName("input"),bj)}function bj(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bi(a){return"getElementsByTagName"in a?a.getElementsByTagName("*"):"querySelectorAll"in a?a.querySelectorAll("*"):[]}function bh(a,b){var c;if(b.nodeType===1){b.clearAttributes&amp;&amp;b.clearAttributes(),b.mergeAttributes&amp;&amp;b.mergeAttributes(a),c=b.nodeName.toLowerCase();if(c==="object")b.outerHTML=a.outerHTML;else if(c!=="input"||a.type!=="checkbox"&amp;&amp;a.type!=="radio"){if(c==="option")b.selected=a.defaultSelected;else if(c==="input"||c==="textarea")b.defaultValue=a.defaultValue}else a.checked&amp;&amp;(b.defaultChecked=b.checked=a.checked),b.value!==a.value&amp;&amp;(b.value=a.value);b.removeAttribute(f.expando)}}function bg(a,b){if(b.nodeType===1&amp;&amp;!!f.hasData(a)){var c=f.expando,d=f.data(a),e=f.data(b,d);if(d=d[c]){var g=d.events;e=e[c]=f.extend({},d);if(g){delete e.handle,e.events={};for(var h in g)for(var i=0,j=g[h].length;i&lt;j;i++)f.event.add(b,h+(g[h][i].namespace?".":"")+g[h][i].namespace,g[h][i],g[h][i].data)}}}}function bf(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function V(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(Q.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)&gt;=0===c})}function U(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function M(a,b){return(a&amp;&amp;a!=="*"?a+".":"")+b.replace(y,"`").replace(z,"&amp;")}function L(a){var b,c,d,e,g,h,i,j,k,l,m,n,o,p=[],q=[],r=f._data(this,"events");if(!(a.liveFired===this||!r||!r.live||a.target.disabled||a.button&amp;&amp;a.type==="click")){a.namespace&amp;&amp;(n=new RegExp("(^|\\.)"+a.namespace.split(".").join("\\.(?:.*\\.)?")+"(\\.|$)")),a.liveFired=this;var s=r.live.slice(0);for(i=0;i&lt;s.length;i++)g=s[i],g.origType.replace(w,"")===a.type?q.push(g.selector):s.splice(i--,1);e=f(a.target).closest(q,a.currentTarget);for(j=0,k=e.length;j&lt;k;j++){m=e[j];for(i=0;i&lt;s.length;i++){g=s[i];if(m.selector===g.selector&amp;&amp;(!n||n.test(g.namespace))&amp;&amp;!m.elem.disabled){h=m.elem,d=null;if(g.preType==="mouseenter"||g.preType==="mouseleave")a.type=g.preType,d=f(a.relatedTarget).closest(g.selector)[0],d&amp;&amp;f.contains(h,d)&amp;&amp;(d=h);(!d||d!==h)&amp;&amp;p.push({elem:h,handleObj:g,level:m.level})}}}for(j=0,k=p.length;j&lt;k;j++){e=p[j];if(c&amp;&amp;e.level&gt;c)break;a.currentTarget=e.elem,a.data=e.handleObj.data,a.handleObj=e.handleObj,o=e.handleObj.origHandler.apply(e.elem,arguments);if(o===!1||a.isPropagationStopped()){c=e.level,o===!1&amp;&amp;(b=!1);if(a.isImmediatePropagationStopped())break}}return b}}function J(a,c,d){var e=f.extend({},d[0]);e.type=a,e.originalEvent={},e.liveFired=b,f.event.handle.call(c,e),e.isDefaultPrevented()&amp;&amp;d[0].preventDefault()}function D(){return!0}function C(){return!1}function m(a,c,d){var e=c+"defer",g=c+"queue",h=c+"mark",i=f.data(a,e,b,!0);i&amp;&amp;(d==="queue"||!f.data(a,g,b,!0))&amp;&amp;(d==="mark"||!f.data(a,h,b,!0))&amp;&amp;setTimeout(function(){!f.data(a,g,b,!0)&amp;&amp;!f.data(a,h,b,!0)&amp;&amp;(f.removeData(a,e,!0),i.resolve())},0)}function l(a){for(var b in a)if(b!=="toJSON")return!1;return!0}function k(a,c,d){if(d===b&amp;&amp;a.nodeType===1){var e="data-"+c.replace(j,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNaN(d)?i.test(d)?f.parseJSON(d):d:parseFloat(d)}catch(g){}f.data(a,c,d)}else d=b}return d}var c=a.document,d=a.navigator,e=a.location,f=function(){function K(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(K,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^#&lt;]*(&lt;[\w\W]+&gt;)[^&gt;]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/\d/,n=/^&lt;(\w+)\s*\/?&gt;(?:&lt;\/\1&gt;)?$/,o=/^[\],:{}\s]*$/,p=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,q=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,r=/(?:^|:|,)(?:\s*\[)+/g,s=/(webkit)[ \/]([\w.]+)/,t=/(opera)(?:.*version)?[ \/]([\w.]+)/,u=/(msie) ([\w.]+)/,v=/(mozilla)(?:.*? rv:([\w.]+))?/,w=/-([a-z]|[0-9])/ig,x=/^-ms-/,y=function(a,b){return(b+"").toUpperCase()},z=d.userAgent,A,B,C,D=Object.prototype.toString,E=Object.prototype.hasOwnProperty,F=Array.prototype.push,G=Array.prototype.slice,H=String.prototype.trim,I=Array.prototype.indexOf,J={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&amp;&amp;!d&amp;&amp;c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="&lt;"||a.charAt(a.length-1)!=="&gt;"||a.length&lt;3?g=i.exec(a):g=[null,a,null];if(g&amp;&amp;(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=n.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&amp;&amp;h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&amp;&amp;(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.6.4",length:0,size:function(){return this.length},toArray:function(){return G.call(this,0)},get:function(a){return a==null?this.toArray():a&lt;0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?F.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&amp;&amp;(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),B.done(a);return this},eq:function(a){return a===-1?this.slice(a):this.slice(a,+a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(G.apply(this,arguments),"slice",G.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:F,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&amp;&amp;(l=i,i=arguments[1]||{},j=2),typeof i!="object"&amp;&amp;!e.isFunction(i)&amp;&amp;(i={}),k===j&amp;&amp;(i=this,--j);for(;j&lt;k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&amp;&amp;f&amp;&amp;(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&amp;&amp;e.isArray(d)?d:[]):h=d&amp;&amp;e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&amp;&amp;(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&amp;&amp;(a.$=g),b&amp;&amp;a.jQuery===e&amp;&amp;(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&amp;&amp;!--e.readyWait||a!==!0&amp;&amp;!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&amp;&amp;--e.readyWait&gt;0)return;B.resolveWith(c,[e]),e.fn.trigger&amp;&amp;e(c).trigger("ready").unbind("ready")}},bindReady:function(){if(!B){B=e._Deferred();if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",C,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",C),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&amp;&amp;b&amp;&amp;K()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a&amp;&amp;typeof a=="object"&amp;&amp;"setInterval"in a},isNaN:function(a){return a==null||!m.test(a)||isNaN(a)},type:function(a){return a==null?String(a):J[D.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&amp;&amp;!E.call(a,"constructor")&amp;&amp;!E.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||E.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw a},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&amp;&amp;a.JSON.parse)return a.JSON.parse(b);if(o.test(b.replace(p,"@").replace(q,"]").replace(r,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&amp;&amp;e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&amp;&amp;j.test(b)&amp;&amp;(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(x,"ms-").replace(w,y)},nodeName:function(a,b){return a.nodeName&amp;&amp;a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g&lt;h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g&lt;h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:H?function(a){return a==null?"":H.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?F.call(c,a):e.merge(c,a)}return c},inArray:function(a,b){if(!b)return-1;if(I)return I.call(b,a);for(var c=0,d=b.length;c&lt;d;c++)if(b[c]===a)return c;return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e&lt;f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f&lt;g;f++)e=!!b(a[f],f),c!==e&amp;&amp;d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&amp;&amp;typeof j=="number"&amp;&amp;(j&gt;0&amp;&amp;a[0]&amp;&amp;a[j-1]||j===0||e.isArray(a));if(k)for(;i&lt;j;i++)f=c(a[i],i,d),f!=null&amp;&amp;(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&amp;&amp;(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=G.call(arguments,2),g=function(){return a.apply(c,f.concat(G.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h){var i=a.length;if(typeof c=="object"){for(var j in c)e.access(a,j,c[j],f,g,d);return a}if(d!==b){f=!h&amp;&amp;f&amp;&amp;e.isFunction(d);for(var k=0;k&lt;i;k++)g(a[k],c,f?d.call(a[k],k,g(a[k],c)):d,h);return a}return i?g(a[0],c):b},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=s.exec(a)||t.exec(a)||u.exec(a)||a.indexOf("compatible")&lt;0&amp;&amp;v.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&amp;&amp;f instanceof e&amp;&amp;!(f instanceof a)&amp;&amp;(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){J["[object "+b+"]"]=b.toLowerCase()}),A=e.uaMatch(z),A.browser&amp;&amp;(e.browser[A.browser]=!0,e.browser.version=A.version),e.browser.webkit&amp;&amp;(e.browser.safari=!0),j.test(" ")&amp;&amp;(k=/^[\s\xA0]+/,l=/[\s\xA0]+$/),h=e(c),c.addEventListener?C=function(){c.removeEventListener("DOMContentLoaded",C,!1),e.ready()}:c.attachEvent&amp;&amp;(C=function(){c.readyState==="complete"&amp;&amp;(c.detachEvent("onreadystatechange",C),e.ready())});return e}(),g="done fail isResolved isRejected promise then always pipe".split(" "),h=[].slice;f.extend({_Deferred:function(){var a=[],b,c,d,e={done:function(){if(!d){var c=arguments,g,h,i,j,k;b&amp;&amp;(k=b,b=0);for(g=0,h=c.length;g&lt;h;g++)i=c[g],j=f.type(i),j==="array"?e.done.apply(e,i):j==="function"&amp;&amp;a.push(i);k&amp;&amp;e.resolveWith(k[0],k[1])}return this},resolveWith:function(e,f){if(!d&amp;&amp;!b&amp;&amp;!c){f=f||[],c=1;try{while(a[0])a.shift().apply(e,f)}finally{b=[e,f],c=0}}return this},resolve:function(){e.resolveWith(this,arguments);return this},isResolved:function(){return!!c||!!b},cancel:function(){d=1,a=[];return this}};return e},Deferred:function(a){var b=f._Deferred(),c=f._Deferred(),d;f.extend(b,{then:function(a,c){b.done(a).fail(c);return this},always:function(){return b.done.apply(b,arguments).fail.apply(this,arguments)},fail:c.done,rejectWith:c.resolveWith,reject:c.resolve,isRejected:c.isResolved,pipe:function(a,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[c,"reject"]},function(a,c){var e=c[0],g=c[1],h;f.isFunction(e)?b[a](function(){h=e.apply(this,arguments),h&amp;&amp;f.isFunction(h.promise)?h.promise().then(d.resolve,d.reject):d[g+"With"](this===b?d:this,[h])}):b[a](d[g])})}).promise()},promise:function(a){if(a==null){if(d)return d;d=a={}}var c=g.length;while(c--)a[g[c]]=b[g[c]];return a}}),b.done(c.cancel).fail(b.cancel),delete b.cancel,a&amp;&amp;a.call(b,b);return b},when:function(a){function i(a){return function(c){b[a]=arguments.length&gt;1?h.call(arguments,0):c,--e||g.resolveWith(g,h.call(b,0))}}var b=arguments,c=0,d=b.length,e=d,g=d&lt;=1&amp;&amp;a&amp;&amp;f.isFunction(a.promise)?a:f.Deferred();if(d&gt;1){for(;c&lt;d;c++)b[c]&amp;&amp;f.isFunction(b[c].promise)?b[c].promise().then(i(c),g.reject):--e;e||g.resolveWith(g,b)}else g!==a&amp;&amp;g.resolveWith(g,d?[a]:[]);return g.promise()}}),f.support=function(){var a=c.createElement("div"),b=c.documentElement,d,e,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u;a.setAttribute("className","t"),a.innerHTML="   &lt;link/&gt;&lt;table&gt;&lt;/table&gt;&lt;a href='/a' style='top:1px;float:left;opacity:.55;'&gt;a&lt;/a&gt;&lt;input type='checkbox'/&gt;",d=a.getElementsByTagName("*"),e=a.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=a.getElementsByTagName("input")[0],k={leadingWhitespace:a.firstChild.nodeType===3,tbody:!a.getElementsByTagName("tbody").length,htmlSerialize:!!a.getElementsByTagName("link").length,style:/top/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="/a",opacity:/^0.55$/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:a.className!=="t",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0},i.checked=!0,k.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,k.optDisabled=!h.disabled;try{delete a.test}catch(v){k.deleteExpando=!1}!a.addEventListener&amp;&amp;a.attachEvent&amp;&amp;a.fireEvent&amp;&amp;(a.attachEvent("onclick",function(){k.noCloneEvent=!1}),a.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),k.radioValue=i.value==="t",i.setAttribute("checked","checked"),a.appendChild(i),l=c.createDocumentFragment(),l.appendChild(a.firstChild),k.checkClone=l.cloneNode(!0).cloneNode(!0).lastChild.checked,a.innerHTML="",a.style.width=a.style.paddingLeft="1px",m=c.getElementsByTagName("body")[0],o=c.createElement(m?"div":"body"),p={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},m&amp;&amp;f.extend(p,{position:"absolute",left:"-1000px",top:"-1000px"});for(t in p)o.style[t]=p[t];o.appendChild(a),n=m||b,n.insertBefore(o,n.firstChild),k.appendChecked=i.checked,k.boxModel=a.offsetWidth===2,"zoom"in a.style&amp;&amp;(a.style.display="inline",a.style.zoom=1,k.inlineBlockNeedsLayout=a.offsetWidth===2,a.style.display="",a.innerHTML="&lt;div style='width:4px;'&gt;&lt;/div&gt;",k.shrinkWrapBlocks=a.offsetWidth!==2),a.innerHTML="&lt;table&gt;&lt;tr&gt;&lt;td style='padding:0;border:0;display:none'&gt;&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;",q=a.getElementsByTagName("td"),u=q[0].offsetHeight===0,q[0].style.display="",q[1].style.display="none",k.reliableHiddenOffsets=u&amp;&amp;q[0].offsetHeight===0,a.innerHTML="",c.defaultView&amp;&amp;c.defaultView.getComputedStyle&amp;&amp;(j=c.createElement("div"),j.style.width="0",j.style.marginRight="0",a.appendChild(j),k.reliableMarginRight=(parseInt((c.defaultView.getComputedStyle(j,null)||{marginRight:0}).marginRight,10)||0)===0),o.innerHTML="",n.removeChild(o);if(a.attachEvent)for(t in{submit:1,change:1,focusin:1})s="on"+t,u=s in a,u||(a.setAttribute(s,"return;"),u=typeof a[s]=="function"),k[t+"Bubbles"]=u;o=l=g=h=m=j=a=i=null;return k}(),f.boxModel=f.support.boxModel;var i=/^(?:\{.*\}|\[.*\])$/,j=/([A-Z])/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&amp;&amp;!l(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i=f.expando,j=typeof c=="string",k=a.nodeType,l=k?f.cache:a,m=k?a[f.expando]:a[f.expando]&amp;&amp;f.expando;if((!m||e&amp;&amp;m&amp;&amp;l[m]&amp;&amp;!l[m][i])&amp;&amp;j&amp;&amp;d===b)return;m||(k?a[f.expando]=m=++f.uuid:m=f.expando),l[m]||(l[m]={},k||(l[m].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?l[m][i]=f.extend(l[m][i],c):l[m]=f.extend(l[m],c);g=l[m],e&amp;&amp;(g[i]||(g[i]={}),g=g[i]),d!==b&amp;&amp;(g[f.camelCase(c)]=d);if(c==="events"&amp;&amp;!g[c])return g[i]&amp;&amp;g[i].events;j?(h=g[c],h==null&amp;&amp;(h=g[f.camelCase(c)])):h=g;return h}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e=f.expando,g=a.nodeType,h=g?f.cache:a,i=g?a[f.expando]:f.expando;if(!h[i])return;if(b){d=c?h[i][e]:h[i];if(d){d[b]||(b=f.camelCase(b)),delete d[b];if(!l(d))return}}if(c){delete h[i][e];if(!l(h[i]))return}var j=h[i][e];f.support.deleteExpando||!h.setInterval?delete h[i]:h[i]=null,j?(h[i]={},g||(h[i].toJSON=f.noop),h[i][e]=j):g&amp;&amp;(f.support.deleteExpando?delete a[f.expando]:a.removeAttribute?a.removeAttribute(f.expando):a[f.expando]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&amp;&amp;a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d=null;if(typeof a=="undefined"){if(this.length){d=f.data(this[0]);if(this[0].nodeType===1){var e=this[0].attributes,g;for(var h=0,i=e.length;h&lt;i;h++)g=e[h].name,g.indexOf("data-")===0&amp;&amp;(g=f.camelCase(g.substring(5)),k(this[0],g,d[g]))}}return d}if(typeof a=="object")return this.each(function(){f.data(this,a)});var j=a.split(".");j[1]=j[1]?"."+j[1]:"";if(c===b){d=this.triggerHandler("getData"+j[1]+"!",[j[0]]),d===b&amp;&amp;this.length&amp;&amp;(d=f.data(this[0],a),d=k(this[0],a,d));return d===b&amp;&amp;j[1]?this.data(j[0]):d}return this.each(function(){var b=f(this),d=[j[0],c];b.triggerHandler("setData"+j[1]+"!",d),f.data(this,a,c),b.triggerHandler("changeData"+j[1]+"!",d)})},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,c){a&amp;&amp;(c=(c||"fx")+"mark",f.data(a,c,(f.data(a,c,b,!0)||0)+1,!0))},_unmark:function(a,c,d){a!==!0&amp;&amp;(d=c,c=a,a=!1);if(c){d=d||"fx";var e=d+"mark",g=a?0:(f.data(c,e,b,!0)||1)-1;g?f.data(c,e,g,!0):(f.removeData(c,e,!0),m(c,d,"mark"))}},queue:function(a,c,d){if(a){c=(c||"fx")+"queue";var e=f.data(a,c,b,!0);d&amp;&amp;(!e||f.isArray(d)?e=f.data(a,c,f.makeArray(d),!0):e.push(d));return e||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e;d==="inprogress"&amp;&amp;(d=c.shift()),d&amp;&amp;(b==="fx"&amp;&amp;c.unshift("inprogress"),d.call(a,function(){f.dequeue(a,b)})),c.length||(f.removeData(a,b+"queue",!0),m(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){typeof a!="string"&amp;&amp;(c=a,a="fx");if(c===b)return f.queue(this[0],a);return this.each(function(){var b=f.queue(this,a,c);a==="fx"&amp;&amp;b[0]!=="inprogress"&amp;&amp;f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(){var c=this;setTimeout(function(){f.dequeue(c,b)},a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&amp;&amp;(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&amp;&amp;f.data(e[g],i,f._Deferred(),!0))h++,l.done(m);m();return d.promise()}});var n=/[\n\t\r]/g,o=/\s+/,p=/\r/g,q=/^(?:button|input)$/i,r=/^(?:button|input|object|select|textarea)$/i,s=/^a(?:rea)?$/i,t=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,u,v;f.fn.extend({attr:function(a,b){return f.access(this,a,b,!0,f.attr)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,a,b,!0,f.prop)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&amp;&amp;typeof a=="string"){b=a.split(o);for(c=0,d=this.length;c&lt;d;c++){e=this[c];if(e.nodeType===1)if(!e.className&amp;&amp;b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h&lt;i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&amp;&amp;typeof a=="string"||a===b){c=(a||"").split(o);for(d=0,e=this.length;d&lt;e;d++){g=this[d];if(g.nodeType===1&amp;&amp;g.className)if(a){h=(" "+g.className+" ").replace(n," ");for(i=0,j=c.length;i&lt;j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(o);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&amp;&amp;f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ";for(var c=0,d=this.length;c&lt;d;c++)if(this[c].nodeType===1&amp;&amp;(" "+this[c].className+" ").replace(n," ").indexOf(b)&gt;-1)return!0;return!1},val:function(a){var c,d,e=this[0];if(!arguments.length){if(e){c=f.valHooks[e.nodeName.toLowerCase()]||f.valHooks[e.type];if(c&amp;&amp;"get"in c&amp;&amp;(d=c.get(e,"value"))!==b)return d;d=e.value;return typeof d=="string"?d.replace(p,""):d==null?"":d}return b}var g=f.isFunction(a);return this.each(function(d){var e=f(this),h;if(this.nodeType===1){g?h=a.call(this,d,e.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&amp;&amp;(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.nodeName.toLowerCase()]||f.valHooks[this.type];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c=a.selectedIndex,d=[],e=a.options,g=a.type==="select-one";if(c&lt;0)return null;for(var h=g?c:0,i=g?c+1:e.length;h&lt;i;h++){var j=e[h];if(j.selected&amp;&amp;(f.support.optDisabled?!j.disabled:j.getAttribute("disabled")===null)&amp;&amp;(!j.parentNode.disabled||!f.nodeName(j.parentNode,"optgroup"))){b=f(j).val();if(g)return b;d.push(b)}}if(g&amp;&amp;!d.length&amp;&amp;e.length)return f(e[c]).val();return d},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)&gt;=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attrFix:{tabindex:"tabIndex"},attr:function(a,c,d,e){var g=a.nodeType;if(!a||g===3||g===8||g===2)return b;if(e&amp;&amp;c in f.attrFn)return f(a)[c](d);if(!("getAttribute"in a))return f.prop(a,c,d);var h,i,j=g!==1||!f.isXMLDoc(a);j&amp;&amp;(c=f.attrFix[c]||c,i=f.attrHooks[c],i||(t.test(c)?i=v:u&amp;&amp;(i=u)));if(d!==b){if(d===null){f.removeAttr(a,c);return b}if(i&amp;&amp;"set"in i&amp;&amp;j&amp;&amp;(h=i.set(a,d,c))!==b)return h;a.setAttribute(c,""+d);return d}if(i&amp;&amp;"get"in i&amp;&amp;j&amp;&amp;(h=i.get(a,c))!==null)return h;h=a.getAttribute(c);return h===null?b:h},removeAttr:function(a,b){var c;a.nodeType===1&amp;&amp;(b=f.attrFix[b]||b,f.attr(a,b,""),a.removeAttribute(b),t.test(b)&amp;&amp;(c=f.propFix[b]||b)in a&amp;&amp;(a[c]=!1))},attrHooks:{type:{set:function(a,b){if(q.test(a.nodeName)&amp;&amp;a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&amp;&amp;b==="radio"&amp;&amp;f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&amp;&amp;(a.value=c);return b}}},value:{get:function(a,b){if(u&amp;&amp;f.nodeName(a,"button"))return u.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(u&amp;&amp;f.nodeName(a,"button"))return u.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e=a.nodeType;if(!a||e===3||e===8||e===2)return b;var g,h,i=e!==1||!f.isXMLDoc(a);i&amp;&amp;(c=f.propFix[c]||c,h=f.propHooks[c]);return d!==b?h&amp;&amp;"set"in h&amp;&amp;(g=h.set(a,d,c))!==b?g:a[c]=d:h&amp;&amp;"get"in h&amp;&amp;(g=h.get(a,c))!==null?g:a[c]},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&amp;&amp;c.specified?parseInt(c.value,10):r.test(a.nodeName)||s.test(a.nodeName)&amp;&amp;a.href?0:b}}}}),f.attrHooks.tabIndex=f.propHooks.tabIndex,v={get:function(a,c){var d;return f.prop(a,c)===!0||(d=a.getAttributeNode(c))&amp;&amp;d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&amp;&amp;(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},f.support.getSetAttribute||(u=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&amp;&amp;d.nodeValue!==""?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})})),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&amp;&amp;(b.selectedIndex,b.parentNode&amp;&amp;b.parentNode.selectedIndex);return null}})),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)&gt;=0}})});var w=/\.(.*)$/,x=/^(?:textarea|input|select)$/i,y=/\./g,z=/ /g,A=/[^\w\s.|`]/g,B=function(a){return a.replace(A,"\\$&amp;")};f.event={add:function(a,c,d,e){if(a.nodeType!==3&amp;&amp;a.nodeType!==8){if(d===!1)d=C;else if(!d)return;var g,h;d.handler&amp;&amp;(g=d,d=g.handler),d.guid||(d.guid=f.guid++);var i=f._data(a);if(!i)return;var j=i.events,k=i.handle;j||(i.events=j={}),k||(i.handle=k=function(a){return typeof f!="undefined"&amp;&amp;(!a||f.event.triggered!==a.type)?f.event.handle.apply(k.elem,arguments):b}),k.elem=a,c=c.split(" ");var l,m=0,n;while(l=c[m++]){h=g?f.extend({},g):{handler:d,data:e},l.indexOf(".")&gt;-1?(n=l.split("."),l=n.shift(),h.namespace=n.slice(0).sort().join(".")):(n=[],h.namespace=""),h.type=l,h.guid||(h.guid=d.guid);var o=j[l],p=f.event.special[l]||{};if(!o){o=j[l]=[];if(!p.setup||p.setup.call(a,e,n,k)===!1)a.addEventListener?a.addEventListener(l,k,!1):a.attachEvent&amp;&amp;a.attachEvent("on"+l,k)}p.add&amp;&amp;(p.add.call(a,h),h.handler.guid||(h.handler.guid=d.guid)),o.push(h),f.event.global[l]=!0}a=null}},global:{},remove:function(a,c,d,e){if(a.nodeType!==3&amp;&amp;a.nodeType!==8){d===!1&amp;&amp;(d=C);var g,h,i,j,k=0,l,m,n,o,p,q,r,s=f.hasData(a)&amp;&amp;f._data(a),t=s&amp;&amp;s.events;if(!s||!t)return;c&amp;&amp;c.type&amp;&amp;(d=c.handler,c=c.type);if(!c||typeof c=="string"&amp;&amp;c.charAt(0)==="."){c=c||"";for(h in t)f.event.remove(a,h+c);return}c=c.split(" ");while(h=c[k++]){r=h,q=null,l=h.indexOf(".")&lt;0,m=[],l||(m=h.split("."),h=m.shift(),n=new RegExp("(^|\\.)"+f.map(m.slice(0).sort(),B).join("\\.(?:.*\\.)?")+"(\\.|$)")),p=t[h];if(!p)continue;if(!d){for(j=0;j&lt;p.length;j++){q=p[j];if(l||n.test(q.namespace))f.event.remove(a,r,q.handler,j),p.splice(j--,1)}continue}o=f.event.special[h]||{};for(j=e||0;j&lt;p.length;j++){q=p[j];if(d.guid===q.guid){if(l||n.test(q.namespace))e==null&amp;&amp;p.splice(j--,1),o.remove&amp;&amp;o.remove.call(a,q);if(e!=null)break}}if(p.length===0||e!=null&amp;&amp;p.length===1)(!o.teardown||o.teardown.call(a,m)===!1)&amp;&amp;f.removeEvent(a,h,s.handle),g=null,delete
t[h]}if(f.isEmptyObject(t)){var u=s.handle;u&amp;&amp;(u.elem=null),delete s.events,delete s.handle,f.isEmptyObject(s)&amp;&amp;f.removeData(a,b,!0)}}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){var h=c.type||c,i=[],j;h.indexOf("!")&gt;=0&amp;&amp;(h=h.slice(0,-1),j=!0),h.indexOf(".")&gt;=0&amp;&amp;(i=h.split("."),h=i.shift(),i.sort());if(!!e&amp;&amp;!f.event.customEvent[h]||!!f.event.global[h]){c=typeof c=="object"?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.exclusive=j,c.namespace=i.join("."),c.namespace_re=new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)");if(g||!e)c.preventDefault(),c.stopPropagation();if(!e){f.each(f.cache,function(){var a=f.expando,b=this[a];b&amp;&amp;b.events&amp;&amp;b.events[h]&amp;&amp;f.event.trigger(c,d,b.handle.elem)});return}if(e.nodeType===3||e.nodeType===8)return;c.result=b,c.target=e,d=d!=null?f.makeArray(d):[],d.unshift(c);var k=e,l=h.indexOf(":")&lt;0?"on"+h:"";do{var m=f._data(k,"handle");c.currentTarget=k,m&amp;&amp;m.apply(k,d),l&amp;&amp;f.acceptData(k)&amp;&amp;k[l]&amp;&amp;k[l].apply(k,d)===!1&amp;&amp;(c.result=!1,c.preventDefault()),k=k.parentNode||k.ownerDocument||k===c.target.ownerDocument&amp;&amp;a}while(k&amp;&amp;!c.isPropagationStopped());if(!c.isDefaultPrevented()){var n,o=f.event.special[h]||{};if((!o._default||o._default.call(e.ownerDocument,c)===!1)&amp;&amp;(h!=="click"||!f.nodeName(e,"a"))&amp;&amp;f.acceptData(e)){try{l&amp;&amp;e[h]&amp;&amp;(n=e[l],n&amp;&amp;(e[l]=null),f.event.triggered=h,e[h]())}catch(p){}n&amp;&amp;(e[l]=n),f.event.triggered=b}}return c.result}},handle:function(c){c=f.event.fix(c||a.event);var d=((f._data(this,"events")||{})[c.type]||[]).slice(0),e=!c.exclusive&amp;&amp;!c.namespace,g=Array.prototype.slice.call(arguments,0);g[0]=c,c.currentTarget=this;for(var h=0,i=d.length;h&lt;i;h++){var j=d[h];if(e||c.namespace_re.test(j.namespace)){c.handler=j.handler,c.data=j.data,c.handleObj=j;var k=j.handler.apply(this,g);k!==b&amp;&amp;(c.result=k,k===!1&amp;&amp;(c.preventDefault(),c.stopPropagation()));if(c.isImmediatePropagationStopped())break}}return c.result},props:"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),fix:function(a){if(a[f.expando])return a;var d=a;a=f.Event(d);for(var e=this.props.length,g;e;)g=this.props[--e],a[g]=d[g];a.target||(a.target=a.srcElement||c),a.target.nodeType===3&amp;&amp;(a.target=a.target.parentNode),!a.relatedTarget&amp;&amp;a.fromElement&amp;&amp;(a.relatedTarget=a.fromElement===a.target?a.toElement:a.fromElement);if(a.pageX==null&amp;&amp;a.clientX!=null){var h=a.target.ownerDocument||c,i=h.documentElement,j=h.body;a.pageX=a.clientX+(i&amp;&amp;i.scrollLeft||j&amp;&amp;j.scrollLeft||0)-(i&amp;&amp;i.clientLeft||j&amp;&amp;j.clientLeft||0),a.pageY=a.clientY+(i&amp;&amp;i.scrollTop||j&amp;&amp;j.scrollTop||0)-(i&amp;&amp;i.clientTop||j&amp;&amp;j.clientTop||0)}a.which==null&amp;&amp;(a.charCode!=null||a.keyCode!=null)&amp;&amp;(a.which=a.charCode!=null?a.charCode:a.keyCode),!a.metaKey&amp;&amp;a.ctrlKey&amp;&amp;(a.metaKey=a.ctrlKey),!a.which&amp;&amp;a.button!==b&amp;&amp;(a.which=a.button&amp;1?1:a.button&amp;2?3:a.button&amp;4?2:0);return a},guid:1e8,proxy:f.proxy,special:{ready:{setup:f.bindReady,teardown:f.noop},live:{add:function(a){f.event.add(this,M(a.origType,a.selector),f.extend({},a,{handler:L,guid:a.handler.guid}))},remove:function(a){f.event.remove(this,M(a.origType,a.selector),a)}},beforeunload:{setup:function(a,b,c){f.isWindow(this)&amp;&amp;(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&amp;&amp;(this.onbeforeunload=null)}}}},f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&amp;&amp;a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&amp;&amp;a.detachEvent("on"+b,c)},f.Event=function(a,b){if(!this.preventDefault)return new f.Event(a,b);a&amp;&amp;a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&amp;&amp;a.getPreventDefault()?D:C):this.type=a,b&amp;&amp;f.extend(this,b),this.timeStamp=f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=D;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=D;var a=this.originalEvent;!a||(a.stopPropagation&amp;&amp;a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=D,this.stopPropagation()},isDefaultPrevented:C,isPropagationStopped:C,isImmediatePropagationStopped:C};var E=function(a){var b=a.relatedTarget,c=!1,d=a.type;a.type=a.data,b!==this&amp;&amp;(b&amp;&amp;(c=f.contains(this,b)),c||(f.event.handle.apply(this,arguments),a.type=d))},F=function(a){a.type=a.data,f.event.handle.apply(this,arguments)};f.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){f.event.special[a]={setup:function(c){f.event.add(this,b,c&amp;&amp;c.selector?F:E,a)},teardown:function(a){f.event.remove(this,b,a&amp;&amp;a.selector?F:E)}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(a,b){if(!f.nodeName(this,"form"))f.event.add(this,"click.specialSubmit",function(a){var b=a.target,c=f.nodeName(b,"input")||f.nodeName(b,"button")?b.type:"";(c==="submit"||c==="image")&amp;&amp;f(b).closest("form").length&amp;&amp;J("submit",this,arguments)}),f.event.add(this,"keypress.specialSubmit",function(a){var b=a.target,c=f.nodeName(b,"input")||f.nodeName(b,"button")?b.type:"";(c==="text"||c==="password")&amp;&amp;f(b).closest("form").length&amp;&amp;a.keyCode===13&amp;&amp;J("submit",this,arguments)});else return!1},teardown:function(a){f.event.remove(this,".specialSubmit")}});if(!f.support.changeBubbles){var G,H=function(a){var b=f.nodeName(a,"input")?a.type:"",c=a.value;b==="radio"||b==="checkbox"?c=a.checked:b==="select-multiple"?c=a.selectedIndex&gt;-1?f.map(a.options,function(a){return a.selected}).join("-"):"":f.nodeName(a,"select")&amp;&amp;(c=a.selectedIndex);return c},I=function(c){var d=c.target,e,g;if(!!x.test(d.nodeName)&amp;&amp;!d.readOnly){e=f._data(d,"_change_data"),g=H(d),(c.type!=="focusout"||d.type!=="radio")&amp;&amp;f._data(d,"_change_data",g);if(e===b||g===e)return;if(e!=null||g)c.type="change",c.liveFired=b,f.event.trigger(c,arguments[1],d)}};f.event.special.change={filters:{focusout:I,beforedeactivate:I,click:function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(c==="radio"||c==="checkbox"||f.nodeName(b,"select"))&amp;&amp;I.call(this,a)},keydown:function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(a.keyCode===13&amp;&amp;!f.nodeName(b,"textarea")||a.keyCode===32&amp;&amp;(c==="checkbox"||c==="radio")||c==="select-multiple")&amp;&amp;I.call(this,a)},beforeactivate:function(a){var b=a.target;f._data(b,"_change_data",H(b))}},setup:function(a,b){if(this.type==="file")return!1;for(var c in G)f.event.add(this,c+".specialChange",G[c]);return x.test(this.nodeName)},teardown:function(a){f.event.remove(this,".specialChange");return x.test(this.nodeName)}},G=f.event.special.change.filters,G.focus=G.beforeactivate}f.support.focusinBubbles||f.each({focus:"focusin",blur:"focusout"},function(a,b){function e(a){var c=f.event.fix(a);c.type=b,c.originalEvent={},f.event.trigger(c,null,c.target),c.isDefaultPrevented()&amp;&amp;a.preventDefault()}var d=0;f.event.special[b]={setup:function(){d++===0&amp;&amp;c.addEventListener(a,e,!0)},teardown:function(){--d===0&amp;&amp;c.removeEventListener(a,e,!0)}}}),f.each(["bind","one"],function(a,c){f.fn[c]=function(a,d,e){var g;if(typeof a=="object"){for(var h in a)this[c](h,d,a[h],e);return this}if(arguments.length===2||d===!1)e=d,d=b;c==="one"?(g=function(a){f(this).unbind(a,g);return e.apply(this,arguments)},g.guid=e.guid||f.guid++):g=e;if(a==="unload"&amp;&amp;c!=="one")this.one(a,d,e);else for(var i=0,j=this.length;i&lt;j;i++)f.event.add(this[i],a,g,d);return this}}),f.fn.extend({unbind:function(a,b){if(typeof a=="object"&amp;&amp;!a.preventDefault)for(var c in a)this.unbind(c,a[c]);else for(var d=0,e=this.length;d&lt;e;d++)f.event.remove(this[d],a,b);return this},delegate:function(a,b,c,d){return this.live(b,c,d,a)},undelegate:function(a,b,c){return arguments.length===0?this.unbind("live"):this.die(b,null,c,a)},trigger:function(a,b){return this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return f.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||f.guid++,d=0,e=function(c){var e=(f.data(this,"lastToggle"+a.guid)||0)%d;f.data(this,"lastToggle"+a.guid,e+1),c.preventDefault();return b[e].apply(this,arguments)||!1};e.guid=c;while(d&lt;b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});var K={focus:"focusin",blur:"focusout",mouseenter:"mouseover",mouseleave:"mouseout"};f.each(["live","die"],function(a,c){f.fn[c]=function(a,d,e,g){var h,i=0,j,k,l,m=g||this.selector,n=g?this:f(this.context);if(typeof a=="object"&amp;&amp;!a.preventDefault){for(var o in a)n[c](o,d,a[o],m);return this}if(c==="die"&amp;&amp;!a&amp;&amp;g&amp;&amp;g.charAt(0)==="."){n.unbind(g);return this}if(d===!1||f.isFunction(d))e=d||C,d=b;a=(a||"").split(" ");while((h=a[i++])!=null){j=w.exec(h),k="",j&amp;&amp;(k=j[0],h=h.replace(w,""));if(h==="hover"){a.push("mouseenter"+k,"mouseleave"+k);continue}l=h,K[h]?(a.push(K[h]+k),h=h+k):h=(K[h]||h)+k;if(c==="live")for(var p=0,q=n.length;p&lt;q;p++)f.event.add(n[p],"live."+M(h,m),{data:d,selector:m,handler:e,origType:h,origHandler:e,preType:l});else n.unbind("live."+M(h,m),e)}return this}}),f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "),function(a,b){f.fn[b]=function(a,c){c==null&amp;&amp;(c=a,a=null);return arguments.length&gt;0?this.bind(b,a,c):this.trigger(b)},f.attrFn&amp;&amp;(f.attrFn[b]=!0)}),function(){function u(a,b,c,d,e,f){for(var g=0,h=d.length;g&lt;h;g++){var i=d[g];if(i){var j=!1;i=i[a];while(i){if(i.sizcache===c){j=d[i.sizset];break}if(i.nodeType===1){f||(i.sizcache=c,i.sizset=g);if(typeof b!="string"){if(i===b){j=!0;break}}else if(k.filter(b,[i]).length&gt;0){j=i;break}}i=i[a]}d[g]=j}}}function t(a,b,c,d,e,f){for(var g=0,h=d.length;g&lt;h;g++){var i=d[g];if(i){var j=!1;i=i[a];while(i){if(i.sizcache===c){j=d[i.sizset];break}i.nodeType===1&amp;&amp;!f&amp;&amp;(i.sizcache=c,i.sizset=g);if(i.nodeName.toLowerCase()===b){j=i;break}i=i[a]}d[g]=j}}}var a=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ &gt;+~,(\[\\]+)+|[&gt;+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d=0,e=Object.prototype.toString,g=!1,h=!0,i=/\\/g,j=/\W/;[0,0].sort(function(){h=!1;return 0});var k=function(b,d,f,g){f=f||[],d=d||c;var h=d;if(d.nodeType!==1&amp;&amp;d.nodeType!==9)return[];if(!b||typeof b!="string")return f;var i,j,n,o,q,r,s,t,u=!0,w=k.isXML(d),x=[],y=b;do{a.exec(""),i=a.exec(y);if(i){y=i[3],x.push(i[1]);if(i[2]){o=i[3];break}}}while(i);if(x.length&gt;1&amp;&amp;m.exec(b))if(x.length===2&amp;&amp;l.relative[x[0]])j=v(x[0]+x[1],d);else{j=l.relative[x[0]]?[d]:k(x.shift(),d);while(x.length)b=x.shift(),l.relative[b]&amp;&amp;(b+=x.shift()),j=v(b,j)}else{!g&amp;&amp;x.length&gt;1&amp;&amp;d.nodeType===9&amp;&amp;!w&amp;&amp;l.match.ID.test(x[0])&amp;&amp;!l.match.ID.test(x[x.length-1])&amp;&amp;(q=k.find(x.shift(),d,w),d=q.expr?k.filter(q.expr,q.set)[0]:q.set[0]);if(d){q=g?{expr:x.pop(),set:p(g)}:k.find(x.pop(),x.length===1&amp;&amp;(x[0]==="~"||x[0]==="+")&amp;&amp;d.parentNode?d.parentNode:d,w),j=q.expr?k.filter(q.expr,q.set):q.set,x.length&gt;0?n=p(j):u=!1;while(x.length)r=x.pop(),s=r,l.relative[r]?s=x.pop():r="",s==null&amp;&amp;(s=d),l.relative[r](n,s,w)}else n=x=[]}n||(n=j),n||k.error(r||b);if(e.call(n)==="[object Array]")if(!u)f.push.apply(f,n);else if(d&amp;&amp;d.nodeType===1)for(t=0;n[t]!=null;t++)n[t]&amp;&amp;(n[t]===!0||n[t].nodeType===1&amp;&amp;k.contains(d,n[t]))&amp;&amp;f.push(j[t]);else for(t=0;n[t]!=null;t++)n[t]&amp;&amp;n[t].nodeType===1&amp;&amp;f.push(j[t]);else p(n,f);o&amp;&amp;(k(o,h,f,g),k.uniqueSort(f));return f};k.uniqueSort=function(a){if(r){g=h,a.sort(r);if(g)for(var b=1;b&lt;a.length;b++)a[b]===a[b-1]&amp;&amp;a.splice(b--,1)}return a},k.matches=function(a,b){return k(a,null,null,b)},k.matchesSelector=function(a,b){return k(b,null,null,[a]).length&gt;0},k.find=function(a,b,c){var d;if(!a)return[];for(var e=0,f=l.order.length;e&lt;f;e++){var g,h=l.order[e];if(g=l.leftMatch[h].exec(a)){var j=g[1];g.splice(1,1);if(j.substr(j.length-1)!=="\\"){g[1]=(g[1]||"").replace(i,""),d=l.find[h](g,b,c);if(d!=null){a=a.replace(l.match[h],"");break}}}}d||(d=typeof b.getElementsByTagName!="undefined"?b.getElementsByTagName("*"):[]);return{set:d,expr:a}},k.filter=function(a,c,d,e){var f,g,h=a,i=[],j=c,m=c&amp;&amp;c[0]&amp;&amp;k.isXML(c[0]);while(a&amp;&amp;c.length){for(var n in l.filter)if((f=l.leftMatch[n].exec(a))!=null&amp;&amp;f[2]){var o,p,q=l.filter[n],r=f[1];g=!1,f.splice(1,1);if(r.substr(r.length-1)==="\\")continue;j===i&amp;&amp;(i=[]);if(l.preFilter[n]){f=l.preFilter[n](f,j,d,i,e,m);if(!f)g=o=!0;else if(f===!0)continue}if(f)for(var s=0;(p=j[s])!=null;s++)if(p){o=q(p,f,s,j);var t=e^!!o;d&amp;&amp;o!=null?t?g=!0:j[s]=!1:t&amp;&amp;(i.push(p),g=!0)}if(o!==b){d||(j=i),a=a.replace(l.match[n],"");if(!g)return[];break}}if(a===h)if(g==null)k.error(a);else break;h=a}return j},k.error=function(a){throw"Syntax error, unrecognized expression: "+a};var l=k.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var c=typeof b=="string",d=c&amp;&amp;!j.test(b),e=c&amp;&amp;!d;d&amp;&amp;(b=b.toLowerCase());for(var f=0,g=a.length,h;f&lt;g;f++)if(h=a[f]){while((h=h.previousSibling)&amp;&amp;h.nodeType!==1);a[f]=e||h&amp;&amp;h.nodeName.toLowerCase()===b?h||!1:h===b}e&amp;&amp;k.filter(b,a,!0)},"&gt;":function(a,b){var c,d=typeof b=="string",e=0,f=a.length;if(d&amp;&amp;!j.test(b)){b=b.toLowerCase();for(;e&lt;f;e++){c=a[e];if(c){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e&lt;f;e++)c=a[e],c&amp;&amp;(a[e]=d?c.parentNode:c.parentNode===b);d&amp;&amp;k.filter(b,a,!0)}},"":function(a,b,c){var e,f=d++,g=u;typeof b=="string"&amp;&amp;!j.test(b)&amp;&amp;(b=b.toLowerCase(),e=b,g=t),g("parentNode",b,f,a,e,c)},"~":function(a,b,c){var e,f=d++,g=u;typeof b=="string"&amp;&amp;!j.test(b)&amp;&amp;(b=b.toLowerCase(),e=b,g=t),g("previousSibling",b,f,a,e,c)}},find:{ID:function(a,b,c){if(typeof b.getElementById!="undefined"&amp;&amp;!c){var d=b.getElementById(a[1]);return d&amp;&amp;d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof b.getElementsByName!="undefined"){var c=[],d=b.getElementsByName(a[1]);for(var e=0,f=d.length;e&lt;f;e++)d[e].getAttribute("name")===a[1]&amp;&amp;c.push(d[e]);return c.length===0?null:c}},TAG:function(a,b){if(typeof b.getElementsByTagName!="undefined")return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a=" "+a[1].replace(i,"")+" ";if(f)return a;for(var g=0,h;(h=b[g])!=null;g++)h&amp;&amp;(e^(h.className&amp;&amp;(" "+h.className+" ").replace(/[\t\n\r]/g," ").indexOf(a)&gt;=0)?c||d.push(h):c&amp;&amp;(b[g]=!1));return!1},ID:function(a){return a[1].replace(i,"")},TAG:function(a,b){return a[1].replace(i,"").toLowerCase()},CHILD:function(a){if(a[1]==="nth"){a[2]||k.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,"");var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]==="even"&amp;&amp;"2n"||a[2]==="odd"&amp;&amp;"2n+1"||!/\D/.test(a[2])&amp;&amp;"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&amp;&amp;k.error(a[0]);a[0]=d++;return a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(i,"");!f&amp;&amp;l.attrMap[g]&amp;&amp;(a[1]=l.attrMap[g]),a[4]=(a[4]||a[5]||"").replace(i,""),a[2]==="~="&amp;&amp;(a[4]=" "+a[4]+" ");return a},PSEUDO:function(b,c,d,e,f){if(b[1]==="not")if((a.exec(b[3])||"").length&gt;1||/^\w/.test(b[3]))b[3]=k(b[3],null,null,c);else{var g=k.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else if(l.match.POS.test(b[0])||l.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return a.disabled===!1&amp;&amp;a.type!=="hidden"},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&amp;&amp;a.parentNode.selectedIndex;return a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!k(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute("type"),c=a.type;return a.nodeName.toLowerCase()==="input"&amp;&amp;"text"===c&amp;&amp;(b===c||b===null)},radio:function(a){return a.nodeName.toLowerCase()==="input"&amp;&amp;"radio"===a.type},checkbox:function(a){return a.nodeName.toLowerCase()==="input"&amp;&amp;"checkbox"===a.type},file:function(a){return a.nodeName.toLowerCase()==="input"&amp;&amp;"file"===a.type},password:function(a){return a.nodeName.toLowerCase()==="input"&amp;&amp;"password"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&amp;&amp;"submit"===a.type},image:function(a){return a.nodeName.toLowerCase()==="input"&amp;&amp;"image"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&amp;&amp;"reset"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&amp;&amp;"button"===a.type||b==="button"},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b&lt;c[3]-0},gt:function(a,b,c){return b&gt;c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=l.filters[e];if(f)return f(a,c,b,d);if(e==="contains")return(a.textContent||a.innerText||k.getText([a])||"").indexOf(b[3])&gt;=0;if(e==="not"){var g=b[3];for(var h=0,i=g.length;h&lt;i;h++)if(g[h]===a)return!1;return!0}k.error(e)},CHILD:function(a,b){var c=b[1],d=a;switch(c){case"only":case"first":while(d=d.previousSibling)if(d.nodeType===1)return!1;if(c==="first")return!0;d=a;case"last":while(d=d.nextSibling)if(d.nodeType===1)return!1;return!0;case"nth":var e=b[2],f=b[3];if(e===1&amp;&amp;f===0)return!0;var g=b[0],h=a.parentNode;if(h&amp;&amp;(h.sizcache!==g||!a.nodeIndex)){var i=0;for(d=h.firstChild;d;d=d.nextSibling)d.nodeType===1&amp;&amp;(d.nodeIndex=++i);h.sizcache=g}var j=a.nodeIndex-f;return e===0?j===0:j%e===0&amp;&amp;j/e&gt;=0}},ID:function(a,b){return a.nodeType===1&amp;&amp;a.getAttribute("id")===b},TAG:function(a,b){return b==="*"&amp;&amp;a.nodeType===1||a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)&gt;-1},ATTR:function(a,b){var c=b[1],d=l.attrHandle[c]?l.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+"",f=b[2],g=b[4];return d==null?f==="!=":f==="="?e===g:f==="*="?e.indexOf(g)&gt;=0:f==="~="?(" "+e+" ").indexOf(g)&gt;=0:g?f==="!="?e!==g:f==="^="?e.indexOf(g)===0:f==="$="?e.substr(e.length-g.length)===g:f==="|="?e===g||e.substr(0,g.length+1)===g+"-":!1:e&amp;&amp;d!==!1},POS:function(a,b,c,d){var e=b[2],f=l.setFilters[e];if(f)return f(a,c,b,d)}}},m=l.match.POS,n=function(a,b){return"\\"+(b-0+1)};for(var o in l.match)l.match[o]=new RegExp(l.match[o].source+/(?![^\[]*\])(?![^\(]*\))/.source),l.leftMatch[o]=new RegExp(/(^(?:.|\r|\n)*?)/.source+l.match[o].source.replace(/\\(\d+)/g,n));var p=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(q){p=function(a,b){var c=0,d=b||[];if(e.call(a)==="[object Array]")Array.prototype.push.apply(d,a);else if(typeof a.length=="number")for(var f=a.length;c&lt;f;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var r,s;c.documentElement.compareDocumentPosition?r=function(a,b){if(a===b){g=!0;return 0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return a.compareDocumentPosition?-1:1;return a.compareDocumentPosition(b)&amp;4?-1:1}:(r=function(a,b){if(a===b){g=!0;return 0}if(a.sourceIndex&amp;&amp;b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],h=a.parentNode,i=b.parentNode,j=h;if(h===i)return s(a,b);if(!h)return-1;if(!i)return 1;while(j)e.unshift(j),j=j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;k&lt;c&amp;&amp;k&lt;d;k++)if(e[k]!==f[k])return s(e[k],f[k]);return k===c?s(a,f[k],-1):s(e[k],b,1)},s=function(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}),k.getText=function(a){var b="",c;for(var d=0;a[d];d++)c=a[d],c.nodeType===3||c.nodeType===4?b+=c.nodeValue:c.nodeType!==8&amp;&amp;(b+=k.getText(c.childNodes));return b},function(){var a=c.createElement("div"),d="script"+(new Date).getTime(),e=c.documentElement;a.innerHTML="&lt;a name='"+d+"'/&gt;",e.insertBefore(a,e.firstChild),c.getElementById(d)&amp;&amp;(l.find.ID=function(a,c,d){if(typeof c.getElementById!="undefined"&amp;&amp;!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof e.getAttributeNode!="undefined"&amp;&amp;e.getAttributeNode("id").nodeValue===a[1]?[e]:b:[]}},l.filter.ID=function(a,b){var c=typeof a.getAttributeNode!="undefined"&amp;&amp;a.getAttributeNode("id");return a.nodeType===1&amp;&amp;c&amp;&amp;c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var a=c.createElement("div");a.appendChild(c.createComment("")),a.getElementsByTagName("*").length&gt;0&amp;&amp;(l.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if(a[1]==="*"){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&amp;&amp;d.push(c[e]);c=d}return c}),a.innerHTML="&lt;a href='#'&gt;&lt;/a&gt;",a.firstChild&amp;&amp;typeof a.firstChild.getAttribute!="undefined"&amp;&amp;a.firstChild.getAttribute("href")!=="#"&amp;&amp;(l.attrHandle.href=function(a){return a.getAttribute("href",2)}),a=null}(),c.querySelectorAll&amp;&amp;function(){var a=k,b=c.createElement("div"),d="__sizzle__";b.innerHTML="&lt;p class='TEST'&gt;&lt;/p&gt;";if(!b.querySelectorAll||b.querySelectorAll(".TEST").length!==0){k=function(b,e,f,g){e=e||c;if(!g&amp;&amp;!k.isXML(e)){var h=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&amp;&amp;(e.nodeType===1||e.nodeType===9)){if(h[1])return p(e.getElementsByTagName(b),f);if(h[2]&amp;&amp;l.find.CLASS&amp;&amp;e.getElementsByClassName)return p(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b==="body"&amp;&amp;e.body)return p([e.body],f);if(h&amp;&amp;h[3]){var i=e.getElementById(h[3]);if(!i||!i.parentNode)return p([],f);if(i.id===h[3])return p([i],f)}try{return p(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&amp;&amp;e.nodeName.toLowerCase()!=="object"){var m=e,n=e.getAttribute("id"),o=n||d,q=e.parentNode,r=/^\s*[+~]/.test(b);n?o=o.replace(/'/g,"\\$&amp;"):e.setAttribute("id",o),r&amp;&amp;q&amp;&amp;(e=e.parentNode);try{if(!r||q)return p(e.querySelectorAll("[id='"+o+"'] "+b),f)}catch(s){}finally{n||m.removeAttribute("id")}}}return a(b,e,f,g)};for(var e in a)k[e]=a[e];b=null}}(),function(){var a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var d=!b.call(c.createElement("div"),"div"),e=!1;try{b.call(c.documentElement,"[test!='']:sizzle")}catch(f){e=!0}k.matchesSelector=function(a,c){c=c.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!k.isXML(a))try{if(e||!l.match.PSEUDO.test(c)&amp;&amp;!/!=/.test(c)){var f=b.call(a,c);if(f||!d||a.document&amp;&amp;a.document.nodeType!==11)return f}}catch(g){}return k(c,null,null,[a]).length&gt;0}}}(),function(){var a=c.createElement("div");a.innerHTML="&lt;div class='test e'&gt;&lt;/div&gt;&lt;div class='test'&gt;&lt;/div&gt;";if(!!a.getElementsByClassName&amp;&amp;a.getElementsByClassName("e").length!==0){a.lastChild.className="e";if(a.getElementsByClassName("e").length===1)return;l.order.splice(1,0,"CLASS"),l.find.CLASS=function(a,b,c){if(typeof b.getElementsByClassName!="undefined"&amp;&amp;!c)return b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?k.contains=function(a,b){return a!==b&amp;&amp;(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?k.contains=function(a,b){return!!(a.compareDocumentPosition(b)&amp;16)}:k.contains=function(){return!1},k.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!=="HTML":!1};var v=function(a,b){var c,d=[],e="",f=b.nodeType?[b]:b;while(c=l.match.PSEUDO.exec(a))e+=c[0],a=a.replace(l.match.PSEUDO,"");a=l.relative[a]?a+"*":a;for(var g=0,h=f.length;g&lt;h;g++)k(a,f[g],d);return k.filter(e,d)};f.find=k,f.expr=k.selectors,f.expr[":"]=f.expr.filters,f.unique=k.uniqueSort,f.text=k.getText,f.isXMLDoc=k.isXML,f.contains=k.contains}();var N=/Until$/,O=/^(?:parents|prevUntil|prevAll)/,P=/,/,Q=/^.[^:#\[\.,]*$/,R=Array.prototype.slice,S=f.expr.match.POS,T={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var b=this,c,d;if(typeof a!="string")return f(a).filter(function(){for(c=0,d=b.length;c&lt;d;c++)if(f.contains(b[c],this))return!0});var e=this.pushStack("","find",a),g,h,i;for(c=0,d=this.length;c&lt;d;c++){g=e.length,f.find(a,this[c],e);if(c&gt;0)for(h=g;h&lt;e.length;h++)for(i=0;i&lt;g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var b=f(a);return this.filter(function(){for(var a=0,c=b.length;a&lt;c;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(V(this,a,!1),"not",a)},filter:function(a){return this.pushStack(V(this,a,!0),"filter",a)},is:function(a){return!!a&amp;&amp;(typeof a=="string"?f.filter(a,this).length&gt;0:this.filter(a).length&gt;0)},closest:function(a,b){var c=[],d,e,g=this[0];if(f.isArray(a)){var h,i,j={},k=1;if(g&amp;&amp;a.length){for(d=0,e=a.length;d&lt;e;d++)i=a[d],j[i]||(j[i]=S.test(i)?f(i,b||this.context):i);while(g&amp;&amp;g.ownerDocument&amp;&amp;g!==b){for(i in j)h=j[i],(h.jquery?h.index(g)&gt;-1:f(g).is(h))&amp;&amp;c.push({selector:i,elem:g,level:k});g=g.parentNode,k++}}return c}var l=S.test(a)||typeof a!="string"?f(a,b||this.context):0;for(d=0,e=this.length;d&lt;e;d++){g=this[d];while(g){if(l?l.index(g)&gt;-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length&gt;1?f.unique(c):c;return this.pushStack(c,"closest",a)},index:function(a){if(!a)return this[0]&amp;&amp;this[0].parentNode?this.prevAll().length:-1;if(typeof a=="string")return f.inArray(this[0],f(a));return f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof a=="string"?f(a,b):f.makeArray(a&amp;&amp;a.nodeType?[a]:a),d=f.merge(this.get(),c);return this.pushStack(U(c[0])||U(d[0])?d:f.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return b&amp;&amp;b.nodeType!==11?b:null},parents:function(a){return f.dir(a,"parentNode")},parentsUntil:function(a,b,c){return f.dir(a,"parentNode",c)},next:function(a){return f.nth(a,2,"nextSibling")},prev:function(a){return f.nth(a,2,"previousSibling")},nextAll:function(a){return f.dir(a,"nextSibling")},prevAll:function(a){return f.dir(a,"previousSibling")},nextUntil:function(a,b,c){return f.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return f.dir(a,"previousSibling",c)},siblings:function(a){return f.sibling(a.parentNode.firstChild,a)},children:function(a){return f.sibling(a.firstChild)},contents:function(a){return f.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var e=f.map(this,b,c),g=R.call(arguments);N.test(a)||(d=c),d&amp;&amp;typeof d=="string"&amp;&amp;(e=f.filter(d,e)),e=this.length&gt;1&amp;&amp;!T[a]?f.unique(e):e,(this.length&gt;1||P.test(d))&amp;&amp;O.test(a)&amp;&amp;(e=e.reverse());return this.pushStack(e,a,g.join(","))}}),f.extend({filter:function(a,b,c){c&amp;&amp;(a=":not("+a+")");return b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var e=[],g=a[c];while(g&amp;&amp;g.nodeType!==9&amp;&amp;(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&amp;&amp;e.push(g),g=g[c];return e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&amp;&amp;++e===b)break;return a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&amp;&amp;a!==b&amp;&amp;c.push(a);return c}});var W=/ jQuery\d+="(?:\d+|null)"/g,X=/^\s+/,Y=/&lt;(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^&gt;]*)\/&gt;/ig,Z=/&lt;([\w:]+)/,$=/&lt;tbody/i,_=/&lt;|&amp;#?\w+;/,ba=/&lt;(?:script|object|embed|option|style)/i,bb=/checked\s*(?:[^=]|=\s*.checked.)/i,bc=/\/(java|ecma)script/i,bd=/^\s*&lt;!(?:\[CDATA\[|\-\-)/,be={option:[1,"&lt;select multiple='multiple'&gt;","&lt;/select&gt;"],legend:[1,"&lt;fieldset&gt;","&lt;/fieldset&gt;"],thead:[1,"&lt;table&gt;","&lt;/table&gt;"],tr:[2,"&lt;table&gt;&lt;tbody&gt;","&lt;/tbody&gt;&lt;/table&gt;"],td:[3,"&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;","&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;"],col:[2,"&lt;table&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;colgroup&gt;","&lt;/colgroup&gt;&lt;/table&gt;"],area:[1,"&lt;map&gt;","&lt;/map&gt;"],_default:[0,"",""]};be.optgroup=be.option,be.tbody=be.tfoot=be.colgroup=be.caption=be.thead,be.th=be.td,f.support.htmlSerialize||(be._default=[1,"div&lt;div&gt;","&lt;/div&gt;"]),f.fn.extend({text:function(a){if(f.isFunction(a))return this.each(function(b){var c=f(this);c.text(a.call(this,b,c.text()))});if(typeof a!="object"&amp;&amp;a!==b)return this.empty().append((this[0]&amp;&amp;this[0].ownerDocument||c).createTextNode(a));return f.text(this)},wrapAll:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&amp;&amp;b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&amp;&amp;a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){return this.each(function(){f(this).wrapAll(a)})},unwrap:function(){return this.parent().each(function(){f.nodeName(this,"body")||f(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&amp;&amp;this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&amp;&amp;this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&amp;&amp;this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f(arguments[0]);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&amp;&amp;this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,f(arguments[0]).toArray());return a}},remove:function(a,b){for(var c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&amp;&amp;d.nodeType===1&amp;&amp;(f.cleanData(d.getElementsByTagName("*")),f.cleanData([d])),d.parentNode&amp;&amp;d.parentNode.removeChild(d);return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&amp;&amp;f.cleanData(b.getElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){if(a===b)return this[0]&amp;&amp;this[0].nodeType===1?this[0].innerHTML.replace(W,""):null;if(typeof a=="string"&amp;&amp;!ba.test(a)&amp;&amp;(f.support.leadingWhitespace||!X.test(a))&amp;&amp;!be[(Z.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Y,"&lt;$1&gt;&lt;/$2&gt;");try{for(var c=0,d=this.length;c&lt;d;c++)this[c].nodeType===1&amp;&amp;(f.cleanData(this[c].getElementsByTagName("*")),this[c].innerHTML=a)}catch(e){this.empty().append(a)}}else f.isFunction(a)?this.each(function(b){var c=f(this);c.html(a.call(this,b,c.html()))}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&amp;&amp;this[0].parentNode){if(f.isFunction(a))return this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof a!="string"&amp;&amp;(a=f(a).detach());return this.each(function(){var b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&amp;&amp;arguments.length===3&amp;&amp;typeof j=="string"&amp;&amp;bb.test(j))return this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&amp;&amp;j.parentNode,f.support.parentNode&amp;&amp;i&amp;&amp;i.nodeType===11&amp;&amp;i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&amp;&amp;f.nodeName(g,"tr");for(var l=0,m=this.length,n=m-1;l&lt;m;l++)d.call(c?bf(this[l],g):this[l],e.cacheable||m&gt;1&amp;&amp;l&lt;n?f.clone(h,!0,!0):h)}k.length&amp;&amp;f.each(k,bl)}return this}}),f.buildFragment=function(a,b,d){var e,g,h,i;b&amp;&amp;b[0]&amp;&amp;(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&amp;&amp;typeof a[0]=="string"&amp;&amp;a[0].length&lt;512&amp;&amp;i===c&amp;&amp;a[0].charAt(0)==="&lt;"&amp;&amp;!ba.test(a[0])&amp;&amp;(f.support.checkClone||!bb.test(a[0]))&amp;&amp;(g=!0,h=f.fragments[a[0]],h&amp;&amp;h!==1&amp;&amp;(e=h)),e||(e=i.createDocumentFragment(),f.clean
(a,i,e,d)),g&amp;&amp;(f.fragments[a[0]]=h?e:1);return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){f.fn[a]=function(c){var d=[],e=f(c),g=this.length===1&amp;&amp;this[0].parentNode;if(g&amp;&amp;g.nodeType===11&amp;&amp;g.childNodes.length===1&amp;&amp;e.length===1){e[b](this[0]);return this}for(var h=0,i=e.length;h&lt;i;h++){var j=(h&gt;0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d=a.cloneNode(!0),e,g,h;if((!f.support.noCloneEvent||!f.support.noCloneChecked)&amp;&amp;(a.nodeType===1||a.nodeType===11)&amp;&amp;!f.isXMLDoc(a)){bh(a,d),e=bi(a),g=bi(d);for(h=0;e[h];++h)g[h]&amp;&amp;bh(e[h],g[h])}if(b){bg(a,d);if(c){e=bi(a),g=bi(d);for(h=0;e[h];++h)bg(e[h],g[h])}}e=g=null;return d},clean:function(a,b,d,e){var g;b=b||c,typeof b.createElement=="undefined"&amp;&amp;(b=b.ownerDocument||b[0]&amp;&amp;b[0].ownerDocument||c);var h=[],i;for(var j=0,k;(k=a[j])!=null;j++){typeof k=="number"&amp;&amp;(k+="");if(!k)continue;if(typeof k=="string")if(!_.test(k))k=b.createTextNode(k);else{k=k.replace(Y,"&lt;$1&gt;&lt;/$2&gt;");var l=(Z.exec(k)||["",""])[1].toLowerCase(),m=be[l]||be._default,n=m[0],o=b.createElement("div");o.innerHTML=m[1]+k+m[2];while(n--)o=o.lastChild;if(!f.support.tbody){var p=$.test(k),q=l==="table"&amp;&amp;!p?o.firstChild&amp;&amp;o.firstChild.childNodes:m[1]==="&lt;table&gt;"&amp;&amp;!p?o.childNodes:[];for(i=q.length-1;i&gt;=0;--i)f.nodeName(q[i],"tbody")&amp;&amp;!q[i].childNodes.length&amp;&amp;q[i].parentNode.removeChild(q[i])}!f.support.leadingWhitespace&amp;&amp;X.test(k)&amp;&amp;o.insertBefore(b.createTextNode(X.exec(k)[0]),o.firstChild),k=o.childNodes}var r;if(!f.support.appendChecked)if(k[0]&amp;&amp;typeof (r=k.length)=="number")for(i=0;i&lt;r;i++)bk(k[i]);else bk(k);k.nodeType?h.push(k):h=f.merge(h,k)}if(d){g=function(a){return!a.type||bc.test(a.type)};for(j=0;h[j];j++)if(e&amp;&amp;f.nodeName(h[j],"script")&amp;&amp;(!h[j].type||h[j].type.toLowerCase()==="text/javascript"))e.push(h[j].parentNode?h[j].parentNode.removeChild(h[j]):h[j]);else{if(h[j].nodeType===1){var s=f.grep(h[j].getElementsByTagName("script"),g);h.splice.apply(h,[j+1,0].concat(s))}d.appendChild(h[j])}}return h},cleanData:function(a){var b,c,d=f.cache,e=f.expando,g=f.event.special,h=f.support.deleteExpando;for(var i=0,j;(j=a[i])!=null;i++){if(j.nodeName&amp;&amp;f.noData[j.nodeName.toLowerCase()])continue;c=j[f.expando];if(c){b=d[c]&amp;&amp;d[c][e];if(b&amp;&amp;b.events){for(var k in b.events)g[k]?f.event.remove(j,k):f.removeEvent(j,k,b.handle);b.handle&amp;&amp;(b.handle.elem=null)}h?delete j[f.expando]:j.removeAttribute&amp;&amp;j.removeAttribute(f.expando),delete d[c]}}}});var bm=/alpha\([^)]*\)/i,bn=/opacity=([^)]*)/,bo=/([A-Z]|^ms)/g,bp=/^-?\d+(?:px)?$/i,bq=/^-?\d/,br=/^([\-+])=([\-+.\de]+)/,bs={position:"absolute",visibility:"hidden",display:"block"},bt=["Left","Right"],bu=["Top","Bottom"],bv,bw,bx;f.fn.css=function(a,c){if(arguments.length===2&amp;&amp;c===b)return this;return f.access(this,a,c,!0,function(a,c,d){return d!==b?f.style(a,c,d):f.css(a,c)})},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bv(a,"opacity","opacity");return c===""?"1":c}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":f.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&amp;&amp;a.nodeType!==3&amp;&amp;a.nodeType!==8&amp;&amp;!!a.style){var g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&amp;&amp;"get"in k&amp;&amp;(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof d,h==="string"&amp;&amp;(g=br.exec(d))&amp;&amp;(d=+(g[1]+1)*+g[2]+parseFloat(f.css(a,c)),h="number");if(d==null||h==="number"&amp;&amp;isNaN(d))return;h==="number"&amp;&amp;!f.cssNumber[i]&amp;&amp;(d+="px");if(!k||!("set"in k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c==="cssFloat"&amp;&amp;(c="float");if(g&amp;&amp;"get"in g&amp;&amp;(e=g.get(a,!0,d))!==b)return e;if(bv)return bv(a,c)},swap:function(a,b,c){var d={};for(var e in b)d[e]=a.style[e],a.style[e]=b[e];c.call(a);for(e in b)a.style[e]=d[e]}}),f.curCSS=f.css,f.each(["height","width"],function(a,b){f.cssHooks[b]={get:function(a,c,d){var e;if(c){if(a.offsetWidth!==0)return by(a,b,d);f.swap(a,bs,function(){e=by(a,b,d)});return e}},set:function(a,b){if(!bp.test(b))return b;b=parseFloat(b);if(b&gt;=0)return b+"px"}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return bn.test((b&amp;&amp;a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=f.isNaN(b)?"":"alpha(opacity="+b*100+")",g=d&amp;&amp;d.filter||c.filter||"";c.zoom=1;if(b&gt;=1&amp;&amp;f.trim(g.replace(bm,""))===""){c.removeAttribute("filter");if(d&amp;&amp;!d.filter)return}c.filter=bm.test(g)?g.replace(bm,e):g+" "+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){var c;f.swap(a,{display:"inline-block"},function(){b?c=bv(a,"margin-right","marginRight"):c=a.style.marginRight});return c}})}),c.defaultView&amp;&amp;c.defaultView.getComputedStyle&amp;&amp;(bw=function(a,c){var d,e,g;c=c.replace(bo,"-$1").toLowerCase();if(!(e=a.ownerDocument.defaultView))return b;if(g=e.getComputedStyle(a,null))d=g.getPropertyValue(c),d===""&amp;&amp;!f.contains(a.ownerDocument.documentElement,a)&amp;&amp;(d=f.style(a,c));return d}),c.documentElement.currentStyle&amp;&amp;(bx=function(a,b){var c,d=a.currentStyle&amp;&amp;a.currentStyle[b],e=a.runtimeStyle&amp;&amp;a.runtimeStyle[b],f=a.style;!bp.test(d)&amp;&amp;bq.test(d)&amp;&amp;(c=f.left,e&amp;&amp;(a.runtimeStyle.left=a.currentStyle.left),f.left=b==="fontSize"?"1em":d||0,d=f.pixelLeft+"px",f.left=c,e&amp;&amp;(a.runtimeStyle.left=e));return d===""?"auto":d}),bv=bw||bx,f.expr&amp;&amp;f.expr.filters&amp;&amp;(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&amp;&amp;c===0||!f.support.reliableHiddenOffsets&amp;&amp;(a.style.display||f.css(a,"display"))==="none"},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)});var bz=/%20/g,bA=/\[\]$/,bB=/\r?\n/g,bC=/#.*$/,bD=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,bE=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bF=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,bG=/^(?:GET|HEAD)$/,bH=/^\/\//,bI=/\?/,bJ=/&lt;script\b[^&lt;]*(?:(?!&lt;\/script&gt;)&lt;[^&lt;]*)*&lt;\/script&gt;/gi,bK=/^(?:select|textarea)/i,bL=/\s+/,bM=/([?&amp;])_=[^&amp;]*/,bN=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bO=f.fn.load,bP={},bQ={},bR,bS,bT=["*/"]+["*"];try{bR=e.href}catch(bU){bR=c.createElement("a"),bR.href="",bR=bR.href}bS=bN.exec(bR.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof a!="string"&amp;&amp;bO)return bO.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(" ");if(e&gt;=0){var g=a.slice(e,a.length);a=a.slice(0,e)}var h="GET";c&amp;&amp;(f.isFunction(c)?(d=c,c=b):typeof c=="object"&amp;&amp;(c=f.param(c,f.ajaxSettings.traditional),h="POST"));var i=this;f.ajax({url:a,type:h,dataType:"html",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&amp;&amp;(a.done(function(a){c=a}),i.html(g?f("&lt;div&gt;").append(c.replace(bJ,"")).find(g):c)),d&amp;&amp;i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&amp;&amp;!this.disabled&amp;&amp;(this.checked||bK.test(this.nodeName)||bE.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bB,"\r\n")}}):{name:b.name,value:c.replace(bB,"\r\n")}}).get()}}),f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){f.fn[b]=function(a){return this.bind(b,a)}}),f.each(["get","post"],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&amp;&amp;(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,"script")},getJSON:function(a,b,c){return f.get(a,b,c,"json")},ajaxSetup:function(a,b){b?bX(a,f.ajaxSettings):(b=a,a=f.ajaxSettings),bX(a,b);return a},ajaxSettings:{url:bR,isLocal:bF.test(bS[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":bT},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":f.parseJSON,"text xml":f.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:bV(bP),ajaxTransport:bV(bQ),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&amp;&amp;clearTimeout(q),p=b,n=m||"",v.readyState=a&gt;0?4:0;var o,r,u,w=c,x=l?bZ(d,v,l):b,y,z;if(a&gt;=200&amp;&amp;a&lt;300||a===304){if(d.ifModified){if(y=v.getResponseHeader("Last-Modified"))f.lastModified[k]=y;if(z=v.getResponseHeader("Etag"))f.etag[k]=z}if(a===304)w="notmodified",o=!0;else try{r=b$(d,x),w="success",o=!0}catch(A){w="parsererror",u=A}}else{u=w;if(!w||a)w="error",a&lt;0&amp;&amp;(a=0)}v.status=a,v.statusText=""+(c||w),o?h.resolveWith(e,[r,w,v]):h.rejectWith(e,[v,w,u]),v.statusCode(j),j=b,t&amp;&amp;g.trigger("ajax"+(o?"Success":"Error"),[v,d,o?r:u]),i.resolveWith(e,[v,w]),t&amp;&amp;(g.trigger("ajaxComplete",[v,d]),--f.active||f.event.trigger("ajaxStop"))}}typeof a=="object"&amp;&amp;(c=a,a=b),c=c||{};var d=f.ajaxSetup({},c),e=d.context||d,g=e!==d&amp;&amp;(e.nodeType||e instanceof f)?f(e):f.event,h=f.Deferred(),i=f._Deferred(),j=d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var c=a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return this},getAllResponseHeaders:function(){return s===2?n:null},getResponseHeader:function(a){var c;if(s===2){if(!o){o={};while(c=bD.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){s||(d.mimeType=a);return this},abort:function(a){a=a||"abort",p&amp;&amp;p.abort(a),w(0,a);return this}};h.promise(v),v.success=v.done,v.error=v.fail,v.complete=i.done,v.statusCode=function(a){if(a){var b;if(s&lt;2)for(b in a)j[b]=[j[b],a[b]];else b=a[v.status],v.then(b,b)}return this},d.url=((a||d.url)+"").replace(bC,"").replace(bH,bS[1]+"//"),d.dataTypes=f.trim(d.dataType||"*").toLowerCase().split(bL),d.crossDomain==null&amp;&amp;(r=bN.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bS[1]&amp;&amp;r[2]==bS[2]&amp;&amp;(r[3]||(r[1]==="http:"?80:443))==(bS[3]||(bS[1]==="http:"?80:443)))),d.data&amp;&amp;d.processData&amp;&amp;typeof d.data!="string"&amp;&amp;(d.data=f.param(d.data,d.traditional)),bW(bP,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bG.test(d.type),t&amp;&amp;f.active++===0&amp;&amp;f.event.trigger("ajaxStart");if(!d.hasContent){d.data&amp;&amp;(d.url+=(bI.test(d.url)?"&amp;":"?")+d.data,delete d.data),k=d.url;if(d.cache===!1){var x=f.now(),y=d.url.replace(bM,"$1_="+x);d.url=y+(y===d.url?(bI.test(d.url)?"&amp;":"?")+"_="+x:"")}}(d.data&amp;&amp;d.hasContent&amp;&amp;d.contentType!==!1||c.contentType)&amp;&amp;v.setRequestHeader("Content-Type",d.contentType),d.ifModified&amp;&amp;(k=k||d.url,f.lastModified[k]&amp;&amp;v.setRequestHeader("If-Modified-Since",f.lastModified[k]),f.etag[k]&amp;&amp;v.setRequestHeader("If-None-Match",f.etag[k])),v.setRequestHeader("Accept",d.dataTypes[0]&amp;&amp;d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!=="*"?", "+bT+"; q=0.01":""):d.accepts["*"]);for(u in d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&amp;&amp;(d.beforeSend.call(e,v,d)===!1||s===2)){v.abort();return!1}for(u in{success:1,error:1,complete:1})v[u](d[u]);p=bW(bQ,d,c,v);if(!p)w(-1,"No Transport");else{v.readyState=1,t&amp;&amp;g.trigger("ajaxSend",[v,d]),d.async&amp;&amp;d.timeout&gt;0&amp;&amp;(q=setTimeout(function(){v.abort("timeout")},d.timeout));try{s=1,p.send(l,w)}catch(z){s&lt;2?w(-1,z):f.error(z)}}return v},param:function(a,c){var d=[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&amp;&amp;(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&amp;&amp;!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else for(var g in a)bY(g,a[g],c,e);return d.join("&amp;").replace(bz,"+")}}),f.extend({active:0,lastModified:{},etag:{}});var b_=f.now(),ca=/(\=)\?(&amp;|$)|\?\?/i;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return f.expando+"_"+b_++}}),f.ajaxPrefilter("json jsonp",function(b,c,d){var e=b.contentType==="application/x-www-form-urlencoded"&amp;&amp;typeof b.data=="string";if(b.dataTypes[0]==="jsonp"||b.jsonp!==!1&amp;&amp;(ca.test(b.url)||e&amp;&amp;ca.test(b.data))){var g,h=b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l="$1"+h+"$2";b.jsonp!==!1&amp;&amp;(j=j.replace(ca,l),b.url===j&amp;&amp;(e&amp;&amp;(k=k.replace(ca,l)),b.data===k&amp;&amp;(j+=(/\?/.test(j)?"&amp;":"?")+b.jsonp+"="+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&amp;&amp;f.isFunction(i)&amp;&amp;a[h](g[0])}),b.converters["script json"]=function(){g||f.error(h+" was not called");return g[0]},b.dataTypes[0]="json";return"script"}}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){f.globalEval(a);return a}}}),f.ajaxPrefilter("script",function(a){a.cache===b&amp;&amp;(a.cache=!1),a.crossDomain&amp;&amp;(a.type="GET",a.global=!1)}),f.ajaxTransport("script",function(a){if(a.crossDomain){var d,e=c.head||c.getElementsByTagName("head")[0]||c.documentElement;return{send:function(f,g){d=c.createElement("script"),d.async="async",a.scriptCharset&amp;&amp;(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&amp;&amp;d.parentNode&amp;&amp;e.removeChild(d),d=b,c||g(200,"success")},e.insertBefore(d,e.firstChild)},abort:function(){d&amp;&amp;d.onload(0,1)}}}});var cb=a.ActiveXObject?function(){for(var a in cd)cd[a](0,1)}:!1,cc=0,cd;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&amp;&amp;ce()||cf()}:ce,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&amp;&amp;"withCredentials"in a})}(f.ajaxSettings.xhr()),f.support.ajax&amp;&amp;f.ajaxTransport(function(c){if(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var h=c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in c.xhrFields)h[j]=c.xhrFields[j];c.mimeType&amp;&amp;h.overrideMimeType&amp;&amp;h.overrideMimeType(c.mimeType),!c.crossDomain&amp;&amp;!e["X-Requested-With"]&amp;&amp;(e["X-Requested-With"]="XMLHttpRequest");try{for(j in e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&amp;&amp;c.data||null),d=function(a,e){var j,k,l,m,n;try{if(d&amp;&amp;(e||h.readyState===4)){d=b,i&amp;&amp;(h.onreadystatechange=f.noop,cb&amp;&amp;delete cd[i]);if(e)h.readyState!==4&amp;&amp;h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&amp;&amp;n.documentElement&amp;&amp;(m.xml=n),m.text=h.responseText;try{k=h.statusText}catch(o){k=""}!j&amp;&amp;c.isLocal&amp;&amp;!c.crossDomain?j=m.text?200:404:j===1223&amp;&amp;(j=204)}}}catch(p){e||g(-1,p)}m&amp;&amp;g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++cc,cb&amp;&amp;(cd||(cd={},f(a).unload(cb)),cd[i]=d),h.onreadystatechange=d)},abort:function(){d&amp;&amp;d(0,1)}}}});var cg={},ch,ci,cj=/^(?:toggle|show|hide)$/,ck=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,cl,cm=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],cn;f.fn.extend({show:function(a,b,c){var d,e;if(a||a===0)return this.animate(cq("show",3),a,b,c);for(var g=0,h=this.length;g&lt;h;g++)d=this[g],d.style&amp;&amp;(e=d.style.display,!f._data(d,"olddisplay")&amp;&amp;e==="none"&amp;&amp;(e=d.style.display=""),e===""&amp;&amp;f.css(d,"display")==="none"&amp;&amp;f._data(d,"olddisplay",cr(d.nodeName)));for(g=0;g&lt;h;g++){d=this[g];if(d.style){e=d.style.display;if(e===""||e==="none")d.style.display=f._data(d,"olddisplay")||""}}return this},hide:function(a,b,c){if(a||a===0)return this.animate(cq("hide",3),a,b,c);for(var d=0,e=this.length;d&lt;e;d++)if(this[d].style){var g=f.css(this[d],"display");g!=="none"&amp;&amp;!f._data(this[d],"olddisplay")&amp;&amp;f._data(this[d],"olddisplay",g)}for(d=0;d&lt;e;d++)this[d].style&amp;&amp;(this[d].style.display="none");return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=typeof a=="boolean";f.isFunction(a)&amp;&amp;f.isFunction(b)?this._toggle.apply(this,arguments):a==null||d?this.each(function(){var b=d?a:f(this).is(":hidden");f(this)[b?"show":"hide"]()}):this.animate(cq("toggle",3),a,b,c);return this},fadeTo:function(a,b,c,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=f.speed(b,c,d);if(f.isEmptyObject(a))return this.each(e.complete,[!1]);a=f.extend({},a);return this[e.queue===!1?"each":"queue"](function(){e.queue===!1&amp;&amp;f._mark(this);var b=f.extend({},e),c=this.nodeType===1,d=c&amp;&amp;f(this).is(":hidden"),g,h,i,j,k,l,m,n,o;b.animatedProperties={};for(i in a){g=f.camelCase(i),i!==g&amp;&amp;(a[g]=a[i],delete a[i]),h=a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&amp;&amp;b.specialEasing[g]||b.easing||"swing";if(h==="hide"&amp;&amp;d||h==="show"&amp;&amp;!d)return b.complete.call(this);c&amp;&amp;(g==="height"||g==="width")&amp;&amp;(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,"display")==="inline"&amp;&amp;f.css(this,"float")==="none"&amp;&amp;(f.support.inlineBlockNeedsLayout?(j=cr(this.nodeName),j==="inline"?this.style.display="inline-block":(this.style.display="inline",this.style.zoom=1)):this.style.display="inline-block"))}b.overflow!=null&amp;&amp;(this.style.overflow="hidden");for(i in a)k=new f.fx(this,b,i),h=a[i],cj.test(h)?k[h==="toggle"?d?"show":"hide":h]():(l=ck.exec(h),m=k.cur(),l?(n=parseFloat(l[2]),o=l[3]||(f.cssNumber[i]?"":"px"),o!=="px"&amp;&amp;(f.style(this,i,(n||1)+o),m=(n||1)/k.cur()*m,f.style(this,i,m+o)),l[1]&amp;&amp;(n=(l[1]==="-="?-1:1)*n+m),k.custom(m,n,o)):k.custom(m,h,""));return!0})},stop:function(a,b){a&amp;&amp;this.queue([]),this.each(function(){var a=f.timers,c=a.length;b||f._unmark(!0,this);while(c--)a[c].elem===this&amp;&amp;(b&amp;&amp;a[c](!0),a.splice(c,1))}),b||this.dequeue();return this}}),f.each({slideDown:cq("show",1),slideUp:cq("hide",1),slideToggle:cq("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){f.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var d=a&amp;&amp;typeof a=="object"?f.extend({},a):{complete:c||!c&amp;&amp;b||f.isFunction(a)&amp;&amp;a,duration:a,easing:c&amp;&amp;b||b&amp;&amp;!f.isFunction(b)&amp;&amp;b};d.duration=f.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default,d.old=d.complete,d.complete=function(a){f.isFunction(d.old)&amp;&amp;d.old.call(this),d.queue!==!1?f.dequeue(this):a!==!1&amp;&amp;f._unmark(this)};return d},easing:{linear:function(a,b,c,d){return c+d*a},swing:function(a,b,c,d){return(-Math.cos(a*Math.PI)/2+.5)*d+c}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&amp;&amp;this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&amp;&amp;(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a,b=f.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||b==="auto"?0:b:a},custom:function(a,b,c){function g(a){return d.step(a)}var d=this,e=f.fx;this.startTime=cn||co(),this.start=a,this.end=b,this.unit=c||this.unit||(f.cssNumber[this.prop]?"":"px"),this.now=this.start,this.pos=this.state=0,g.elem=this.elem,g()&amp;&amp;f.timers.push(g)&amp;&amp;!cl&amp;&amp;(cl=setInterval(e.tick,e.interval))},show:function(){this.options.orig[this.prop]=f.style(this.elem,this.prop),this.options.show=!0,this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur()),f(this.elem).show()},hide:function(){this.options.orig[this.prop]=f.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b=cn||co(),c=!0,d=this.elem,e=this.options,g,h;if(a||b&gt;=e.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),e.animatedProperties[this.prop]=!0;for(g in e.animatedProperties)e.animatedProperties[g]!==!0&amp;&amp;(c=!1);if(c){e.overflow!=null&amp;&amp;!f.support.shrinkWrapBlocks&amp;&amp;f.each(["","X","Y"],function(a,b){d.style["overflow"+b]=e.overflow[a]}),e.hide&amp;&amp;f(d).hide();if(e.hide||e.show)for(var i in e.animatedProperties)f.style(d,i,e.orig[i]);e.complete.call(d)}return!1}e.duration==Infinity?this.now=b:(h=b-this.startTime,this.state=h/e.duration,this.pos=f.easing[e.animatedProperties[this.prop]](this.state,h,0,1,e.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){for(var a=f.timers,b=0;b&lt;a.length;++b)a[b]()||a.splice(b--,1);a.length||f.fx.stop()},interval:13,stop:function(){clearInterval(cl),cl=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&amp;&amp;a.elem.style[a.prop]!=null?a.elem.style[a.prop]=(a.prop==="width"||a.prop==="height"?Math.max(0,a.now):a.now)+a.unit:a.elem[a.prop]=a.now}}}),f.expr&amp;&amp;f.expr.filters&amp;&amp;(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return a===b.elem}).length});var cs=/^t(?:able|d|h)$/i,ct=/^(?:body|html)$/i;"getBoundingClientRect"in c.documentElement?f.fn.offset=function(a){var b=this[0],c;if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);try{c=b.getBoundingClientRect()}catch(d){}var e=b.ownerDocument,g=e.documentElement;if(!c||!f.contains(g,b))return c?{top:c.top,left:c.left}:{top:0,left:0};var h=e.body,i=cu(e),j=g.clientTop||h.clientTop||0,k=g.clientLeft||h.clientLeft||0,l=i.pageYOffset||f.support.boxModel&amp;&amp;g.scrollTop||h.scrollTop,m=i.pageXOffset||f.support.boxModel&amp;&amp;g.scrollLeft||h.scrollLeft,n=c.top+l-j,o=c.left+m-k;return{top:n,left:o}}:f.fn.offset=function(a){var b=this[0];if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);f.offset.initialize();var c,d=b.offsetParent,e=b,g=b.ownerDocument,h=g.documentElement,i=g.body,j=g.defaultView,k=j?j.getComputedStyle(b,null):b.currentStyle,l=b.offsetTop,m=b.offsetLeft;while((b=b.parentNode)&amp;&amp;b!==i&amp;&amp;b!==h){if(f.offset.supportsFixedPosition&amp;&amp;k.position==="fixed")break;c=j?j.getComputedStyle(b,null):b.currentStyle,l-=b.scrollTop,m-=b.scrollLeft,b===d&amp;&amp;(l+=b.offsetTop,m+=b.offsetLeft,f.offset.doesNotAddBorder&amp;&amp;(!f.offset.doesAddBorderForTableAndCells||!cs.test(b.nodeName))&amp;&amp;(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),e=d,d=b.offsetParent),f.offset.subtractsBorderForOverflowNotVisible&amp;&amp;c.overflow!=="visible"&amp;&amp;(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),k=c}if(k.position==="relative"||k.position==="static")l+=i.offsetTop,m+=i.offsetLeft;f.offset.supportsFixedPosition&amp;&amp;k.position==="fixed"&amp;&amp;(l+=Math.max(h.scrollTop,i.scrollTop),m+=Math.max(h.scrollLeft,i.scrollLeft));return{top:l,left:m}},f.offset={initialize:function(){var a=c.body,b=c.createElement("div"),d,e,g,h,i=parseFloat(f.css(a,"marginTop"))||0,j="&lt;div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;";f.extend(b.style,{position:"absolute",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hidden"}),b.innerHTML=j,a.insertBefore(b,a.firstChild),d=b.firstChild,e=d.firstChild,h=d.nextSibling.firstChild.firstChild,this.doesNotAddBorder=e.offsetTop!==5,this.doesAddBorderForTableAndCells=h.offsetTop===5,e.style.position="fixed",e.style.top="20px",this.supportsFixedPosition=e.offsetTop===20||e.offsetTop===15,e.style.position=e.style.top="",d.style.overflow="hidden",d.style.position="relative",this.subtractsBorderForOverflowNotVisible=e.offsetTop===-5,this.doesNotIncludeMarginInBodyOffset=a.offsetTop!==i,a.removeChild(b),f.offset.initialize=f.noop},bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;f.offset.initialize(),f.offset.doesNotIncludeMarginInBodyOffset&amp;&amp;(b+=parseFloat(f.css(a,"marginTop"))||0,c+=parseFloat(f.css(a,"marginLeft"))||0);return{top:b,left:c}},setOffset:function(a,b,c){var d=f.css(a,"position");d==="static"&amp;&amp;(a.style.position="relative");var e=f(a),g=e.offset(),h=f.css(a,"top"),i=f.css(a,"left"),j=(d==="absolute"||d==="fixed")&amp;&amp;f.inArray("auto",[h,i])&gt;-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&amp;&amp;(b=b.call(a,c,g)),b.top!=null&amp;&amp;(k.top=b.top-g.top+m),b.left!=null&amp;&amp;(k.left=b.left-g.left+n),"using"in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=ct.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,"marginTop"))||0,c.left-=parseFloat(f.css(a,"marginLeft"))||0,d.top+=parseFloat(f.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(f.css(b[0],"borderLeftWidth"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&amp;&amp;!ct.test(a.nodeName)&amp;&amp;f.css(a,"position")==="static")a=a.offsetParent;return a})}}),f.each(["Left","Top"],function(a,c){var d="scroll"+c;f.fn[d]=function(c){var e,g;if(c===b){e=this[0];if(!e)return null;g=cu(e);return g?"pageXOffset"in g?g[a?"pageYOffset":"pageXOffset"]:f.support.boxModel&amp;&amp;g.document.documentElement[d]||g.document.body[d]:e[d]}return this.each(function(){g=cu(this),g?g.scrollTo(a?f(g).scrollLeft():c,a?c:f(g).scrollTop()):this[d]=c})}}),f.each(["Height","Width"],function(a,c){var d=c.toLowerCase();f.fn["inner"+c]=function(){var a=this[0];return a&amp;&amp;a.style?parseFloat(f.css(a,d,"padding")):null},f.fn["outer"+c]=function(a){var b=this[0];return b&amp;&amp;b.style?parseFloat(f.css(b,d,a?"margin":"border")):null},f.fn[d]=function(a){var e=this[0];if(!e)return a==null?null:this;if(f.isFunction(a))return this.each(function(b){var c=f(this);c[d](a.call(this,b,c[d]()))});if(f.isWindow(e)){var g=e.document.documentElement["client"+c],h=e.document.body;return e.document.compatMode==="CSS1Compat"&amp;&amp;g||h&amp;&amp;h["client"+c]||g}if(e.nodeType===9)return Math.max(e.documentElement["client"+c],e.body["scroll"+c],e.documentElement["scroll"+c],e.body["offset"+c],e.documentElement["offset"+c]);if(a===b){var i=f.css(e,d),j=parseFloat(i);return f.isNaN(j)?i:j}return this.css(d,typeof a=="string"?a:a+"px")}}),a.jQuery=a.$=f})(window);

    </script>
      <script language="javascript">
        function getWarName(){
          var href = document.location.href;
          var urlParts = href.split("/");
          var warName = null;
          if( urlParts[3] != "admin" ){
            warName = urlParts[3];
          }

          return warName;
        }
        function configurePagePaths(){
          var warName = getWarName();
          var resultsPagePath = "/admin/v3console/ValidateInternals?component=OnDemandEchoInvokerResults";
          var servletPath = "/sif/OnDemandEchoInvokerServlet";
          if( warName != null ){
            resultsPagePath = "/" + warName + resultsPagePath;
            servletPath = "/" + warName + servletPath;
          }

          var pathInfo = {};
          pathInfo['RESULTS_PAGE_PATH'] = resultsPagePath;
          pathInfo['SERVLET_PATH'] = servletPath;
          window['EBAY_SOA_ECHO_PATH_INFO'] = pathInfo;
        }
        function getResultsPagePath(){
          return window['EBAY_SOA_ECHO_PATH_INFO']['RESULTS_PAGE_PATH'];
        }
        function getPathToPurgeResults() {
          return getResultsPagePath() + "&amp;clearAll=true";
        }
        function getServletPathToPurgeAll() {
          return window['EBAY_SOA_ECHO_PATH_INFO']['SERVLET_PATH'] + "?operation=clearAll";
        }
        function beginRefresh(){
          if (!document.images){
            return;
          }

          window.location.reload();

        }

        function setTimerForNextRefresh(){
          setTimeout('beginRefresh()', 20*1000 );//20 secs
        }
        function performCheck(){
          var currentTime = new Date().getTime();
          var diff = window['NEXT_REFRESH_DETAILS']['TIME'] - currentTime;
          diff = diff/1000;
          diff = parseInt( diff );

          if( diff &gt; 0  ){
            displayStatusAndSetTimer( diff );
          }else{
            beginRefresh();
          }
        }
        function setTimerForNextCheck(){
          setTimeout('performCheck()', 2*1000 );//2 secs
        }
        function displayStatusAndSetTimer(diff){
            var msg = "The page would be refreshed in "+ (diff) +" secs";

            $("#timeToRefresh").text(msg);

            setTimerForNextCheck();
        }

        function getTimeForNextRefresh(){
          return new Date().getTime() + (20*1000);
        }
        function reloadThisPage() {
          window.location.href = getResultsPagePath();
        }
        function clearAllResults() {
          $.ajax(
            {
              url:getServletPathToPurgeAll(),
              type:"POST",
              data:"",
              success:function(result){
                reloadThisPage();
              },
              dataType:"text"
            }
          );
        }
        function windowOnloadHandler(){
          configurePagePaths();
          var nextRefreshDetails = {};
          nextRefreshDetails['TIME'] = getTimeForNextRefresh();

          window['NEXT_REFRESH_DETAILS'] = nextRefreshDetails;
          $("#lnkRefresh").attr("href", getResultsPagePath() );
        }
        window.onload=windowOnloadHandler;
        </script>
    </head>
    <xsl:apply-templates select="InvokerResults"/>
  </xsl:template>

  <xsl:template match="InvokerResults">
    <xsl:variable name="cellRowSpan">
      <xsl:value-of select="@rowSpan"/>
    </xsl:variable>
    <br/>
    <br/>
    <table>
      <tr>
        <td>
          <span>
            <a class="refresh" id="lnkRefresh" href="javascript:void()">Refresh Now</a>
          </span>
        </td>
        <td>
          <span>
            <a class="clearAll" id="purgeAll" href="javascript:clearAllResults()">Clear All Results</a>
          </span>
        </td>
      </tr>
    </table>
    <br/>
    <br/>
    <table class="echo-results-table">
      <tr>
        <th class="echo-results-table-header"><div>Server Name</div></th>
        <th class="echo-results-table-header"><div>Binding Format</div></th>
        <th class="echo-results-table-header"><div>Payload Size (kb)</div></th>
        <th class="echo-results-table-header"><div>GZip Compressed?</div></th>
        <th class="echo-results-table-header"><div>Time Stamp</div></th>
        <th class="echo-results-table-header"><div>Network Time (ms)</div></th>
        <th class="echo-results-table-header"><div>Total SOA overhead (ms)</div></th>
        <th class="echo-results-table-header"><div>SOAClient overhead (ms)</div></th>
        <th class="echo-results-table-header"><div>SOAServer overhead (ms)</div></th>
        <th class="echo-results-table-header"><div>Client Ser time (ms)</div></th>
        <th class="echo-results-table-header"><div>Client DeSer time (ms)</div></th>
        <th class="echo-results-table-header"><div>Server DeSer time (ms)</div></th>
        <th class="echo-results-table-header"><div>Server Ser time (ms)</div></th>
        <th class="echo-results-table-header"><div>Turnaround time (ms)</div></th>
      </tr>

      <xsl:for-each select="InvokerResult">
         <tr class="echo-results-table-row">
          <td rowspan="{@rowSpan}">
            <xsl:value-of select="EndPoint"/>
          </td>
           <td rowspan="{@rowSpan}">
            <xsl:value-of select="BindingFormat"/>
          </td>
          <td rowspan="{@rowSpan}">
            <xsl:value-of select="PayloadSize"/>
          </td>
          <td rowspan="{@rowSpan}">
            <xsl:value-of select="GZipCompUsed"/>
          </td>
          <xsl:apply-templates select="Metrics[1]"/>
        </tr>
        <xsl:for-each select="Metrics[position() &gt; 1]">
          <tr class="echo-results-table-row">
            <xsl:call-template name="MetricsTemplate"/>
          </tr>
        </xsl:for-each>
      </xsl:for-each>
    </table>

  </xsl:template>

  <xsl:template match="Metrics">
    <xsl:call-template name="MetricsTemplate"/>
  </xsl:template>
  <xsl:template name="MetricsTemplate">
    <td rowspan="1">
      <xsl:value-of select="TimeStamp"/>
    </td>
    <xsl:choose>
      <xsl:when test="Error != '(null)'">
        <td class="echo-invocation-error" colspan="9" align="center">
          <xsl:value-of select="Error"/>
        </td>
      </xsl:when>
      <xsl:when test="X-EBAY-ECHO-CSER-TIME != '(null)'">
        <td rowspan="1" align="right">
          <xsl:value-of select="X-EBAY-ECHO-NETWORK-TIME"/>
        </td>
        <td rowspan="1" align="right">
          <xsl:value-of select="X-EBAY-ECHO-TOTAL-SOA-TIME"/>
        </td>
        <td rowspan="1" align="right">
          <xsl:value-of select="X-EBAY-ECHO-CSOA-TIME"/>
        </td>
        <td rowspan="1" align="right">
          <xsl:value-of select="X-EBAY-ECHO-SSOA-TIME"/>
        </td>
        <td rowspan="1" align="right">
          <xsl:value-of select="X-EBAY-ECHO-CSER-TIME"/>
        </td>
        <td rowspan="1" align="right">
          <xsl:value-of select="X-EBAY-ECHO-CDESER-TIME"/>
        </td>
        <td rowspan="1" align="right">
          <xsl:value-of select="X-EBAY-ECHO-SDESER-TIME"/>
        </td>
        <td rowspan="1" align="right">
          <xsl:value-of select="X-EBAY-ECHO-SSER-TIME"/>
        </td>
        <td rowspan="1" align="right">
          <xsl:value-of select="X-EBAY-ECHO-CTOTAL-TIME"/>
        </td>
      </xsl:when>
      <xsl:otherwise>
        <td colspan="9" align="center">In Progress</td>
      </xsl:otherwise>
    </xsl:choose>

  </xsl:template>




    <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'RestClientMonitoring']">
        <xsl:apply-templates select="RestClientMonitoring_Root"/>
    </xsl:template>

    <xsl:template match="Error">
        <xsl:param name="errorColSpan"/>
        <td bgcolor="#D02090" colspan="{$errorColSpan}">
            <pre>
                <font color="#FFFFFF">
                    <xsl:value-of select="."/>
                </font>
            </pre>
        </td>
    </xsl:template>

    <xsl:template match="RestClientMonitoring_Root">
      <form name="resetForm" method="post">
        <input id="action" name="action" value="reset" type="hidden"/>
        <input id="target" name="target" type="hidden"/>
        </form>
        <xsl:choose>
            <xsl:when test="@single-client">
                <xsl:apply-templates select="RestClientMonitoring" mode="detail"/>
            </xsl:when>
            <xsl:otherwise>
              <a href="javascript:void(0)" onclick="document.getElementById('action').value='resetAll';document.forms['resetForm'].submit();return false;">
                  Reset All Metrics
                </a>
                <br/>
                <i>*note: hold mouse over metric names for descriptions of metrics</i>
                <br/>
                <table align="center" bgcolor="#B4D2E5" border="1" width="100%">
                  <tr>
                    <td colspan="1">
                      <h4>
                        <center>Rest Client Monitoring</center>
                      </h4>
                    </td>
                  </tr>
                  <tr>
                    <xsl:apply-templates select="Error">
                      <xsl:with-param name="errorColSpan">1</xsl:with-param>
                    </xsl:apply-templates>
                  </tr>
                  <xsl:apply-templates select="RestClientMonitoring" mode="list"/>
                </table>
                <br/>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>

    <xsl:template match="RestClientMonitoring" mode="list">
        <tr id="{@name}_row">
            <td>
                <table border="0" width="100%">
                    <tr>
                        <td width="500px" align="left">
                            <a href="ValidateInternals?component=RestClientMonitoring&amp;detail={@name}">
                                <xsl:value-of select="@name"/>
                            </a>
                        </td>
                        <td width="300px" align="right">
                            <a href="javascript:void(0)" onclick="document.getElementById('target').value='{@name}';document.forms['resetForm'].submit();return false;">
                                Reset Metrics
                            </a>
                            <br/>
                        </td>
                    </tr>
                </table>
                <xsl:apply-templates select="RestClientMetrics" mode="list"/>
            </td>
        </tr>
    </xsl:template>

    <xsl:template match="RestClientMetrics" mode="list">
        <table border="1" width="100%" bgcolor="#E0FFFF">
            <tr>
                <th align="center" width="10%" title="The total number of calls made by this client">
                    Call Count
                </th>
                <th align="center" width="10%" title="The number of calls by this client that resulted in error">
                    Error Count
                </th>
                <th align="center" width="10%" title="Total time taken by this client">
                    Average Execution Time
                </th>
                <th align="center" width="10%" title="Server processing time + Network time; Duration from the time the request starts to be sent to the time the response starts to arrive">
                    Average Call Time
                </th>
                <th align="center" width="10%" title="Time taken to serialize the request payload">
                    Average Serialization Time
                </th>
                <th align="center" width="10%" title="Time taken to deserialize the response payload">
                    Average Deserialization Time
                </th>
                <th align="center" width="10%" title="Time taken by the request handlers">
                    Average Request Processing Time
                </th>
                <th align="center" width="10%" title="Time taken by the response handlers">
                    Average Response Processing Time
                </th>
            </tr>
            <tr>
                <xsl:choose>
                    <xsl:when test="Error">
                        <xsl:apply-templates select="Error">
                            <xsl:with-param name="errorColSpan">8</xsl:with-param>
                        </xsl:apply-templates>
                    </xsl:when>
                    <xsl:otherwise>
                        <td>
                          <xsl:value-of select="metric[@name='Ginger.Clt.Total']/component[@name='value']"/>
                        </td>
                        <td>
                            <xsl:value-of select="metric[@name='Ginger.Clt.Err.Total']/component[@name='value']"/>
                        </td>
                        <td>
                            <xsl:variable name="Total_Count" select="metric[@name='Ginger.Clt.Time.Total']/component[@name='count']"/>
                            <xsl:if test="$Total_Count!=0">
                                <xsl:variable name="Total_Time" select="metric[@name='Ginger.Clt.Time.Total']/component[@name='value'] div $Total_Count div 1000000.0"/>
                                <xsl:value-of select="format-number($Total_Time, '#.00')"/>ms
                            </xsl:if>
                        </td>
                        <td>
                            <xsl:variable name="Call_Count" select="metric[@name='Ginger.Clt.Time.Call']/component[@name='count']"/>
                            <xsl:if test="$Call_Count!=0">
                                <xsl:variable name="Call_Time" select="metric[@name='Ginger.Clt.Time.Call']/component[@name='value'] div $Call_Count div 1000000.0"/>
                                <xsl:value-of select="format-number($Call_Time, '#.00')"/>ms
                            </xsl:if>
                        </td>
                        <td>
                            <xsl:variable name="Ser_Count" select="metric[@name='Ginger.Clt.Time.Serialization']/component[@name='count']"/>
                            <xsl:if test="$Ser_Count!=0">
                                <xsl:variable name="Ser_Time" select="metric[@name='Ginger.Clt.Time.Serialization']/component[@name='value'] div $Ser_Count div 1000000.0"/>
                                <xsl:value-of select="format-number($Ser_Time, '#.00')"/>ms
                            </xsl:if>
                        </td>
                        <td>
                            <xsl:variable name="Deser_Count" select="metric[@name='Ginger.Clt.Time.Deserialization']/component[@name='count']"/>
                            <xsl:if test="$Deser_Count!=0">
                                <xsl:variable name="Deser_Time" select="metric[@name='Ginger.Clt.Time.Deserialization']/component[@name='value'] div $Deser_Count div 1000000.0"/>
                                <xsl:value-of select="format-number($Deser_Time, '#.00')"/>ms
                            </xsl:if>
                        </td>
                        <td>
                            <xsl:variable name="Req_Count" select="metric[@name='Ginger.Clt.Time.Pipeline_Request']/component[@name='count']"/>
                            <xsl:if test="$Req_Count!=0">
                                <xsl:variable name="Req_Time" select="metric[@name='Ginger.Clt.Time.Pipeline_Request']/component[@name='value'] div $Req_Count div 1000000.0"/>
                                <xsl:value-of select="format-number($Req_Time, '#.00')"/>ms
                            </xsl:if>
                        </td>
                        <td>
                            <xsl:variable name="Res_Count" select="metric[@name='Ginger.Clt.Time.Pipeline_Response']/component[@name='count']"/>
                            <xsl:if test="$Res_Count!=0">
                                <xsl:variable name="Res_Time" select="metric[@name='Ginger.Clt.Time.Pipeline_Response']/component[@name='value'] div $Res_Count div 1000000.0"/>
                                <xsl:value-of select="format-number($Res_Time, '#.00')"/>ms
                            </xsl:if>
                        </td>
                    </xsl:otherwise>
                </xsl:choose>
            </tr>

        </table>
    </xsl:template>

    <xsl:template match="RestClientMonitoring" mode="detail">
      <xsl:variable name="cltName" select="@name"/>
      <font face="arial" size="2">
        <a href="javascript:void(0)" onclick="document.getElementById('target').value='{$cltName}';document.forms['resetForm'].submit();return false;">
          Reset Metrics
        </a>
        <br/>
        <a href="ValidateInternals?component=RestClientMonitoring">Back to List</a>
      </font>

      <table border="1" width="100%">
        <tr bgcolor="#B4D2E5">
          <td colspan="3">
            <h4>
              <center>Detailed REST Client Monitoring Data for <xsl:value-of select="$cltName"/></center>
                    </h4>
                </td>
            </tr>
            <tr bgcolor="#B4D2E5">
                <th width="40%">Metric</th>
                <th width="30%">Operation</th>
                <th width="30%">Value</th>
            </tr>
            <xsl:apply-templates select="OperationMetrics" mode="RestClientOperationMetrics"/>
        </table>
    </xsl:template>

    <xsl:template match="OperationMetrics" mode="RestClientOperationMetrics">
        <xsl:apply-templates select="metric" mode="RestClientOperationMetric">
            <xsl:with-param name="opName">
                <xsl:value-of select="@name"/>
            </xsl:with-param>
        </xsl:apply-templates>
    </xsl:template>

    <xsl:template match="metric" mode="RestClientOperationMetric">
      <xsl:param name="opName"/>
      <xsl:variable name="metricName" select="@name"/>
        <xsl:if test="not($metricName='Ginger.Clt.Total' or $metricName='Ginger.Clt.Err.Total')">
          <tr>
             <td><xsl:value-of select="$metricName"/>.count</td>
             <td><xsl:value-of select="$opName"/></td>
            <td><xsl:value-of select="component[@name='count']"/></td>
          </tr>
        </xsl:if>
        <tr>
          <td><xsl:value-of select="$metricName"/>.value</td>
          <td><xsl:value-of select="$opName"/></td>
          <td><xsl:value-of select="component[@name='value']"/></td>
        </tr>
    </xsl:template>



  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name='Traffic Mirror Component Status']">
    <a name="{@name}"/>
    <br/>
    <xsl:apply-templates select="TrafficMirrorStatus"/>
    <br/>
  </xsl:template>
  <xsl:template match="TrafficMirrorStatus">
    <table border="1">
      <tr VALIGN="MIDDLE" ALIGN="CENTER">
        <td colspan="2" bgcolor="#FFCC00">
          <H3>
            <B>Traffic Mirror Status</B>
          </H3>
        </td>
      </tr>
      <tr>
        <td>Task Factory:</td>
        <td><xsl:value-of select="@taskFactory"/></td>
      </tr>
      <tr>
        <td>Task Manager:</td>
        <td><xsl:value-of select="@taskManager"/></td>
      </tr>
      <tr>
        <td>Response Validator:</td>
        <td><xsl:value-of select="@responseValidator"/></td>
      </tr>
      <tr>
        <td>Request Count:</td>
        <td><xsl:value-of select="@reqCount"/></td>
      </tr>
      <tr>
        <td>Task Count:</td>
        <td><xsl:value-of select="@taskCount"/></td>
      </tr>
      <tr>
        <td>Task Failure Count:</td>
        <td><xsl:value-of select="@taskFailureCount"/></td>
      </tr>
      <tr>
        <td>Task Validation Success Count:</td>
        <td><xsl:value-of select="@taskValidateSuccessCount"/></td>
      </tr>
      <tr>
        <td>Task Validation Failure Count:</td>
        <td><xsl:value-of select="@taskValidateFailureCount"/></td>
      </tr>
      <tr>
        <td>Sync Pool Queue Size:</td>
        <td><xsl:value-of select="@syncQueueSize"/></td>
      </tr>
      <tr>
        <td>Sync Pool Active Task Count:</td>
        <td><xsl:value-of select="@syncActiveTask"/></td>
      </tr>
      <tr>
        <td>Async Pool Queue Size:</td>
        <td><xsl:value-of select="@asyncQueueSize"/></td>
      </tr>
      <tr>
        <td>Async Pool Active Task Count:</td>
        <td><xsl:value-of select="@asyncActiveTask"/></td>
      </tr>
  </table>
  <br/>
  </xsl:template>


  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'OnDemandEchoInvokerComponent']">
    <head>
      <STYLE TYPE="text/css">
           table.echo-invoker-table{
          font-family:verdana;
           }
           td.echo-invoker-table-header{
             background-color: #CCCCFF;
             border: 1px solid #AAAAAA;
             background-position: left center;
             background-repeat:no-repeat;
             padding-right:10px;
             font-size:18px;
             font-family:verdana;
           }
        td.echo-invoker-table-value{
             border:1px solid #AAAAAA;
            padding:2px 2px;
            border-collapse:collapse;
            border-style:solid;
            font-size:16px;
            background-color:#DDDDDD;
            font-family:verdana;
           }
           table.echo-invoker-table tr:hover{
            background-color:#CCFFFF;
           }
           span.invoke-btn-span{

           }
           a.invoke-btn-a{
             background-color:#4D90FE;
             background-image:-moz-linear-gradient(center top , #4D90FE, #4787ED);
             border:1px solid #3079ED;
             color:#FFFFFF;
             text-shadow:0 1px rgba(0, 0, 0, 0.1);
             text-transform:uppercase;
             cursor:pointer;
             display:inline-block;
             font-size:11px;
             font-weight:bold;
             min-width:54px;
             padding:16px 8px;
             text-align:center;
             font:81.25%/1 arial,helvetica,sans-serif;
             text-decoration:none;
           }
           a.show-bean-config{
             font:81.25%/1 arial,helvetica,sans-serif;
             font-size:16px;
           }
      </STYLE>
      <script language="javascript">

      /*! jQuery v1.6.4 http://jquery.com/ | http://jquery.org/license */
(function(a,b){function cu(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cr(a){if(!cg[a]){var b=c.body,d=f("&lt;"+a+"&gt;").appendTo(b),e=d.css("display");d.remove();if(e==="none"||e===""){ch||(ch=c.createElement("iframe"),ch.frameBorder=ch.width=ch.height=0),b.appendChild(ch);if(!ci||!ch.createElement)ci=(ch.contentWindow||ch.contentDocument).document,ci.write((c.compatMode==="CSS1Compat"?"&lt;!doctype html&gt;":"")+"&lt;html&gt;&lt;body&gt;"),ci.close();d=ci.createElement(a),ci.body.appendChild(d),e=f.css(d,"display"),b.removeChild(ch)}cg[a]=e}return cg[a]}function cq(a,b){var c={};f.each(cm.concat.apply([],cm.slice(0,b)),function(){c[this]=a});return c}function cp(){cn=b}function co(){setTimeout(cp,0);return cn=f.now()}function cf(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}function ce(){try{return new a.XMLHttpRequest}catch(b){}}function b$(a,c){a.dataFilter&amp;&amp;(c=a.dataFilter(c,a.dataType));var d=a.dataTypes,e={},g,h,i=d.length,j,k=d[0],l,m,n,o,p;for(g=1;g&lt;i;g++){if(g===1)for(h in a.converters)typeof h=="string"&amp;&amp;(e[h.toLowerCase()]=a.converters[h]);l=k,k=d[g];if(k==="*")k=l;else if(l!=="*"&amp;&amp;l!==k){m=l+" "+k,n=e[m]||e["* "+k];if(!n){p=b;for(o in e){j=o.split(" ");if(j[0]===l||j[0]==="*"){p=e[j[1]+" "+k];if(p){o=e[o],o===!0?n=p:p===!0&amp;&amp;(n=o);break}}}}!n&amp;&amp;!p&amp;&amp;f.error("No conversion from "+m.replace(" "," to ")),n!==!0&amp;&amp;(c=n?n(c):p(o(c)))}}return c}function bZ(a,c,d){var e=a.contents,f=a.dataTypes,g=a.responseFields,h,i,j,k;for(i in g)i in d&amp;&amp;(c[g[i]]=d[i]);while(f[0]==="*")f.shift(),h===b&amp;&amp;(h=a.mimeType||c.getResponseHeader("content-type"));if(h)for(i in e)if(e[i]&amp;&amp;e[i].test(h)){f.unshift(i);break}if(f[0]in d)j=f[0];else{for(i in d){if(!f[0]||a.converters[i+" "+f[0]]){j=i;break}k||(k=i)}j=j||k}if(j){j!==f[0]&amp;&amp;f.unshift(j);return d[j]}}function bY(a,b,c,d){if(f.isArray(b))f.each(b,function(b,e){c||bA.test(a)?d(a,e):bY(a+"["+(typeof e=="object"||f.isArray(e)?b:"")+"]",e,c,d)});else if(!c&amp;&amp;b!=null&amp;&amp;typeof b=="object")for(var e in b)bY(a+"["+e+"]",b[e],c,d);else d(a,b)}function bX(a,c){var d,e,g=f.ajaxSettings.flatOptions||{};for(d in c)c[d]!==b&amp;&amp;((g[d]?a:e||(e={}))[d]=c[d]);e&amp;&amp;f.extend(!0,a,e)}function bW(a,c,d,e,f,g){f=f||c.dataTypes[0],g=g||{},g[f]=!0;var h=a[f],i=0,j=h?h.length:0,k=a===bP,l;for(;i&lt;j&amp;&amp;(k||!l);i++)l=h[i](c,d,e),typeof l=="string"&amp;&amp;(!k||g[l]?l=b:(c.dataTypes.unshift(l),l=bW(a,c,d,e,l,g)));(k||!l)&amp;&amp;!g["*"]&amp;&amp;(l=bW(a,c,d,e,"*",g));return l}function bV(a){return function(b,c){typeof b!="string"&amp;&amp;(c=b,b="*");if(f.isFunction(c)){var d=b.toLowerCase().split(bL),e=0,g=d.length,h,i,j;for(;e&lt;g;e++)h=d[e],j=/^\+/.test(h),j&amp;&amp;(h=h.substr(1)||"*"),i=a[h]=a[h]||[],i[j?"unshift":"push"](c)}}}function by(a,b,c){var d=b==="width"?a.offsetWidth:a.offsetHeight,e=b==="width"?bt:bu;if(d&gt;0){c!=="border"&amp;&amp;f.each(e,function(){c||(d-=parseFloat(f.css(a,"padding"+this))||0),c==="margin"?d+=parseFloat(f.css(a,c+this))||0:d-=parseFloat(f.css(a,"border"+this+"Width"))||0});return d+"px"}d=bv(a,b,b);if(d&lt;0||d==null)d=a.style[b]||0;d=parseFloat(d)||0,c&amp;&amp;f.each(e,function(){d+=parseFloat(f.css(a,"padding"+this))||0,c!=="padding"&amp;&amp;(d+=parseFloat(f.css(a,"border"+this+"Width"))||0),c==="margin"&amp;&amp;(d+=parseFloat(f.css(a,c+this))||0)});return d+"px"}function bl(a,b){b.src?f.ajax({url:b.src,async:!1,dataType:"script"}):f.globalEval((b.text||b.textContent||b.innerHTML||"").replace(bd,"/*$0*/")),b.parentNode&amp;&amp;b.parentNode.removeChild(b)}function bk(a){f.nodeName(a,"input")?bj(a):"getElementsByTagName"in a&amp;&amp;f.grep(a.getElementsByTagName("input"),bj)}function bj(a){if(a.type==="checkbox"||a.type==="radio")a.defaultChecked=a.checked}function bi(a){return"getElementsByTagName"in a?a.getElementsByTagName("*"):"querySelectorAll"in a?a.querySelectorAll("*"):[]}function bh(a,b){var c;if(b.nodeType===1){b.clearAttributes&amp;&amp;b.clearAttributes(),b.mergeAttributes&amp;&amp;b.mergeAttributes(a),c=b.nodeName.toLowerCase();if(c==="object")b.outerHTML=a.outerHTML;else if(c!=="input"||a.type!=="checkbox"&amp;&amp;a.type!=="radio"){if(c==="option")b.selected=a.defaultSelected;else if(c==="input"||c==="textarea")b.defaultValue=a.defaultValue}else a.checked&amp;&amp;(b.defaultChecked=b.checked=a.checked),b.value!==a.value&amp;&amp;(b.value=a.value);b.removeAttribute(f.expando)}}function bg(a,b){if(b.nodeType===1&amp;&amp;!!f.hasData(a)){var c=f.expando,d=f.data(a),e=f.data(b,d);if(d=d[c]){var g=d.events;e=e[c]=f.extend({},d);if(g){delete e.handle,e.events={};for(var h in g)for(var i=0,j=g[h].length;i&lt;j;i++)f.event.add(b,h+(g[h][i].namespace?".":"")+g[h][i].namespace,g[h][i],g[h][i].data)}}}}function bf(a,b){return f.nodeName(a,"table")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function V(a,b,c){b=b||0;if(f.isFunction(b))return f.grep(a,function(a,d){var e=!!b.call(a,d,a);return e===c});if(b.nodeType)return f.grep(a,function(a,d){return a===b===c});if(typeof b=="string"){var d=f.grep(a,function(a){return a.nodeType===1});if(Q.test(b))return f.filter(b,d,!c);b=f.filter(b,d)}return f.grep(a,function(a,d){return f.inArray(a,b)&gt;=0===c})}function U(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function M(a,b){return(a&amp;&amp;a!=="*"?a+".":"")+b.replace(y,"`").replace(z,"&amp;")}function L(a){var b,c,d,e,g,h,i,j,k,l,m,n,o,p=[],q=[],r=f._data(this,"events");if(!(a.liveFired===this||!r||!r.live||a.target.disabled||a.button&amp;&amp;a.type==="click")){a.namespace&amp;&amp;(n=new RegExp("(^|\\.)"+a.namespace.split(".").join("\\.(?:.*\\.)?")+"(\\.|$)")),a.liveFired=this;var s=r.live.slice(0);for(i=0;i&lt;s.length;i++)g=s[i],g.origType.replace(w,"")===a.type?q.push(g.selector):s.splice(i--,1);e=f(a.target).closest(q,a.currentTarget);for(j=0,k=e.length;j&lt;k;j++){m=e[j];for(i=0;i&lt;s.length;i++){g=s[i];if(m.selector===g.selector&amp;&amp;(!n||n.test(g.namespace))&amp;&amp;!m.elem.disabled){h=m.elem,d=null;if(g.preType==="mouseenter"||g.preType==="mouseleave")a.type=g.preType,d=f(a.relatedTarget).closest(g.selector)[0],d&amp;&amp;f.contains(h,d)&amp;&amp;(d=h);(!d||d!==h)&amp;&amp;p.push({elem:h,handleObj:g,level:m.level})}}}for(j=0,k=p.length;j&lt;k;j++){e=p[j];if(c&amp;&amp;e.level&gt;c)break;a.currentTarget=e.elem,a.data=e.handleObj.data,a.handleObj=e.handleObj,o=e.handleObj.origHandler.apply(e.elem,arguments);if(o===!1||a.isPropagationStopped()){c=e.level,o===!1&amp;&amp;(b=!1);if(a.isImmediatePropagationStopped())break}}return b}}function J(a,c,d){var e=f.extend({},d[0]);e.type=a,e.originalEvent={},e.liveFired=b,f.event.handle.call(c,e),e.isDefaultPrevented()&amp;&amp;d[0].preventDefault()}function D(){return!0}function C(){return!1}function m(a,c,d){var e=c+"defer",g=c+"queue",h=c+"mark",i=f.data(a,e,b,!0);i&amp;&amp;(d==="queue"||!f.data(a,g,b,!0))&amp;&amp;(d==="mark"||!f.data(a,h,b,!0))&amp;&amp;setTimeout(function(){!f.data(a,g,b,!0)&amp;&amp;!f.data(a,h,b,!0)&amp;&amp;(f.removeData(a,e,!0),i.resolve())},0)}function l(a){for(var b in a)if(b!=="toJSON")return!1;return!0}function k(a,c,d){if(d===b&amp;&amp;a.nodeType===1){var e="data-"+c.replace(j,"-$1").toLowerCase();d=a.getAttribute(e);if(typeof d=="string"){try{d=d==="true"?!0:d==="false"?!1:d==="null"?null:f.isNaN(d)?i.test(d)?f.parseJSON(d):d:parseFloat(d)}catch(g){}f.data(a,c,d)}else d=b}return d}var c=a.document,d=a.navigator,e=a.location,f=function(){function K(){if(!e.isReady){try{c.documentElement.doScroll("left")}catch(a){setTimeout(K,1);return}e.ready()}}var e=function(a,b){return new e.fn.init(a,b,h)},f=a.jQuery,g=a.$,h,i=/^(?:[^#&lt;]*(&lt;[\w\W]+&gt;)[^&gt;]*$|#([\w\-]*)$)/,j=/\S/,k=/^\s+/,l=/\s+$/,m=/\d/,n=/^&lt;(\w+)\s*\/?&gt;(?:&lt;\/\1&gt;)?$/,o=/^[\],:{}\s]*$/,p=/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,q=/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,r=/(?:^|:|,)(?:\s*\[)+/g,s=/(webkit)[ \/]([\w.]+)/,t=/(opera)(?:.*version)?[ \/]([\w.]+)/,u=/(msie) ([\w.]+)/,v=/(mozilla)(?:.*? rv:([\w.]+))?/,w=/-([a-z]|[0-9])/ig,x=/^-ms-/,y=function(a,b){return(b+"").toUpperCase()},z=d.userAgent,A,B,C,D=Object.prototype.toString,E=Object.prototype.hasOwnProperty,F=Array.prototype.push,G=Array.prototype.slice,H=String.prototype.trim,I=Array.prototype.indexOf,J={};e.fn=e.prototype={constructor:e,init:function(a,d,f){var g,h,j,k;if(!a)return this;if(a.nodeType){this.context=this[0]=a,this.length=1;return this}if(a==="body"&amp;&amp;!d&amp;&amp;c.body){this.context=c,this[0]=c.body,this.selector=a,this.length=1;return this}if(typeof a=="string"){a.charAt(0)!=="&lt;"||a.charAt(a.length-1)!=="&gt;"||a.length&lt;3?g=i.exec(a):g=[null,a,null];if(g&amp;&amp;(g[1]||!d)){if(g[1]){d=d instanceof e?d[0]:d,k=d?d.ownerDocument||d:c,j=n.exec(a),j?e.isPlainObject(d)?(a=[c.createElement(j[1])],e.fn.attr.call(a,d,!0)):a=[k.createElement(j[1])]:(j=e.buildFragment([g[1]],[k]),a=(j.cacheable?e.clone(j.fragment):j.fragment).childNodes);return e.merge(this,a)}h=c.getElementById(g[2]);if(h&amp;&amp;h.parentNode){if(h.id!==g[2])return f.find(a);this.length=1,this[0]=h}this.context=c,this.selector=a;return this}return!d||d.jquery?(d||f).find(a):this.constructor(d).find(a)}if(e.isFunction(a))return f.ready(a);a.selector!==b&amp;&amp;(this.selector=a.selector,this.context=a.context);return e.makeArray(a,this)},selector:"",jquery:"1.6.4",length:0,size:function(){return this.length},toArray:function(){return G.call(this,0)},get:function(a){return a==null?this.toArray():a&lt;0?this[this.length+a]:this[a]},pushStack:function(a,b,c){var d=this.constructor();e.isArray(a)?F.apply(d,a):e.merge(d,a),d.prevObject=this,d.context=this.context,b==="find"?d.selector=this.selector+(this.selector?" ":"")+c:b&amp;&amp;(d.selector=this.selector+"."+b+"("+c+")");return d},each:function(a,b){return e.each(this,a,b)},ready:function(a){e.bindReady(),B.done(a);return this},eq:function(a){return a===-1?this.slice(a):this.slice(a,+a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(G.apply(this,arguments),"slice",G.call(arguments).join(","))},map:function(a){return this.pushStack(e.map(this,function(b,c){return a.call(b,c,b)}))},end:function(){return this.prevObject||this.constructor(null)},push:F,sort:[].sort,splice:[].splice},e.fn.init.prototype=e.fn,e.extend=e.fn.extend=function(){var a,c,d,f,g,h,i=arguments[0]||{},j=1,k=arguments.length,l=!1;typeof i=="boolean"&amp;&amp;(l=i,i=arguments[1]||{},j=2),typeof i!="object"&amp;&amp;!e.isFunction(i)&amp;&amp;(i={}),k===j&amp;&amp;(i=this,--j);for(;j&lt;k;j++)if((a=arguments[j])!=null)for(c in a){d=i[c],f=a[c];if(i===f)continue;l&amp;&amp;f&amp;&amp;(e.isPlainObject(f)||(g=e.isArray(f)))?(g?(g=!1,h=d&amp;&amp;e.isArray(d)?d:[]):h=d&amp;&amp;e.isPlainObject(d)?d:{},i[c]=e.extend(l,h,f)):f!==b&amp;&amp;(i[c]=f)}return i},e.extend({noConflict:function(b){a.$===e&amp;&amp;(a.$=g),b&amp;&amp;a.jQuery===e&amp;&amp;(a.jQuery=f);return e},isReady:!1,readyWait:1,holdReady:function(a){a?e.readyWait++:e.ready(!0)},ready:function(a){if(a===!0&amp;&amp;!--e.readyWait||a!==!0&amp;&amp;!e.isReady){if(!c.body)return setTimeout(e.ready,1);e.isReady=!0;if(a!==!0&amp;&amp;--e.readyWait&gt;0)return;B.resolveWith(c,[e]),e.fn.trigger&amp;&amp;e(c).trigger("ready").unbind("ready")}},bindReady:function(){if(!B){B=e._Deferred();if(c.readyState==="complete")return setTimeout(e.ready,1);if(c.addEventListener)c.addEventListener("DOMContentLoaded",C,!1),a.addEventListener("load",e.ready,!1);else if(c.attachEvent){c.attachEvent("onreadystatechange",C),a.attachEvent("onload",e.ready);var b=!1;try{b=a.frameElement==null}catch(d){}c.documentElement.doScroll&amp;&amp;b&amp;&amp;K()}}},isFunction:function(a){return e.type(a)==="function"},isArray:Array.isArray||function(a){return e.type(a)==="array"},isWindow:function(a){return a&amp;&amp;typeof a=="object"&amp;&amp;"setInterval"in a},isNaN:function(a){return a==null||!m.test(a)||isNaN(a)},type:function(a){return a==null?String(a):J[D.call(a)]||"object"},isPlainObject:function(a){if(!a||e.type(a)!=="object"||a.nodeType||e.isWindow(a))return!1;try{if(a.constructor&amp;&amp;!E.call(a,"constructor")&amp;&amp;!E.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}var d;for(d in a);return d===b||E.call(a,d)},isEmptyObject:function(a){for(var b in a)return!1;return!0},error:function(a){throw a},parseJSON:function(b){if(typeof b!="string"||!b)return null;b=e.trim(b);if(a.JSON&amp;&amp;a.JSON.parse)return a.JSON.parse(b);if(o.test(b.replace(p,"@").replace(q,"]").replace(r,"")))return(new Function("return "+b))();e.error("Invalid JSON: "+b)},parseXML:function(c){var d,f;try{a.DOMParser?(f=new DOMParser,d=f.parseFromString(c,"text/xml")):(d=new ActiveXObject("Microsoft.XMLDOM"),d.async="false",d.loadXML(c))}catch(g){d=b}(!d||!d.documentElement||d.getElementsByTagName("parsererror").length)&amp;&amp;e.error("Invalid XML: "+c);return d},noop:function(){},globalEval:function(b){b&amp;&amp;j.test(b)&amp;&amp;(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(x,"ms-").replace(w,y)},nodeName:function(a,b){return a.nodeName&amp;&amp;a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,c,d){var f,g=0,h=a.length,i=h===b||e.isFunction(a);if(d){if(i){for(f in a)if(c.apply(a[f],d)===!1)break}else for(;g&lt;h;)if(c.apply(a[g++],d)===!1)break}else if(i){for(f in a)if(c.call(a[f],f,a[f])===!1)break}else for(;g&lt;h;)if(c.call(a[g],g,a[g++])===!1)break;return a},trim:H?function(a){return a==null?"":H.call(a)}:function(a){return a==null?"":(a+"").replace(k,"").replace(l,"")},makeArray:function(a,b){var c=b||[];if(a!=null){var d=e.type(a);a.length==null||d==="string"||d==="function"||d==="regexp"||e.isWindow(a)?F.call(c,a):e.merge(c,a)}return c},inArray:function(a,b){if(!b)return-1;if(I)return I.call(b,a);for(var c=0,d=b.length;c&lt;d;c++)if(b[c]===a)return c;return-1},merge:function(a,c){var d=a.length,e=0;if(typeof c.length=="number")for(var f=c.length;e&lt;f;e++)a[d++]=c[e];else while(c[e]!==b)a[d++]=c[e++];a.length=d;return a},grep:function(a,b,c){var d=[],e;c=!!c;for(var f=0,g=a.length;f&lt;g;f++)e=!!b(a[f],f),c!==e&amp;&amp;d.push(a[f]);return d},map:function(a,c,d){var f,g,h=[],i=0,j=a.length,k=a instanceof e||j!==b&amp;&amp;typeof j=="number"&amp;&amp;(j&gt;0&amp;&amp;a[0]&amp;&amp;a[j-1]||j===0||e.isArray(a));if(k)for(;i&lt;j;i++)f=c(a[i],i,d),f!=null&amp;&amp;(h[h.length]=f);else for(g in a)f=c(a[g],g,d),f!=null&amp;&amp;(h[h.length]=f);return h.concat.apply([],h)},guid:1,proxy:function(a,c){if(typeof c=="string"){var d=a[c];c=a,a=d}if(!e.isFunction(a))return b;var f=G.call(arguments,2),g=function(){return a.apply(c,f.concat(G.call(arguments)))};g.guid=a.guid=a.guid||g.guid||e.guid++;return g},access:function(a,c,d,f,g,h){var i=a.length;if(typeof c=="object"){for(var j in c)e.access(a,j,c[j],f,g,d);return a}if(d!==b){f=!h&amp;&amp;f&amp;&amp;e.isFunction(d);for(var k=0;k&lt;i;k++)g(a[k],c,f?d.call(a[k],k,g(a[k],c)):d,h);return a}return i?g(a[0],c):b},now:function(){return(new Date).getTime()},uaMatch:function(a){a=a.toLowerCase();var b=s.exec(a)||t.exec(a)||u.exec(a)||a.indexOf("compatible")&lt;0&amp;&amp;v.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},sub:function(){function a(b,c){return new a.fn.init(b,c)}e.extend(!0,a,this),a.superclass=this,a.fn=a.prototype=this(),a.fn.constructor=a,a.sub=this.sub,a.fn.init=function(d,f){f&amp;&amp;f instanceof e&amp;&amp;!(f instanceof a)&amp;&amp;(f=a(f));return e.fn.init.call(this,d,f,b)},a.fn.init.prototype=a.fn;var b=a(c);return a},browser:{}}),e.each("Boolean Number String Function Array Date RegExp Object".split(" "),function(a,b){J["[object "+b+"]"]=b.toLowerCase()}),A=e.uaMatch(z),A.browser&amp;&amp;(e.browser[A.browser]=!0,e.browser.version=A.version),e.browser.webkit&amp;&amp;(e.browser.safari=!0),j.test(" ")&amp;&amp;(k=/^[\s\xA0]+/,l=/[\s\xA0]+$/),h=e(c),c.addEventListener?C=function(){c.removeEventListener("DOMContentLoaded",C,!1),e.ready()}:c.attachEvent&amp;&amp;(C=function(){c.readyState==="complete"&amp;&amp;(c.detachEvent("onreadystatechange",C),e.ready())});return e}(),g="done fail isResolved isRejected promise then always pipe".split(" "),h=[].slice;f.extend({_Deferred:function(){var a=[],b,c,d,e={done:function(){if(!d){var c=arguments,g,h,i,j,k;b&amp;&amp;(k=b,b=0);for(g=0,h=c.length;g&lt;h;g++)i=c[g],j=f.type(i),j==="array"?e.done.apply(e,i):j==="function"&amp;&amp;a.push(i);k&amp;&amp;e.resolveWith(k[0],k[1])}return this},resolveWith:function(e,f){if(!d&amp;&amp;!b&amp;&amp;!c){f=f||[],c=1;try{while(a[0])a.shift().apply(e,f)}finally{b=[e,f],c=0}}return this},resolve:function(){e.resolveWith(this,arguments);return this},isResolved:function(){return!!c||!!b},cancel:function(){d=1,a=[];return this}};return e},Deferred:function(a){var b=f._Deferred(),c=f._Deferred(),d;f.extend(b,{then:function(a,c){b.done(a).fail(c);return this},always:function(){return b.done.apply(b,arguments).fail.apply(this,arguments)},fail:c.done,rejectWith:c.resolveWith,reject:c.resolve,isRejected:c.isResolved,pipe:function(a,c){return f.Deferred(function(d){f.each({done:[a,"resolve"],fail:[c,"reject"]},function(a,c){var e=c[0],g=c[1],h;f.isFunction(e)?b[a](function(){h=e.apply(this,arguments),h&amp;&amp;f.isFunction(h.promise)?h.promise().then(d.resolve,d.reject):d[g+"With"](this===b?d:this,[h])}):b[a](d[g])})}).promise()},promise:function(a){if(a==null){if(d)return d;d=a={}}var c=g.length;while(c--)a[g[c]]=b[g[c]];return a}}),b.done(c.cancel).fail(b.cancel),delete b.cancel,a&amp;&amp;a.call(b,b);return b},when:function(a){function i(a){return function(c){b[a]=arguments.length&gt;1?h.call(arguments,0):c,--e||g.resolveWith(g,h.call(b,0))}}var b=arguments,c=0,d=b.length,e=d,g=d&lt;=1&amp;&amp;a&amp;&amp;f.isFunction(a.promise)?a:f.Deferred();if(d&gt;1){for(;c&lt;d;c++)b[c]&amp;&amp;f.isFunction(b[c].promise)?b[c].promise().then(i(c),g.reject):--e;e||g.resolveWith(g,b)}else g!==a&amp;&amp;g.resolveWith(g,d?[a]:[]);return g.promise()}}),f.support=function(){var a=c.createElement("div"),b=c.documentElement,d,e,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u;a.setAttribute("className","t"),a.innerHTML="   &lt;link/&gt;&lt;table&gt;&lt;/table&gt;&lt;a href='/a' style='top:1px;float:left;opacity:.55;'&gt;a&lt;/a&gt;&lt;input type='checkbox'/&gt;",d=a.getElementsByTagName("*"),e=a.getElementsByTagName("a")[0];if(!d||!d.length||!e)return{};g=c.createElement("select"),h=g.appendChild(c.createElement("option")),i=a.getElementsByTagName("input")[0],k={leadingWhitespace:a.firstChild.nodeType===3,tbody:!a.getElementsByTagName("tbody").length,htmlSerialize:!!a.getElementsByTagName("link").length,style:/top/.test(e.getAttribute("style")),hrefNormalized:e.getAttribute("href")==="/a",opacity:/^0.55$/.test(e.style.opacity),cssFloat:!!e.style.cssFloat,checkOn:i.value==="on",optSelected:h.selected,getSetAttribute:a.className!=="t",submitBubbles:!0,changeBubbles:!0,focusinBubbles:!1,deleteExpando:!0,noCloneEvent:!0,inlineBlockNeedsLayout:!1,shrinkWrapBlocks:!1,reliableMarginRight:!0},i.checked=!0,k.noCloneChecked=i.cloneNode(!0).checked,g.disabled=!0,k.optDisabled=!h.disabled;try{delete a.test}catch(v){k.deleteExpando=!1}!a.addEventListener&amp;&amp;a.attachEvent&amp;&amp;a.fireEvent&amp;&amp;(a.attachEvent("onclick",function(){k.noCloneEvent=!1}),a.cloneNode(!0).fireEvent("onclick")),i=c.createElement("input"),i.value="t",i.setAttribute("type","radio"),k.radioValue=i.value==="t",i.setAttribute("checked","checked"),a.appendChild(i),l=c.createDocumentFragment(),l.appendChild(a.firstChild),k.checkClone=l.cloneNode(!0).cloneNode(!0).lastChild.checked,a.innerHTML="",a.style.width=a.style.paddingLeft="1px",m=c.getElementsByTagName("body")[0],o=c.createElement(m?"div":"body"),p={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},m&amp;&amp;f.extend(p,{position:"absolute",left:"-1000px",top:"-1000px"});for(t in p)o.style[t]=p[t];o.appendChild(a),n=m||b,n.insertBefore(o,n.firstChild),k.appendChecked=i.checked,k.boxModel=a.offsetWidth===2,"zoom"in a.style&amp;&amp;(a.style.display="inline",a.style.zoom=1,k.inlineBlockNeedsLayout=a.offsetWidth===2,a.style.display="",a.innerHTML="&lt;div style='width:4px;'&gt;&lt;/div&gt;",k.shrinkWrapBlocks=a.offsetWidth!==2),a.innerHTML="&lt;table&gt;&lt;tr&gt;&lt;td style='padding:0;border:0;display:none'&gt;&lt;/td&gt;&lt;td&gt;t&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;",q=a.getElementsByTagName("td"),u=q[0].offsetHeight===0,q[0].style.display="",q[1].style.display="none",k.reliableHiddenOffsets=u&amp;&amp;q[0].offsetHeight===0,a.innerHTML="",c.defaultView&amp;&amp;c.defaultView.getComputedStyle&amp;&amp;(j=c.createElement("div"),j.style.width="0",j.style.marginRight="0",a.appendChild(j),k.reliableMarginRight=(parseInt((c.defaultView.getComputedStyle(j,null)||{marginRight:0}).marginRight,10)||0)===0),o.innerHTML="",n.removeChild(o);if(a.attachEvent)for(t in{submit:1,change:1,focusin:1})s="on"+t,u=s in a,u||(a.setAttribute(s,"return;"),u=typeof a[s]=="function"),k[t+"Bubbles"]=u;o=l=g=h=m=j=a=i=null;return k}(),f.boxModel=f.support.boxModel;var i=/^(?:\{.*\}|\[.*\])$/,j=/([A-Z])/g;f.extend({cache:{},uuid:0,expando:"jQuery"+(f.fn.jquery+Math.random()).replace(/\D/g,""),noData:{embed:!0,object:"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",applet:!0},hasData:function(a){a=a.nodeType?f.cache[a[f.expando]]:a[f.expando];return!!a&amp;&amp;!l(a)},data:function(a,c,d,e){if(!!f.acceptData(a)){var g,h,i=f.expando,j=typeof c=="string",k=a.nodeType,l=k?f.cache:a,m=k?a[f.expando]:a[f.expando]&amp;&amp;f.expando;if((!m||e&amp;&amp;m&amp;&amp;l[m]&amp;&amp;!l[m][i])&amp;&amp;j&amp;&amp;d===b)return;m||(k?a[f.expando]=m=++f.uuid:m=f.expando),l[m]||(l[m]={},k||(l[m].toJSON=f.noop));if(typeof c=="object"||typeof c=="function")e?l[m][i]=f.extend(l[m][i],c):l[m]=f.extend(l[m],c);g=l[m],e&amp;&amp;(g[i]||(g[i]={}),g=g[i]),d!==b&amp;&amp;(g[f.camelCase(c)]=d);if(c==="events"&amp;&amp;!g[c])return g[i]&amp;&amp;g[i].events;j?(h=g[c],h==null&amp;&amp;(h=g[f.camelCase(c)])):h=g;return h}},removeData:function(a,b,c){if(!!f.acceptData(a)){var d,e=f.expando,g=a.nodeType,h=g?f.cache:a,i=g?a[f.expando]:f.expando;if(!h[i])return;if(b){d=c?h[i][e]:h[i];if(d){d[b]||(b=f.camelCase(b)),delete d[b];if(!l(d))return}}if(c){delete h[i][e];if(!l(h[i]))return}var j=h[i][e];f.support.deleteExpando||!h.setInterval?delete h[i]:h[i]=null,j?(h[i]={},g||(h[i].toJSON=f.noop),h[i][e]=j):g&amp;&amp;(f.support.deleteExpando?delete a[f.expando]:a.removeAttribute?a.removeAttribute(f.expando):a[f.expando]=null)}},_data:function(a,b,c){return f.data(a,b,c,!0)},acceptData:function(a){if(a.nodeName){var b=f.noData[a.nodeName.toLowerCase()];if(b)return b!==!0&amp;&amp;a.getAttribute("classid")===b}return!0}}),f.fn.extend({data:function(a,c){var d=null;if(typeof a=="undefined"){if(this.length){d=f.data(this[0]);if(this[0].nodeType===1){var e=this[0].attributes,g;for(var h=0,i=e.length;h&lt;i;h++)g=e[h].name,g.indexOf("data-")===0&amp;&amp;(g=f.camelCase(g.substring(5)),k(this[0],g,d[g]))}}return d}if(typeof a=="object")return this.each(function(){f.data(this,a)});var j=a.split(".");j[1]=j[1]?"."+j[1]:"";if(c===b){d=this.triggerHandler("getData"+j[1]+"!",[j[0]]),d===b&amp;&amp;this.length&amp;&amp;(d=f.data(this[0],a),d=k(this[0],a,d));return d===b&amp;&amp;j[1]?this.data(j[0]):d}return this.each(function(){var b=f(this),d=[j[0],c];b.triggerHandler("setData"+j[1]+"!",d),f.data(this,a,c),b.triggerHandler("changeData"+j[1]+"!",d)})},removeData:function(a){return this.each(function(){f.removeData(this,a)})}}),f.extend({_mark:function(a,c){a&amp;&amp;(c=(c||"fx")+"mark",f.data(a,c,(f.data(a,c,b,!0)||0)+1,!0))},_unmark:function(a,c,d){a!==!0&amp;&amp;(d=c,c=a,a=!1);if(c){d=d||"fx";var e=d+"mark",g=a?0:(f.data(c,e,b,!0)||1)-1;g?f.data(c,e,g,!0):(f.removeData(c,e,!0),m(c,d,"mark"))}},queue:function(a,c,d){if(a){c=(c||"fx")+"queue";var e=f.data(a,c,b,!0);d&amp;&amp;(!e||f.isArray(d)?e=f.data(a,c,f.makeArray(d),!0):e.push(d));return e||[]}},dequeue:function(a,b){b=b||"fx";var c=f.queue(a,b),d=c.shift(),e;d==="inprogress"&amp;&amp;(d=c.shift()),d&amp;&amp;(b==="fx"&amp;&amp;c.unshift("inprogress"),d.call(a,function(){f.dequeue(a,b)})),c.length||(f.removeData(a,b+"queue",!0),m(a,b,"queue"))}}),f.fn.extend({queue:function(a,c){typeof a!="string"&amp;&amp;(c=a,a="fx");if(c===b)return f.queue(this[0],a);return this.each(function(){var b=f.queue(this,a,c);a==="fx"&amp;&amp;b[0]!=="inprogress"&amp;&amp;f.dequeue(this,a)})},dequeue:function(a){return this.each(function(){f.dequeue(this,a)})},delay:function(a,b){a=f.fx?f.fx.speeds[a]||a:a,b=b||"fx";return this.queue(b,function(){var c=this;setTimeout(function(){f.dequeue(c,b)},a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,c){function m(){--h||d.resolveWith(e,[e])}typeof a!="string"&amp;&amp;(c=a,a=b),a=a||"fx";var d=f.Deferred(),e=this,g=e.length,h=1,i=a+"defer",j=a+"queue",k=a+"mark",l;while(g--)if(l=f.data(e[g],i,b,!0)||(f.data(e[g],j,b,!0)||f.data(e[g],k,b,!0))&amp;&amp;f.data(e[g],i,f._Deferred(),!0))h++,l.done(m);m();return d.promise()}});var n=/[\n\t\r]/g,o=/\s+/,p=/\r/g,q=/^(?:button|input)$/i,r=/^(?:button|input|object|select|textarea)$/i,s=/^a(?:rea)?$/i,t=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,u,v;f.fn.extend({attr:function(a,b){return f.access(this,a,b,!0,f.attr)},removeAttr:function(a){return this.each(function(){f.removeAttr(this,a)})},prop:function(a,b){return f.access(this,a,b,!0,f.prop)},removeProp:function(a){a=f.propFix[a]||a;return this.each(function(){try{this[a]=b,delete this[a]}catch(c){}})},addClass:function(a){var b,c,d,e,g,h,i;if(f.isFunction(a))return this.each(function(b){f(this).addClass(a.call(this,b,this.className))});if(a&amp;&amp;typeof a=="string"){b=a.split(o);for(c=0,d=this.length;c&lt;d;c++){e=this[c];if(e.nodeType===1)if(!e.className&amp;&amp;b.length===1)e.className=a;else{g=" "+e.className+" ";for(h=0,i=b.length;h&lt;i;h++)~g.indexOf(" "+b[h]+" ")||(g+=b[h]+" ");e.className=f.trim(g)}}}return this},removeClass:function(a){var c,d,e,g,h,i,j;if(f.isFunction(a))return this.each(function(b){f(this).removeClass(a.call(this,b,this.className))});if(a&amp;&amp;typeof a=="string"||a===b){c=(a||"").split(o);for(d=0,e=this.length;d&lt;e;d++){g=this[d];if(g.nodeType===1&amp;&amp;g.className)if(a){h=(" "+g.className+" ").replace(n," ");for(i=0,j=c.length;i&lt;j;i++)h=h.replace(" "+c[i]+" "," ");g.className=f.trim(h)}else g.className=""}}return this},toggleClass:function(a,b){var c=typeof a,d=typeof b=="boolean";if(f.isFunction(a))return this.each(function(c){f(this).toggleClass(a.call(this,c,this.className,b),b)});return this.each(function(){if(c==="string"){var e,g=0,h=f(this),i=b,j=a.split(o);while(e=j[g++])i=d?i:!h.hasClass(e),h[i?"addClass":"removeClass"](e)}else if(c==="undefined"||c==="boolean")this.className&amp;&amp;f._data(this,"__className__",this.className),this.className=this.className||a===!1?"":f._data(this,"__className__")||""})},hasClass:function(a){var b=" "+a+" ";for(var c=0,d=this.length;c&lt;d;c++)if(this[c].nodeType===1&amp;&amp;(" "+this[c].className+" ").replace(n," ").indexOf(b)&gt;-1)return!0;return!1},val:function(a){var c,d,e=this[0];if(!arguments.length){if(e){c=f.valHooks[e.nodeName.toLowerCase()]||f.valHooks[e.type];if(c&amp;&amp;"get"in c&amp;&amp;(d=c.get(e,"value"))!==b)return d;d=e.value;return typeof d=="string"?d.replace(p,""):d==null?"":d}return b}var g=f.isFunction(a);return this.each(function(d){var e=f(this),h;if(this.nodeType===1){g?h=a.call(this,d,e.val()):h=a,h==null?h="":typeof h=="number"?h+="":f.isArray(h)&amp;&amp;(h=f.map(h,function(a){return a==null?"":a+""})),c=f.valHooks[this.nodeName.toLowerCase()]||f.valHooks[this.type];if(!c||!("set"in c)||c.set(this,h,"value")===b)this.value=h}})}}),f.extend({valHooks:{option:{get:function(a){var b=a.attributes.value;return!b||b.specified?a.value:a.text}},select:{get:function(a){var b,c=a.selectedIndex,d=[],e=a.options,g=a.type==="select-one";if(c&lt;0)return null;for(var h=g?c:0,i=g?c+1:e.length;h&lt;i;h++){var j=e[h];if(j.selected&amp;&amp;(f.support.optDisabled?!j.disabled:j.getAttribute("disabled")===null)&amp;&amp;(!j.parentNode.disabled||!f.nodeName(j.parentNode,"optgroup"))){b=f(j).val();if(g)return b;d.push(b)}}if(g&amp;&amp;!d.length&amp;&amp;e.length)return f(e[c]).val();return d},set:function(a,b){var c=f.makeArray(b);f(a).find("option").each(function(){this.selected=f.inArray(f(this).val(),c)&gt;=0}),c.length||(a.selectedIndex=-1);return c}}},attrFn:{val:!0,css:!0,html:!0,text:!0,data:!0,width:!0,height:!0,offset:!0},attrFix:{tabindex:"tabIndex"},attr:function(a,c,d,e){var g=a.nodeType;if(!a||g===3||g===8||g===2)return b;if(e&amp;&amp;c in f.attrFn)return f(a)[c](d);if(!("getAttribute"in a))return f.prop(a,c,d);var h,i,j=g!==1||!f.isXMLDoc(a);j&amp;&amp;(c=f.attrFix[c]||c,i=f.attrHooks[c],i||(t.test(c)?i=v:u&amp;&amp;(i=u)));if(d!==b){if(d===null){f.removeAttr(a,c);return b}if(i&amp;&amp;"set"in i&amp;&amp;j&amp;&amp;(h=i.set(a,d,c))!==b)return h;a.setAttribute(c,""+d);return d}if(i&amp;&amp;"get"in i&amp;&amp;j&amp;&amp;(h=i.get(a,c))!==null)return h;h=a.getAttribute(c);return h===null?b:h},removeAttr:function(a,b){var c;a.nodeType===1&amp;&amp;(b=f.attrFix[b]||b,f.attr(a,b,""),a.removeAttribute(b),t.test(b)&amp;&amp;(c=f.propFix[b]||b)in a&amp;&amp;(a[c]=!1))},attrHooks:{type:{set:function(a,b){if(q.test(a.nodeName)&amp;&amp;a.parentNode)f.error("type property can't be changed");else if(!f.support.radioValue&amp;&amp;b==="radio"&amp;&amp;f.nodeName(a,"input")){var c=a.value;a.setAttribute("type",b),c&amp;&amp;(a.value=c);return b}}},value:{get:function(a,b){if(u&amp;&amp;f.nodeName(a,"button"))return u.get(a,b);return b in a?a.value:null},set:function(a,b,c){if(u&amp;&amp;f.nodeName(a,"button"))return u.set(a,b,c);a.value=b}}},propFix:{tabindex:"tabIndex",readonly:"readOnly","for":"htmlFor","class":"className",maxlength:"maxLength",cellspacing:"cellSpacing",cellpadding:"cellPadding",rowspan:"rowSpan",colspan:"colSpan",usemap:"useMap",frameborder:"frameBorder",contenteditable:"contentEditable"},prop:function(a,c,d){var e=a.nodeType;if(!a||e===3||e===8||e===2)return b;var g,h,i=e!==1||!f.isXMLDoc(a);i&amp;&amp;(c=f.propFix[c]||c,h=f.propHooks[c]);return d!==b?h&amp;&amp;"set"in h&amp;&amp;(g=h.set(a,d,c))!==b?g:a[c]=d:h&amp;&amp;"get"in h&amp;&amp;(g=h.get(a,c))!==null?g:a[c]},propHooks:{tabIndex:{get:function(a){var c=a.getAttributeNode("tabindex");return c&amp;&amp;c.specified?parseInt(c.value,10):r.test(a.nodeName)||s.test(a.nodeName)&amp;&amp;a.href?0:b}}}}),f.attrHooks.tabIndex=f.propHooks.tabIndex,v={get:function(a,c){var d;return f.prop(a,c)===!0||(d=a.getAttributeNode(c))&amp;&amp;d.nodeValue!==!1?c.toLowerCase():b},set:function(a,b,c){var d;b===!1?f.removeAttr(a,c):(d=f.propFix[c]||c,d in a&amp;&amp;(a[d]=!0),a.setAttribute(c,c.toLowerCase()));return c}},f.support.getSetAttribute||(u=f.valHooks.button={get:function(a,c){var d;d=a.getAttributeNode(c);return d&amp;&amp;d.nodeValue!==""?d.nodeValue:b},set:function(a,b,d){var e=a.getAttributeNode(d);e||(e=c.createAttribute(d),a.setAttributeNode(e));return e.nodeValue=b+""}},f.each(["width","height"],function(a,b){f.attrHooks[b]=f.extend(f.attrHooks[b],{set:function(a,c){if(c===""){a.setAttribute(b,"auto");return c}}})})),f.support.hrefNormalized||f.each(["href","src","width","height"],function(a,c){f.attrHooks[c]=f.extend(f.attrHooks[c],{get:function(a){var d=a.getAttribute(c,2);return d===null?b:d}})}),f.support.style||(f.attrHooks.style={get:function(a){return a.style.cssText.toLowerCase()||b},set:function(a,b){return a.style.cssText=""+b}}),f.support.optSelected||(f.propHooks.selected=f.extend(f.propHooks.selected,{get:function(a){var b=a.parentNode;b&amp;&amp;(b.selectedIndex,b.parentNode&amp;&amp;b.parentNode.selectedIndex);return null}})),f.support.checkOn||f.each(["radio","checkbox"],function(){f.valHooks[this]={get:function(a){return a.getAttribute("value")===null?"on":a.value}}}),f.each(["radio","checkbox"],function(){f.valHooks[this]=f.extend(f.valHooks[this],{set:function(a,b){if(f.isArray(b))return a.checked=f.inArray(f(a).val(),b)&gt;=0}})});var w=/\.(.*)$/,x=/^(?:textarea|input|select)$/i,y=/\./g,z=/ /g,A=/[^\w\s.|`]/g,B=function(a){return a.replace(A,"\\$&amp;")};f.event={add:function(a,c,d,e){if(a.nodeType!==3&amp;&amp;a.nodeType!==8){if(d===!1)d=C;else if(!d)return;var g,h;d.handler&amp;&amp;(g=d,d=g.handler),d.guid||(d.guid=f.guid++);var i=f._data(a);if(!i)return;var j=i.events,k=i.handle;j||(i.events=j={}),k||(i.handle=k=function(a){return typeof f!="undefined"&amp;&amp;(!a||f.event.triggered!==a.type)?f.event.handle.apply(k.elem,arguments):b}),k.elem=a,c=c.split(" ");var l,m=0,n;while(l=c[m++]){h=g?f.extend({},g):{handler:d,data:e},l.indexOf(".")&gt;-1?(n=l.split("."),l=n.shift(),h.namespace=n.slice(0).sort().join(".")):(n=[],h.namespace=""),h.type=l,h.guid||(h.guid=d.guid);var o=j[l],p=f.event.special[l]||{};if(!o){o=j[l]=[];if(!p.setup||p.setup.call(a,e,n,k)===!1)a.addEventListener?a.addEventListener(l,k,!1):a.attachEvent&amp;&amp;a.attachEvent("on"+l,k)}p.add&amp;&amp;(p.add.call(a,h),h.handler.guid||(h.handler.guid=d.guid)),o.push(h),f.event.global[l]=!0}a=null}},global:{},remove:function(a,c,d,e){if(a.nodeType!==3&amp;&amp;a.nodeType!==8){d===!1&amp;&amp;(d=C);var g,h,i,j,k=0,l,m,n,o,p,q,r,s=f.hasData(a)&amp;&amp;f._data(a),t=s&amp;&amp;s.events;if(!s||!t)return;c&amp;&amp;c.type&amp;&amp;(d=c.handler,c=c.type);if(!c||typeof c=="string"&amp;&amp;c.charAt(0)==="."){c=c||"";for(h in t)f.event.remove(a,h+c);return}c=c.split(" ");while(h=c[k++]){r=h,q=null,l=h.indexOf(".")&lt;0,m=[],l||(m=h.split("."),h=m.shift(),n=new RegExp("(^|\\.)"+f.map(m.slice(0).sort(),B).join("\\.(?:.*\\.)?")+"(\\.|$)")),p=t[h];if(!p)continue;if(!d){for(j=0;j&lt;p.length;j++){q=p[j];if(l||n.test(q.namespace))f.event.remove(a,r,q.handler,j),p.splice(j--,1)}continue}o=f.event.special[h]||{};for(j=e||0;j&lt;p.length;j++){q=p[j];if(d.guid===q.guid){if(l||n.test(q.namespace))e==null&amp;&amp;p.splice(j--,1),o.remove&amp;&amp;o.remove.call(a,q);if(e!=null)break}}if(p.length===0||e!=null&amp;&amp;p.length===1)(!o.teardown||o.teardown.call(a,m)===!1)&amp;&amp;f.removeEvent(a,h,s.handle),g=null,delete
t[h]}if(f.isEmptyObject(t)){var u=s.handle;u&amp;&amp;(u.elem=null),delete s.events,delete s.handle,f.isEmptyObject(s)&amp;&amp;f.removeData(a,b,!0)}}},customEvent:{getData:!0,setData:!0,changeData:!0},trigger:function(c,d,e,g){var h=c.type||c,i=[],j;h.indexOf("!")&gt;=0&amp;&amp;(h=h.slice(0,-1),j=!0),h.indexOf(".")&gt;=0&amp;&amp;(i=h.split("."),h=i.shift(),i.sort());if(!!e&amp;&amp;!f.event.customEvent[h]||!!f.event.global[h]){c=typeof c=="object"?c[f.expando]?c:new f.Event(h,c):new f.Event(h),c.type=h,c.exclusive=j,c.namespace=i.join("."),c.namespace_re=new RegExp("(^|\\.)"+i.join("\\.(?:.*\\.)?")+"(\\.|$)");if(g||!e)c.preventDefault(),c.stopPropagation();if(!e){f.each(f.cache,function(){var a=f.expando,b=this[a];b&amp;&amp;b.events&amp;&amp;b.events[h]&amp;&amp;f.event.trigger(c,d,b.handle.elem)});return}if(e.nodeType===3||e.nodeType===8)return;c.result=b,c.target=e,d=d!=null?f.makeArray(d):[],d.unshift(c);var k=e,l=h.indexOf(":")&lt;0?"on"+h:"";do{var m=f._data(k,"handle");c.currentTarget=k,m&amp;&amp;m.apply(k,d),l&amp;&amp;f.acceptData(k)&amp;&amp;k[l]&amp;&amp;k[l].apply(k,d)===!1&amp;&amp;(c.result=!1,c.preventDefault()),k=k.parentNode||k.ownerDocument||k===c.target.ownerDocument&amp;&amp;a}while(k&amp;&amp;!c.isPropagationStopped());if(!c.isDefaultPrevented()){var n,o=f.event.special[h]||{};if((!o._default||o._default.call(e.ownerDocument,c)===!1)&amp;&amp;(h!=="click"||!f.nodeName(e,"a"))&amp;&amp;f.acceptData(e)){try{l&amp;&amp;e[h]&amp;&amp;(n=e[l],n&amp;&amp;(e[l]=null),f.event.triggered=h,e[h]())}catch(p){}n&amp;&amp;(e[l]=n),f.event.triggered=b}}return c.result}},handle:function(c){c=f.event.fix(c||a.event);var d=((f._data(this,"events")||{})[c.type]||[]).slice(0),e=!c.exclusive&amp;&amp;!c.namespace,g=Array.prototype.slice.call(arguments,0);g[0]=c,c.currentTarget=this;for(var h=0,i=d.length;h&lt;i;h++){var j=d[h];if(e||c.namespace_re.test(j.namespace)){c.handler=j.handler,c.data=j.data,c.handleObj=j;var k=j.handler.apply(this,g);k!==b&amp;&amp;(c.result=k,k===!1&amp;&amp;(c.preventDefault(),c.stopPropagation()));if(c.isImmediatePropagationStopped())break}}return c.result},props:"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),fix:function(a){if(a[f.expando])return a;var d=a;a=f.Event(d);for(var e=this.props.length,g;e;)g=this.props[--e],a[g]=d[g];a.target||(a.target=a.srcElement||c),a.target.nodeType===3&amp;&amp;(a.target=a.target.parentNode),!a.relatedTarget&amp;&amp;a.fromElement&amp;&amp;(a.relatedTarget=a.fromElement===a.target?a.toElement:a.fromElement);if(a.pageX==null&amp;&amp;a.clientX!=null){var h=a.target.ownerDocument||c,i=h.documentElement,j=h.body;a.pageX=a.clientX+(i&amp;&amp;i.scrollLeft||j&amp;&amp;j.scrollLeft||0)-(i&amp;&amp;i.clientLeft||j&amp;&amp;j.clientLeft||0),a.pageY=a.clientY+(i&amp;&amp;i.scrollTop||j&amp;&amp;j.scrollTop||0)-(i&amp;&amp;i.clientTop||j&amp;&amp;j.clientTop||0)}a.which==null&amp;&amp;(a.charCode!=null||a.keyCode!=null)&amp;&amp;(a.which=a.charCode!=null?a.charCode:a.keyCode),!a.metaKey&amp;&amp;a.ctrlKey&amp;&amp;(a.metaKey=a.ctrlKey),!a.which&amp;&amp;a.button!==b&amp;&amp;(a.which=a.button&amp;1?1:a.button&amp;2?3:a.button&amp;4?2:0);return a},guid:1e8,proxy:f.proxy,special:{ready:{setup:f.bindReady,teardown:f.noop},live:{add:function(a){f.event.add(this,M(a.origType,a.selector),f.extend({},a,{handler:L,guid:a.handler.guid}))},remove:function(a){f.event.remove(this,M(a.origType,a.selector),a)}},beforeunload:{setup:function(a,b,c){f.isWindow(this)&amp;&amp;(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&amp;&amp;(this.onbeforeunload=null)}}}},f.removeEvent=c.removeEventListener?function(a,b,c){a.removeEventListener&amp;&amp;a.removeEventListener(b,c,!1)}:function(a,b,c){a.detachEvent&amp;&amp;a.detachEvent("on"+b,c)},f.Event=function(a,b){if(!this.preventDefault)return new f.Event(a,b);a&amp;&amp;a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&amp;&amp;a.getPreventDefault()?D:C):this.type=a,b&amp;&amp;f.extend(this,b),this.timeStamp=f.now(),this[f.expando]=!0},f.Event.prototype={preventDefault:function(){this.isDefaultPrevented=D;var a=this.originalEvent;!a||(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){this.isPropagationStopped=D;var a=this.originalEvent;!a||(a.stopPropagation&amp;&amp;a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=D,this.stopPropagation()},isDefaultPrevented:C,isPropagationStopped:C,isImmediatePropagationStopped:C};var E=function(a){var b=a.relatedTarget,c=!1,d=a.type;a.type=a.data,b!==this&amp;&amp;(b&amp;&amp;(c=f.contains(this,b)),c||(f.event.handle.apply(this,arguments),a.type=d))},F=function(a){a.type=a.data,f.event.handle.apply(this,arguments)};f.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){f.event.special[a]={setup:function(c){f.event.add(this,b,c&amp;&amp;c.selector?F:E,a)},teardown:function(a){f.event.remove(this,b,a&amp;&amp;a.selector?F:E)}}}),f.support.submitBubbles||(f.event.special.submit={setup:function(a,b){if(!f.nodeName(this,"form"))f.event.add(this,"click.specialSubmit",function(a){var b=a.target,c=f.nodeName(b,"input")||f.nodeName(b,"button")?b.type:"";(c==="submit"||c==="image")&amp;&amp;f(b).closest("form").length&amp;&amp;J("submit",this,arguments)}),f.event.add(this,"keypress.specialSubmit",function(a){var b=a.target,c=f.nodeName(b,"input")||f.nodeName(b,"button")?b.type:"";(c==="text"||c==="password")&amp;&amp;f(b).closest("form").length&amp;&amp;a.keyCode===13&amp;&amp;J("submit",this,arguments)});else return!1},teardown:function(a){f.event.remove(this,".specialSubmit")}});if(!f.support.changeBubbles){var G,H=function(a){var b=f.nodeName(a,"input")?a.type:"",c=a.value;b==="radio"||b==="checkbox"?c=a.checked:b==="select-multiple"?c=a.selectedIndex&gt;-1?f.map(a.options,function(a){return a.selected}).join("-"):"":f.nodeName(a,"select")&amp;&amp;(c=a.selectedIndex);return c},I=function(c){var d=c.target,e,g;if(!!x.test(d.nodeName)&amp;&amp;!d.readOnly){e=f._data(d,"_change_data"),g=H(d),(c.type!=="focusout"||d.type!=="radio")&amp;&amp;f._data(d,"_change_data",g);if(e===b||g===e)return;if(e!=null||g)c.type="change",c.liveFired=b,f.event.trigger(c,arguments[1],d)}};f.event.special.change={filters:{focusout:I,beforedeactivate:I,click:function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(c==="radio"||c==="checkbox"||f.nodeName(b,"select"))&amp;&amp;I.call(this,a)},keydown:function(a){var b=a.target,c=f.nodeName(b,"input")?b.type:"";(a.keyCode===13&amp;&amp;!f.nodeName(b,"textarea")||a.keyCode===32&amp;&amp;(c==="checkbox"||c==="radio")||c==="select-multiple")&amp;&amp;I.call(this,a)},beforeactivate:function(a){var b=a.target;f._data(b,"_change_data",H(b))}},setup:function(a,b){if(this.type==="file")return!1;for(var c in G)f.event.add(this,c+".specialChange",G[c]);return x.test(this.nodeName)},teardown:function(a){f.event.remove(this,".specialChange");return x.test(this.nodeName)}},G=f.event.special.change.filters,G.focus=G.beforeactivate}f.support.focusinBubbles||f.each({focus:"focusin",blur:"focusout"},function(a,b){function e(a){var c=f.event.fix(a);c.type=b,c.originalEvent={},f.event.trigger(c,null,c.target),c.isDefaultPrevented()&amp;&amp;a.preventDefault()}var d=0;f.event.special[b]={setup:function(){d++===0&amp;&amp;c.addEventListener(a,e,!0)},teardown:function(){--d===0&amp;&amp;c.removeEventListener(a,e,!0)}}}),f.each(["bind","one"],function(a,c){f.fn[c]=function(a,d,e){var g;if(typeof a=="object"){for(var h in a)this[c](h,d,a[h],e);return this}if(arguments.length===2||d===!1)e=d,d=b;c==="one"?(g=function(a){f(this).unbind(a,g);return e.apply(this,arguments)},g.guid=e.guid||f.guid++):g=e;if(a==="unload"&amp;&amp;c!=="one")this.one(a,d,e);else for(var i=0,j=this.length;i&lt;j;i++)f.event.add(this[i],a,g,d);return this}}),f.fn.extend({unbind:function(a,b){if(typeof a=="object"&amp;&amp;!a.preventDefault)for(var c in a)this.unbind(c,a[c]);else for(var d=0,e=this.length;d&lt;e;d++)f.event.remove(this[d],a,b);return this},delegate:function(a,b,c,d){return this.live(b,c,d,a)},undelegate:function(a,b,c){return arguments.length===0?this.unbind("live"):this.die(b,null,c,a)},trigger:function(a,b){return this.each(function(){f.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return f.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||f.guid++,d=0,e=function(c){var e=(f.data(this,"lastToggle"+a.guid)||0)%d;f.data(this,"lastToggle"+a.guid,e+1),c.preventDefault();return b[e].apply(this,arguments)||!1};e.guid=c;while(d&lt;b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});var K={focus:"focusin",blur:"focusout",mouseenter:"mouseover",mouseleave:"mouseout"};f.each(["live","die"],function(a,c){f.fn[c]=function(a,d,e,g){var h,i=0,j,k,l,m=g||this.selector,n=g?this:f(this.context);if(typeof a=="object"&amp;&amp;!a.preventDefault){for(var o in a)n[c](o,d,a[o],m);return this}if(c==="die"&amp;&amp;!a&amp;&amp;g&amp;&amp;g.charAt(0)==="."){n.unbind(g);return this}if(d===!1||f.isFunction(d))e=d||C,d=b;a=(a||"").split(" ");while((h=a[i++])!=null){j=w.exec(h),k="",j&amp;&amp;(k=j[0],h=h.replace(w,""));if(h==="hover"){a.push("mouseenter"+k,"mouseleave"+k);continue}l=h,K[h]?(a.push(K[h]+k),h=h+k):h=(K[h]||h)+k;if(c==="live")for(var p=0,q=n.length;p&lt;q;p++)f.event.add(n[p],"live."+M(h,m),{data:d,selector:m,handler:e,origType:h,origHandler:e,preType:l});else n.unbind("live."+M(h,m),e)}return this}}),f.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error".split(" "),function(a,b){f.fn[b]=function(a,c){c==null&amp;&amp;(c=a,a=null);return arguments.length&gt;0?this.bind(b,a,c):this.trigger(b)},f.attrFn&amp;&amp;(f.attrFn[b]=!0)}),function(){function u(a,b,c,d,e,f){for(var g=0,h=d.length;g&lt;h;g++){var i=d[g];if(i){var j=!1;i=i[a];while(i){if(i.sizcache===c){j=d[i.sizset];break}if(i.nodeType===1){f||(i.sizcache=c,i.sizset=g);if(typeof b!="string"){if(i===b){j=!0;break}}else if(k.filter(b,[i]).length&gt;0){j=i;break}}i=i[a]}d[g]=j}}}function t(a,b,c,d,e,f){for(var g=0,h=d.length;g&lt;h;g++){var i=d[g];if(i){var j=!1;i=i[a];while(i){if(i.sizcache===c){j=d[i.sizset];break}i.nodeType===1&amp;&amp;!f&amp;&amp;(i.sizcache=c,i.sizset=g);if(i.nodeName.toLowerCase()===b){j=i;break}i=i[a]}d[g]=j}}}var a=/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ &gt;+~,(\[\\]+)+|[&gt;+~])(\s*,\s*)?((?:.|\r|\n)*)/g,d=0,e=Object.prototype.toString,g=!1,h=!0,i=/\\/g,j=/\W/;[0,0].sort(function(){h=!1;return 0});var k=function(b,d,f,g){f=f||[],d=d||c;var h=d;if(d.nodeType!==1&amp;&amp;d.nodeType!==9)return[];if(!b||typeof b!="string")return f;var i,j,n,o,q,r,s,t,u=!0,w=k.isXML(d),x=[],y=b;do{a.exec(""),i=a.exec(y);if(i){y=i[3],x.push(i[1]);if(i[2]){o=i[3];break}}}while(i);if(x.length&gt;1&amp;&amp;m.exec(b))if(x.length===2&amp;&amp;l.relative[x[0]])j=v(x[0]+x[1],d);else{j=l.relative[x[0]]?[d]:k(x.shift(),d);while(x.length)b=x.shift(),l.relative[b]&amp;&amp;(b+=x.shift()),j=v(b,j)}else{!g&amp;&amp;x.length&gt;1&amp;&amp;d.nodeType===9&amp;&amp;!w&amp;&amp;l.match.ID.test(x[0])&amp;&amp;!l.match.ID.test(x[x.length-1])&amp;&amp;(q=k.find(x.shift(),d,w),d=q.expr?k.filter(q.expr,q.set)[0]:q.set[0]);if(d){q=g?{expr:x.pop(),set:p(g)}:k.find(x.pop(),x.length===1&amp;&amp;(x[0]==="~"||x[0]==="+")&amp;&amp;d.parentNode?d.parentNode:d,w),j=q.expr?k.filter(q.expr,q.set):q.set,x.length&gt;0?n=p(j):u=!1;while(x.length)r=x.pop(),s=r,l.relative[r]?s=x.pop():r="",s==null&amp;&amp;(s=d),l.relative[r](n,s,w)}else n=x=[]}n||(n=j),n||k.error(r||b);if(e.call(n)==="[object Array]")if(!u)f.push.apply(f,n);else if(d&amp;&amp;d.nodeType===1)for(t=0;n[t]!=null;t++)n[t]&amp;&amp;(n[t]===!0||n[t].nodeType===1&amp;&amp;k.contains(d,n[t]))&amp;&amp;f.push(j[t]);else for(t=0;n[t]!=null;t++)n[t]&amp;&amp;n[t].nodeType===1&amp;&amp;f.push(j[t]);else p(n,f);o&amp;&amp;(k(o,h,f,g),k.uniqueSort(f));return f};k.uniqueSort=function(a){if(r){g=h,a.sort(r);if(g)for(var b=1;b&lt;a.length;b++)a[b]===a[b-1]&amp;&amp;a.splice(b--,1)}return a},k.matches=function(a,b){return k(a,null,null,b)},k.matchesSelector=function(a,b){return k(b,null,null,[a]).length&gt;0},k.find=function(a,b,c){var d;if(!a)return[];for(var e=0,f=l.order.length;e&lt;f;e++){var g,h=l.order[e];if(g=l.leftMatch[h].exec(a)){var j=g[1];g.splice(1,1);if(j.substr(j.length-1)!=="\\"){g[1]=(g[1]||"").replace(i,""),d=l.find[h](g,b,c);if(d!=null){a=a.replace(l.match[h],"");break}}}}d||(d=typeof b.getElementsByTagName!="undefined"?b.getElementsByTagName("*"):[]);return{set:d,expr:a}},k.filter=function(a,c,d,e){var f,g,h=a,i=[],j=c,m=c&amp;&amp;c[0]&amp;&amp;k.isXML(c[0]);while(a&amp;&amp;c.length){for(var n in l.filter)if((f=l.leftMatch[n].exec(a))!=null&amp;&amp;f[2]){var o,p,q=l.filter[n],r=f[1];g=!1,f.splice(1,1);if(r.substr(r.length-1)==="\\")continue;j===i&amp;&amp;(i=[]);if(l.preFilter[n]){f=l.preFilter[n](f,j,d,i,e,m);if(!f)g=o=!0;else if(f===!0)continue}if(f)for(var s=0;(p=j[s])!=null;s++)if(p){o=q(p,f,s,j);var t=e^!!o;d&amp;&amp;o!=null?t?g=!0:j[s]=!1:t&amp;&amp;(i.push(p),g=!0)}if(o!==b){d||(j=i),a=a.replace(l.match[n],"");if(!g)return[];break}}if(a===h)if(g==null)k.error(a);else break;h=a}return j},k.error=function(a){throw"Syntax error, unrecognized expression: "+a};var l=k.selectors={order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,CLASS:/\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,NAME:/\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,PSEUDO:/:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},leftMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:function(a){return a.getAttribute("href")},type:function(a){return a.getAttribute("type")}},relative:{"+":function(a,b){var c=typeof b=="string",d=c&amp;&amp;!j.test(b),e=c&amp;&amp;!d;d&amp;&amp;(b=b.toLowerCase());for(var f=0,g=a.length,h;f&lt;g;f++)if(h=a[f]){while((h=h.previousSibling)&amp;&amp;h.nodeType!==1);a[f]=e||h&amp;&amp;h.nodeName.toLowerCase()===b?h||!1:h===b}e&amp;&amp;k.filter(b,a,!0)},"&gt;":function(a,b){var c,d=typeof b=="string",e=0,f=a.length;if(d&amp;&amp;!j.test(b)){b=b.toLowerCase();for(;e&lt;f;e++){c=a[e];if(c){var g=c.parentNode;a[e]=g.nodeName.toLowerCase()===b?g:!1}}}else{for(;e&lt;f;e++)c=a[e],c&amp;&amp;(a[e]=d?c.parentNode:c.parentNode===b);d&amp;&amp;k.filter(b,a,!0)}},"":function(a,b,c){var e,f=d++,g=u;typeof b=="string"&amp;&amp;!j.test(b)&amp;&amp;(b=b.toLowerCase(),e=b,g=t),g("parentNode",b,f,a,e,c)},"~":function(a,b,c){var e,f=d++,g=u;typeof b=="string"&amp;&amp;!j.test(b)&amp;&amp;(b=b.toLowerCase(),e=b,g=t),g("previousSibling",b,f,a,e,c)}},find:{ID:function(a,b,c){if(typeof b.getElementById!="undefined"&amp;&amp;!c){var d=b.getElementById(a[1]);return d&amp;&amp;d.parentNode?[d]:[]}},NAME:function(a,b){if(typeof b.getElementsByName!="undefined"){var c=[],d=b.getElementsByName(a[1]);for(var e=0,f=d.length;e&lt;f;e++)d[e].getAttribute("name")===a[1]&amp;&amp;c.push(d[e]);return c.length===0?null:c}},TAG:function(a,b){if(typeof b.getElementsByTagName!="undefined")return b.getElementsByTagName(a[1])}},preFilter:{CLASS:function(a,b,c,d,e,f){a=" "+a[1].replace(i,"")+" ";if(f)return a;for(var g=0,h;(h=b[g])!=null;g++)h&amp;&amp;(e^(h.className&amp;&amp;(" "+h.className+" ").replace(/[\t\n\r]/g," ").indexOf(a)&gt;=0)?c||d.push(h):c&amp;&amp;(b[g]=!1));return!1},ID:function(a){return a[1].replace(i,"")},TAG:function(a,b){return a[1].replace(i,"").toLowerCase()},CHILD:function(a){if(a[1]==="nth"){a[2]||k.error(a[0]),a[2]=a[2].replace(/^\+|\s*/g,"");var b=/(-?)(\d*)(?:n([+\-]?\d*))?/.exec(a[2]==="even"&amp;&amp;"2n"||a[2]==="odd"&amp;&amp;"2n+1"||!/\D/.test(a[2])&amp;&amp;"0n+"+a[2]||a[2]);a[2]=b[1]+(b[2]||1)-0,a[3]=b[3]-0}else a[2]&amp;&amp;k.error(a[0]);a[0]=d++;return a},ATTR:function(a,b,c,d,e,f){var g=a[1]=a[1].replace(i,"");!f&amp;&amp;l.attrMap[g]&amp;&amp;(a[1]=l.attrMap[g]),a[4]=(a[4]||a[5]||"").replace(i,""),a[2]==="~="&amp;&amp;(a[4]=" "+a[4]+" ");return a},PSEUDO:function(b,c,d,e,f){if(b[1]==="not")if((a.exec(b[3])||"").length&gt;1||/^\w/.test(b[3]))b[3]=k(b[3],null,null,c);else{var g=k.filter(b[3],c,d,!0^f);d||e.push.apply(e,g);return!1}else if(l.match.POS.test(b[0])||l.match.CHILD.test(b[0]))return!0;return b},POS:function(a){a.unshift(!0);return a}},filters:{enabled:function(a){return a.disabled===!1&amp;&amp;a.type!=="hidden"},disabled:function(a){return a.disabled===!0},checked:function(a){return a.checked===!0},selected:function(a){a.parentNode&amp;&amp;a.parentNode.selectedIndex;return a.selected===!0},parent:function(a){return!!a.firstChild},empty:function(a){return!a.firstChild},has:function(a,b,c){return!!k(c[3],a).length},header:function(a){return/h\d/i.test(a.nodeName)},text:function(a){var b=a.getAttribute("type"),c=a.type;return a.nodeName.toLowerCase()==="input"&amp;&amp;"text"===c&amp;&amp;(b===c||b===null)},radio:function(a){return a.nodeName.toLowerCase()==="input"&amp;&amp;"radio"===a.type},checkbox:function(a){return a.nodeName.toLowerCase()==="input"&amp;&amp;"checkbox"===a.type},file:function(a){return a.nodeName.toLowerCase()==="input"&amp;&amp;"file"===a.type},password:function(a){return a.nodeName.toLowerCase()==="input"&amp;&amp;"password"===a.type},submit:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&amp;&amp;"submit"===a.type},image:function(a){return a.nodeName.toLowerCase()==="input"&amp;&amp;"image"===a.type},reset:function(a){var b=a.nodeName.toLowerCase();return(b==="input"||b==="button")&amp;&amp;"reset"===a.type},button:function(a){var b=a.nodeName.toLowerCase();return b==="input"&amp;&amp;"button"===a.type||b==="button"},input:function(a){return/input|select|textarea|button/i.test(a.nodeName)},focus:function(a){return a===a.ownerDocument.activeElement}},setFilters:{first:function(a,b){return b===0},last:function(a,b,c,d){return b===d.length-1},even:function(a,b){return b%2===0},odd:function(a,b){return b%2===1},lt:function(a,b,c){return b&lt;c[3]-0},gt:function(a,b,c){return b&gt;c[3]-0},nth:function(a,b,c){return c[3]-0===b},eq:function(a,b,c){return c[3]-0===b}},filter:{PSEUDO:function(a,b,c,d){var e=b[1],f=l.filters[e];if(f)return f(a,c,b,d);if(e==="contains")return(a.textContent||a.innerText||k.getText([a])||"").indexOf(b[3])&gt;=0;if(e==="not"){var g=b[3];for(var h=0,i=g.length;h&lt;i;h++)if(g[h]===a)return!1;return!0}k.error(e)},CHILD:function(a,b){var c=b[1],d=a;switch(c){case"only":case"first":while(d=d.previousSibling)if(d.nodeType===1)return!1;if(c==="first")return!0;d=a;case"last":while(d=d.nextSibling)if(d.nodeType===1)return!1;return!0;case"nth":var e=b[2],f=b[3];if(e===1&amp;&amp;f===0)return!0;var g=b[0],h=a.parentNode;if(h&amp;&amp;(h.sizcache!==g||!a.nodeIndex)){var i=0;for(d=h.firstChild;d;d=d.nextSibling)d.nodeType===1&amp;&amp;(d.nodeIndex=++i);h.sizcache=g}var j=a.nodeIndex-f;return e===0?j===0:j%e===0&amp;&amp;j/e&gt;=0}},ID:function(a,b){return a.nodeType===1&amp;&amp;a.getAttribute("id")===b},TAG:function(a,b){return b==="*"&amp;&amp;a.nodeType===1||a.nodeName.toLowerCase()===b},CLASS:function(a,b){return(" "+(a.className||a.getAttribute("class"))+" ").indexOf(b)&gt;-1},ATTR:function(a,b){var c=b[1],d=l.attrHandle[c]?l.attrHandle[c](a):a[c]!=null?a[c]:a.getAttribute(c),e=d+"",f=b[2],g=b[4];return d==null?f==="!=":f==="="?e===g:f==="*="?e.indexOf(g)&gt;=0:f==="~="?(" "+e+" ").indexOf(g)&gt;=0:g?f==="!="?e!==g:f==="^="?e.indexOf(g)===0:f==="$="?e.substr(e.length-g.length)===g:f==="|="?e===g||e.substr(0,g.length+1)===g+"-":!1:e&amp;&amp;d!==!1},POS:function(a,b,c,d){var e=b[2],f=l.setFilters[e];if(f)return f(a,c,b,d)}}},m=l.match.POS,n=function(a,b){return"\\"+(b-0+1)};for(var o in l.match)l.match[o]=new RegExp(l.match[o].source+/(?![^\[]*\])(?![^\(]*\))/.source),l.leftMatch[o]=new RegExp(/(^(?:.|\r|\n)*?)/.source+l.match[o].source.replace(/\\(\d+)/g,n));var p=function(a,b){a=Array.prototype.slice.call(a,0);if(b){b.push.apply(b,a);return b}return a};try{Array.prototype.slice.call(c.documentElement.childNodes,0)[0].nodeType}catch(q){p=function(a,b){var c=0,d=b||[];if(e.call(a)==="[object Array]")Array.prototype.push.apply(d,a);else if(typeof a.length=="number")for(var f=a.length;c&lt;f;c++)d.push(a[c]);else for(;a[c];c++)d.push(a[c]);return d}}var r,s;c.documentElement.compareDocumentPosition?r=function(a,b){if(a===b){g=!0;return 0}if(!a.compareDocumentPosition||!b.compareDocumentPosition)return a.compareDocumentPosition?-1:1;return a.compareDocumentPosition(b)&amp;4?-1:1}:(r=function(a,b){if(a===b){g=!0;return 0}if(a.sourceIndex&amp;&amp;b.sourceIndex)return a.sourceIndex-b.sourceIndex;var c,d,e=[],f=[],h=a.parentNode,i=b.parentNode,j=h;if(h===i)return s(a,b);if(!h)return-1;if(!i)return 1;while(j)e.unshift(j),j=j.parentNode;j=i;while(j)f.unshift(j),j=j.parentNode;c=e.length,d=f.length;for(var k=0;k&lt;c&amp;&amp;k&lt;d;k++)if(e[k]!==f[k])return s(e[k],f[k]);return k===c?s(a,f[k],-1):s(e[k],b,1)},s=function(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}),k.getText=function(a){var b="",c;for(var d=0;a[d];d++)c=a[d],c.nodeType===3||c.nodeType===4?b+=c.nodeValue:c.nodeType!==8&amp;&amp;(b+=k.getText(c.childNodes));return b},function(){var a=c.createElement("div"),d="script"+(new Date).getTime(),e=c.documentElement;a.innerHTML="&lt;a name='"+d+"'/&gt;",e.insertBefore(a,e.firstChild),c.getElementById(d)&amp;&amp;(l.find.ID=function(a,c,d){if(typeof c.getElementById!="undefined"&amp;&amp;!d){var e=c.getElementById(a[1]);return e?e.id===a[1]||typeof e.getAttributeNode!="undefined"&amp;&amp;e.getAttributeNode("id").nodeValue===a[1]?[e]:b:[]}},l.filter.ID=function(a,b){var c=typeof a.getAttributeNode!="undefined"&amp;&amp;a.getAttributeNode("id");return a.nodeType===1&amp;&amp;c&amp;&amp;c.nodeValue===b}),e.removeChild(a),e=a=null}(),function(){var a=c.createElement("div");a.appendChild(c.createComment("")),a.getElementsByTagName("*").length&gt;0&amp;&amp;(l.find.TAG=function(a,b){var c=b.getElementsByTagName(a[1]);if(a[1]==="*"){var d=[];for(var e=0;c[e];e++)c[e].nodeType===1&amp;&amp;d.push(c[e]);c=d}return c}),a.innerHTML="&lt;a href='#'&gt;&lt;/a&gt;",a.firstChild&amp;&amp;typeof a.firstChild.getAttribute!="undefined"&amp;&amp;a.firstChild.getAttribute("href")!=="#"&amp;&amp;(l.attrHandle.href=function(a){return a.getAttribute("href",2)}),a=null}(),c.querySelectorAll&amp;&amp;function(){var a=k,b=c.createElement("div"),d="__sizzle__";b.innerHTML="&lt;p class='TEST'&gt;&lt;/p&gt;";if(!b.querySelectorAll||b.querySelectorAll(".TEST").length!==0){k=function(b,e,f,g){e=e||c;if(!g&amp;&amp;!k.isXML(e)){var h=/^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(b);if(h&amp;&amp;(e.nodeType===1||e.nodeType===9)){if(h[1])return p(e.getElementsByTagName(b),f);if(h[2]&amp;&amp;l.find.CLASS&amp;&amp;e.getElementsByClassName)return p(e.getElementsByClassName(h[2]),f)}if(e.nodeType===9){if(b==="body"&amp;&amp;e.body)return p([e.body],f);if(h&amp;&amp;h[3]){var i=e.getElementById(h[3]);if(!i||!i.parentNode)return p([],f);if(i.id===h[3])return p([i],f)}try{return p(e.querySelectorAll(b),f)}catch(j){}}else if(e.nodeType===1&amp;&amp;e.nodeName.toLowerCase()!=="object"){var m=e,n=e.getAttribute("id"),o=n||d,q=e.parentNode,r=/^\s*[+~]/.test(b);n?o=o.replace(/'/g,"\\$&amp;"):e.setAttribute("id",o),r&amp;&amp;q&amp;&amp;(e=e.parentNode);try{if(!r||q)return p(e.querySelectorAll("[id='"+o+"'] "+b),f)}catch(s){}finally{n||m.removeAttribute("id")}}}return a(b,e,f,g)};for(var e in a)k[e]=a[e];b=null}}(),function(){var a=c.documentElement,b=a.matchesSelector||a.mozMatchesSelector||a.webkitMatchesSelector||a.msMatchesSelector;if(b){var d=!b.call(c.createElement("div"),"div"),e=!1;try{b.call(c.documentElement,"[test!='']:sizzle")}catch(f){e=!0}k.matchesSelector=function(a,c){c=c.replace(/\=\s*([^'"\]]*)\s*\]/g,"='$1']");if(!k.isXML(a))try{if(e||!l.match.PSEUDO.test(c)&amp;&amp;!/!=/.test(c)){var f=b.call(a,c);if(f||!d||a.document&amp;&amp;a.document.nodeType!==11)return f}}catch(g){}return k(c,null,null,[a]).length&gt;0}}}(),function(){var a=c.createElement("div");a.innerHTML="&lt;div class='test e'&gt;&lt;/div&gt;&lt;div class='test'&gt;&lt;/div&gt;";if(!!a.getElementsByClassName&amp;&amp;a.getElementsByClassName("e").length!==0){a.lastChild.className="e";if(a.getElementsByClassName("e").length===1)return;l.order.splice(1,0,"CLASS"),l.find.CLASS=function(a,b,c){if(typeof b.getElementsByClassName!="undefined"&amp;&amp;!c)return b.getElementsByClassName(a[1])},a=null}}(),c.documentElement.contains?k.contains=function(a,b){return a!==b&amp;&amp;(a.contains?a.contains(b):!0)}:c.documentElement.compareDocumentPosition?k.contains=function(a,b){return!!(a.compareDocumentPosition(b)&amp;16)}:k.contains=function(){return!1},k.isXML=function(a){var b=(a?a.ownerDocument||a:0).documentElement;return b?b.nodeName!=="HTML":!1};var v=function(a,b){var c,d=[],e="",f=b.nodeType?[b]:b;while(c=l.match.PSEUDO.exec(a))e+=c[0],a=a.replace(l.match.PSEUDO,"");a=l.relative[a]?a+"*":a;for(var g=0,h=f.length;g&lt;h;g++)k(a,f[g],d);return k.filter(e,d)};f.find=k,f.expr=k.selectors,f.expr[":"]=f.expr.filters,f.unique=k.uniqueSort,f.text=k.getText,f.isXMLDoc=k.isXML,f.contains=k.contains}();var N=/Until$/,O=/^(?:parents|prevUntil|prevAll)/,P=/,/,Q=/^.[^:#\[\.,]*$/,R=Array.prototype.slice,S=f.expr.match.POS,T={children:!0,contents:!0,next:!0,prev:!0};f.fn.extend({find:function(a){var b=this,c,d;if(typeof a!="string")return f(a).filter(function(){for(c=0,d=b.length;c&lt;d;c++)if(f.contains(b[c],this))return!0});var e=this.pushStack("","find",a),g,h,i;for(c=0,d=this.length;c&lt;d;c++){g=e.length,f.find(a,this[c],e);if(c&gt;0)for(h=g;h&lt;e.length;h++)for(i=0;i&lt;g;i++)if(e[i]===e[h]){e.splice(h--,1);break}}return e},has:function(a){var b=f(a);return this.filter(function(){for(var a=0,c=b.length;a&lt;c;a++)if(f.contains(this,b[a]))return!0})},not:function(a){return this.pushStack(V(this,a,!1),"not",a)},filter:function(a){return this.pushStack(V(this,a,!0),"filter",a)},is:function(a){return!!a&amp;&amp;(typeof a=="string"?f.filter(a,this).length&gt;0:this.filter(a).length&gt;0)},closest:function(a,b){var c=[],d,e,g=this[0];if(f.isArray(a)){var h,i,j={},k=1;if(g&amp;&amp;a.length){for(d=0,e=a.length;d&lt;e;d++)i=a[d],j[i]||(j[i]=S.test(i)?f(i,b||this.context):i);while(g&amp;&amp;g.ownerDocument&amp;&amp;g!==b){for(i in j)h=j[i],(h.jquery?h.index(g)&gt;-1:f(g).is(h))&amp;&amp;c.push({selector:i,elem:g,level:k});g=g.parentNode,k++}}return c}var l=S.test(a)||typeof a!="string"?f(a,b||this.context):0;for(d=0,e=this.length;d&lt;e;d++){g=this[d];while(g){if(l?l.index(g)&gt;-1:f.find.matchesSelector(g,a)){c.push(g);break}g=g.parentNode;if(!g||!g.ownerDocument||g===b||g.nodeType===11)break}}c=c.length&gt;1?f.unique(c):c;return this.pushStack(c,"closest",a)},index:function(a){if(!a)return this[0]&amp;&amp;this[0].parentNode?this.prevAll().length:-1;if(typeof a=="string")return f.inArray(this[0],f(a));return f.inArray(a.jquery?a[0]:a,this)},add:function(a,b){var c=typeof a=="string"?f(a,b):f.makeArray(a&amp;&amp;a.nodeType?[a]:a),d=f.merge(this.get(),c);return this.pushStack(U(c[0])||U(d[0])?d:f.unique(d))},andSelf:function(){return this.add(this.prevObject)}}),f.each({parent:function(a){var b=a.parentNode;return b&amp;&amp;b.nodeType!==11?b:null},parents:function(a){return f.dir(a,"parentNode")},parentsUntil:function(a,b,c){return f.dir(a,"parentNode",c)},next:function(a){return f.nth(a,2,"nextSibling")},prev:function(a){return f.nth(a,2,"previousSibling")},nextAll:function(a){return f.dir(a,"nextSibling")},prevAll:function(a){return f.dir(a,"previousSibling")},nextUntil:function(a,b,c){return f.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return f.dir(a,"previousSibling",c)},siblings:function(a){return f.sibling(a.parentNode.firstChild,a)},children:function(a){return f.sibling(a.firstChild)},contents:function(a){return f.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:f.makeArray(a.childNodes)}},function(a,b){f.fn[a]=function(c,d){var e=f.map(this,b,c),g=R.call(arguments);N.test(a)||(d=c),d&amp;&amp;typeof d=="string"&amp;&amp;(e=f.filter(d,e)),e=this.length&gt;1&amp;&amp;!T[a]?f.unique(e):e,(this.length&gt;1||P.test(d))&amp;&amp;O.test(a)&amp;&amp;(e=e.reverse());return this.pushStack(e,a,g.join(","))}}),f.extend({filter:function(a,b,c){c&amp;&amp;(a=":not("+a+")");return b.length===1?f.find.matchesSelector(b[0],a)?[b[0]]:[]:f.find.matches(a,b)},dir:function(a,c,d){var e=[],g=a[c];while(g&amp;&amp;g.nodeType!==9&amp;&amp;(d===b||g.nodeType!==1||!f(g).is(d)))g.nodeType===1&amp;&amp;e.push(g),g=g[c];return e},nth:function(a,b,c,d){b=b||1;var e=0;for(;a;a=a[c])if(a.nodeType===1&amp;&amp;++e===b)break;return a},sibling:function(a,b){var c=[];for(;a;a=a.nextSibling)a.nodeType===1&amp;&amp;a!==b&amp;&amp;c.push(a);return c}});var W=/ jQuery\d+="(?:\d+|null)"/g,X=/^\s+/,Y=/&lt;(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^&gt;]*)\/&gt;/ig,Z=/&lt;([\w:]+)/,$=/&lt;tbody/i,_=/&lt;|&amp;#?\w+;/,ba=/&lt;(?:script|object|embed|option|style)/i,bb=/checked\s*(?:[^=]|=\s*.checked.)/i,bc=/\/(java|ecma)script/i,bd=/^\s*&lt;!(?:\[CDATA\[|\-\-)/,be={option:[1,"&lt;select multiple='multiple'&gt;","&lt;/select&gt;"],legend:[1,"&lt;fieldset&gt;","&lt;/fieldset&gt;"],thead:[1,"&lt;table&gt;","&lt;/table&gt;"],tr:[2,"&lt;table&gt;&lt;tbody&gt;","&lt;/tbody&gt;&lt;/table&gt;"],td:[3,"&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;","&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;"],col:[2,"&lt;table&gt;&lt;tbody&gt;&lt;/tbody&gt;&lt;colgroup&gt;","&lt;/colgroup&gt;&lt;/table&gt;"],area:[1,"&lt;map&gt;","&lt;/map&gt;"],_default:[0,"",""]};be.optgroup=be.option,be.tbody=be.tfoot=be.colgroup=be.caption=be.thead,be.th=be.td,f.support.htmlSerialize||(be._default=[1,"div&lt;div&gt;","&lt;/div&gt;"]),f.fn.extend({text:function(a){if(f.isFunction(a))return this.each(function(b){var c=f(this);c.text(a.call(this,b,c.text()))});if(typeof a!="object"&amp;&amp;a!==b)return this.empty().append((this[0]&amp;&amp;this[0].ownerDocument||c).createTextNode(a));return f.text(this)},wrapAll:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapAll(a.call(this,b))});if(this[0]){var b=f(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&amp;&amp;b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&amp;&amp;a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){if(f.isFunction(a))return this.each(function(b){f(this).wrapInner(a.call(this,b))});return this.each(function(){var b=f(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){return this.each(function(){f(this).wrapAll(a)})},unwrap:function(){return this.parent().each(function(){f.nodeName(this,"body")||f(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&amp;&amp;this.appendChild(a)})},prepend:function(){return this.domManip(arguments,!0,function(a){this.nodeType===1&amp;&amp;this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&amp;&amp;this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this)});if(arguments.length){var a=f(arguments[0]);a.push.apply(a,this.toArray());return this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&amp;&amp;this[0].parentNode)return this.domManip(arguments,!1,function(a){this.parentNode.insertBefore(a,this.nextSibling)});if(arguments.length){var a=this.pushStack(this,"after",arguments);a.push.apply(a,f(arguments[0]).toArray());return a}},remove:function(a,b){for(var c=0,d;(d=this[c])!=null;c++)if(!a||f.filter(a,[d]).length)!b&amp;&amp;d.nodeType===1&amp;&amp;(f.cleanData(d.getElementsByTagName("*")),f.cleanData([d])),d.parentNode&amp;&amp;d.parentNode.removeChild(d);return this},empty:function(){for(var a=0,b;(b=this[a])!=null;a++){b.nodeType===1&amp;&amp;f.cleanData(b.getElementsByTagName("*"));while(b.firstChild)b.removeChild(b.firstChild)}return this},clone:function(a,b){a=a==null?!1:a,b=b==null?a:b;return this.map(function(){return f.clone(this,a,b)})},html:function(a){if(a===b)return this[0]&amp;&amp;this[0].nodeType===1?this[0].innerHTML.replace(W,""):null;if(typeof a=="string"&amp;&amp;!ba.test(a)&amp;&amp;(f.support.leadingWhitespace||!X.test(a))&amp;&amp;!be[(Z.exec(a)||["",""])[1].toLowerCase()]){a=a.replace(Y,"&lt;$1&gt;&lt;/$2&gt;");try{for(var c=0,d=this.length;c&lt;d;c++)this[c].nodeType===1&amp;&amp;(f.cleanData(this[c].getElementsByTagName("*")),this[c].innerHTML=a)}catch(e){this.empty().append(a)}}else f.isFunction(a)?this.each(function(b){var c=f(this);c.html(a.call(this,b,c.html()))}):this.empty().append(a);return this},replaceWith:function(a){if(this[0]&amp;&amp;this[0].parentNode){if(f.isFunction(a))return this.each(function(b){var c=f(this),d=c.html();c.replaceWith(a.call(this,b,d))});typeof a!="string"&amp;&amp;(a=f(a).detach());return this.each(function(){var b=this.nextSibling,c=this.parentNode;f(this).remove(),b?f(b).before(a):f(c).append(a)})}return this.length?this.pushStack(f(f.isFunction(a)?a():a),"replaceWith",a):this},detach:function(a){return this.remove(a,!0)},domManip:function(a,c,d){var e,g,h,i,j=a[0],k=[];if(!f.support.checkClone&amp;&amp;arguments.length===3&amp;&amp;typeof j=="string"&amp;&amp;bb.test(j))return this.each(function(){f(this).domManip(a,c,d,!0)});if(f.isFunction(j))return this.each(function(e){var g=f(this);a[0]=j.call(this,e,c?g.html():b),g.domManip(a,c,d)});if(this[0]){i=j&amp;&amp;j.parentNode,f.support.parentNode&amp;&amp;i&amp;&amp;i.nodeType===11&amp;&amp;i.childNodes.length===this.length?e={fragment:i}:e=f.buildFragment(a,this,k),h=e.fragment,h.childNodes.length===1?g=h=h.firstChild:g=h.firstChild;if(g){c=c&amp;&amp;f.nodeName(g,"tr");for(var l=0,m=this.length,n=m-1;l&lt;m;l++)d.call(c?bf(this[l],g):this[l],e.cacheable||m&gt;1&amp;&amp;l&lt;n?f.clone(h,!0,!0):h)}k.length&amp;&amp;f.each(k,bl)}return this}}),f.buildFragment=function(a,b,d){var e,g,h,i;b&amp;&amp;b[0]&amp;&amp;(i=b[0].ownerDocument||b[0]),i.createDocumentFragment||(i=c),a.length===1&amp;&amp;typeof a[0]=="string"&amp;&amp;a[0].length&lt;512&amp;&amp;i===c&amp;&amp;a[0].charAt(0)==="&lt;"&amp;&amp;!ba.test(a[0])&amp;&amp;(f.support.checkClone||!bb.test(a[0]))&amp;&amp;(g=!0,h=f.fragments[a[0]],h&amp;&amp;h!==1&amp;&amp;(e=h)),e||(e=i.createDocumentFragment(),f.clean
(a,i,e,d)),g&amp;&amp;(f.fragments[a[0]]=h?e:1);return{fragment:e,cacheable:g}},f.fragments={},f.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){f.fn[a]=function(c){var d=[],e=f(c),g=this.length===1&amp;&amp;this[0].parentNode;if(g&amp;&amp;g.nodeType===11&amp;&amp;g.childNodes.length===1&amp;&amp;e.length===1){e[b](this[0]);return this}for(var h=0,i=e.length;h&lt;i;h++){var j=(h&gt;0?this.clone(!0):this).get();f(e[h])[b](j),d=d.concat(j)}return this.pushStack(d,a,e.selector)}}),f.extend({clone:function(a,b,c){var d=a.cloneNode(!0),e,g,h;if((!f.support.noCloneEvent||!f.support.noCloneChecked)&amp;&amp;(a.nodeType===1||a.nodeType===11)&amp;&amp;!f.isXMLDoc(a)){bh(a,d),e=bi(a),g=bi(d);for(h=0;e[h];++h)g[h]&amp;&amp;bh(e[h],g[h])}if(b){bg(a,d);if(c){e=bi(a),g=bi(d);for(h=0;e[h];++h)bg(e[h],g[h])}}e=g=null;return d},clean:function(a,b,d,e){var g;b=b||c,typeof b.createElement=="undefined"&amp;&amp;(b=b.ownerDocument||b[0]&amp;&amp;b[0].ownerDocument||c);var h=[],i;for(var j=0,k;(k=a[j])!=null;j++){typeof k=="number"&amp;&amp;(k+="");if(!k)continue;if(typeof k=="string")if(!_.test(k))k=b.createTextNode(k);else{k=k.replace(Y,"&lt;$1&gt;&lt;/$2&gt;");var l=(Z.exec(k)||["",""])[1].toLowerCase(),m=be[l]||be._default,n=m[0],o=b.createElement("div");o.innerHTML=m[1]+k+m[2];while(n--)o=o.lastChild;if(!f.support.tbody){var p=$.test(k),q=l==="table"&amp;&amp;!p?o.firstChild&amp;&amp;o.firstChild.childNodes:m[1]==="&lt;table&gt;"&amp;&amp;!p?o.childNodes:[];for(i=q.length-1;i&gt;=0;--i)f.nodeName(q[i],"tbody")&amp;&amp;!q[i].childNodes.length&amp;&amp;q[i].parentNode.removeChild(q[i])}!f.support.leadingWhitespace&amp;&amp;X.test(k)&amp;&amp;o.insertBefore(b.createTextNode(X.exec(k)[0]),o.firstChild),k=o.childNodes}var r;if(!f.support.appendChecked)if(k[0]&amp;&amp;typeof (r=k.length)=="number")for(i=0;i&lt;r;i++)bk(k[i]);else bk(k);k.nodeType?h.push(k):h=f.merge(h,k)}if(d){g=function(a){return!a.type||bc.test(a.type)};for(j=0;h[j];j++)if(e&amp;&amp;f.nodeName(h[j],"script")&amp;&amp;(!h[j].type||h[j].type.toLowerCase()==="text/javascript"))e.push(h[j].parentNode?h[j].parentNode.removeChild(h[j]):h[j]);else{if(h[j].nodeType===1){var s=f.grep(h[j].getElementsByTagName("script"),g);h.splice.apply(h,[j+1,0].concat(s))}d.appendChild(h[j])}}return h},cleanData:function(a){var b,c,d=f.cache,e=f.expando,g=f.event.special,h=f.support.deleteExpando;for(var i=0,j;(j=a[i])!=null;i++){if(j.nodeName&amp;&amp;f.noData[j.nodeName.toLowerCase()])continue;c=j[f.expando];if(c){b=d[c]&amp;&amp;d[c][e];if(b&amp;&amp;b.events){for(var k in b.events)g[k]?f.event.remove(j,k):f.removeEvent(j,k,b.handle);b.handle&amp;&amp;(b.handle.elem=null)}h?delete j[f.expando]:j.removeAttribute&amp;&amp;j.removeAttribute(f.expando),delete d[c]}}}});var bm=/alpha\([^)]*\)/i,bn=/opacity=([^)]*)/,bo=/([A-Z]|^ms)/g,bp=/^-?\d+(?:px)?$/i,bq=/^-?\d/,br=/^([\-+])=([\-+.\de]+)/,bs={position:"absolute",visibility:"hidden",display:"block"},bt=["Left","Right"],bu=["Top","Bottom"],bv,bw,bx;f.fn.css=function(a,c){if(arguments.length===2&amp;&amp;c===b)return this;return f.access(this,a,c,!0,function(a,c,d){return d!==b?f.style(a,c,d):f.css(a,c)})},f.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=bv(a,"opacity","opacity");return c===""?"1":c}return a.style.opacity}}},cssNumber:{fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":f.support.cssFloat?"cssFloat":"styleFloat"},style:function(a,c,d,e){if(!!a&amp;&amp;a.nodeType!==3&amp;&amp;a.nodeType!==8&amp;&amp;!!a.style){var g,h,i=f.camelCase(c),j=a.style,k=f.cssHooks[i];c=f.cssProps[i]||i;if(d===b){if(k&amp;&amp;"get"in k&amp;&amp;(g=k.get(a,!1,e))!==b)return g;return j[c]}h=typeof d,h==="string"&amp;&amp;(g=br.exec(d))&amp;&amp;(d=+(g[1]+1)*+g[2]+parseFloat(f.css(a,c)),h="number");if(d==null||h==="number"&amp;&amp;isNaN(d))return;h==="number"&amp;&amp;!f.cssNumber[i]&amp;&amp;(d+="px");if(!k||!("set"in k)||(d=k.set(a,d))!==b)try{j[c]=d}catch(l){}}},css:function(a,c,d){var e,g;c=f.camelCase(c),g=f.cssHooks[c],c=f.cssProps[c]||c,c==="cssFloat"&amp;&amp;(c="float");if(g&amp;&amp;"get"in g&amp;&amp;(e=g.get(a,!0,d))!==b)return e;if(bv)return bv(a,c)},swap:function(a,b,c){var d={};for(var e in b)d[e]=a.style[e],a.style[e]=b[e];c.call(a);for(e in b)a.style[e]=d[e]}}),f.curCSS=f.css,f.each(["height","width"],function(a,b){f.cssHooks[b]={get:function(a,c,d){var e;if(c){if(a.offsetWidth!==0)return by(a,b,d);f.swap(a,bs,function(){e=by(a,b,d)});return e}},set:function(a,b){if(!bp.test(b))return b;b=parseFloat(b);if(b&gt;=0)return b+"px"}}}),f.support.opacity||(f.cssHooks.opacity={get:function(a,b){return bn.test((b&amp;&amp;a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?parseFloat(RegExp.$1)/100+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=f.isNaN(b)?"":"alpha(opacity="+b*100+")",g=d&amp;&amp;d.filter||c.filter||"";c.zoom=1;if(b&gt;=1&amp;&amp;f.trim(g.replace(bm,""))===""){c.removeAttribute("filter");if(d&amp;&amp;!d.filter)return}c.filter=bm.test(g)?g.replace(bm,e):g+" "+e}}),f(function(){f.support.reliableMarginRight||(f.cssHooks.marginRight={get:function(a,b){var c;f.swap(a,{display:"inline-block"},function(){b?c=bv(a,"margin-right","marginRight"):c=a.style.marginRight});return c}})}),c.defaultView&amp;&amp;c.defaultView.getComputedStyle&amp;&amp;(bw=function(a,c){var d,e,g;c=c.replace(bo,"-$1").toLowerCase();if(!(e=a.ownerDocument.defaultView))return b;if(g=e.getComputedStyle(a,null))d=g.getPropertyValue(c),d===""&amp;&amp;!f.contains(a.ownerDocument.documentElement,a)&amp;&amp;(d=f.style(a,c));return d}),c.documentElement.currentStyle&amp;&amp;(bx=function(a,b){var c,d=a.currentStyle&amp;&amp;a.currentStyle[b],e=a.runtimeStyle&amp;&amp;a.runtimeStyle[b],f=a.style;!bp.test(d)&amp;&amp;bq.test(d)&amp;&amp;(c=f.left,e&amp;&amp;(a.runtimeStyle.left=a.currentStyle.left),f.left=b==="fontSize"?"1em":d||0,d=f.pixelLeft+"px",f.left=c,e&amp;&amp;(a.runtimeStyle.left=e));return d===""?"auto":d}),bv=bw||bx,f.expr&amp;&amp;f.expr.filters&amp;&amp;(f.expr.filters.hidden=function(a){var b=a.offsetWidth,c=a.offsetHeight;return b===0&amp;&amp;c===0||!f.support.reliableHiddenOffsets&amp;&amp;(a.style.display||f.css(a,"display"))==="none"},f.expr.filters.visible=function(a){return!f.expr.filters.hidden(a)});var bz=/%20/g,bA=/\[\]$/,bB=/\r?\n/g,bC=/#.*$/,bD=/^(.*?):[ \t]*([^\r\n]*)\r?$/mg,bE=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,bF=/^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,bG=/^(?:GET|HEAD)$/,bH=/^\/\//,bI=/\?/,bJ=/&lt;script\b[^&lt;]*(?:(?!&lt;\/script&gt;)&lt;[^&lt;]*)*&lt;\/script&gt;/gi,bK=/^(?:select|textarea)/i,bL=/\s+/,bM=/([?&amp;])_=[^&amp;]*/,bN=/^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,bO=f.fn.load,bP={},bQ={},bR,bS,bT=["*/"]+["*"];try{bR=e.href}catch(bU){bR=c.createElement("a"),bR.href="",bR=bR.href}bS=bN.exec(bR.toLowerCase())||[],f.fn.extend({load:function(a,c,d){if(typeof a!="string"&amp;&amp;bO)return bO.apply(this,arguments);if(!this.length)return this;var e=a.indexOf(" ");if(e&gt;=0){var g=a.slice(e,a.length);a=a.slice(0,e)}var h="GET";c&amp;&amp;(f.isFunction(c)?(d=c,c=b):typeof c=="object"&amp;&amp;(c=f.param(c,f.ajaxSettings.traditional),h="POST"));var i=this;f.ajax({url:a,type:h,dataType:"html",data:c,complete:function(a,b,c){c=a.responseText,a.isResolved()&amp;&amp;(a.done(function(a){c=a}),i.html(g?f("&lt;div&gt;").append(c.replace(bJ,"")).find(g):c)),d&amp;&amp;i.each(d,[c,b,a])}});return this},serialize:function(){return f.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?f.makeArray(this.elements):this}).filter(function(){return this.name&amp;&amp;!this.disabled&amp;&amp;(this.checked||bK.test(this.nodeName)||bE.test(this.type))}).map(function(a,b){var c=f(this).val();return c==null?null:f.isArray(c)?f.map(c,function(a,c){return{name:b.name,value:a.replace(bB,"\r\n")}}):{name:b.name,value:c.replace(bB,"\r\n")}}).get()}}),f.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),function(a,b){f.fn[b]=function(a){return this.bind(b,a)}}),f.each(["get","post"],function(a,c){f[c]=function(a,d,e,g){f.isFunction(d)&amp;&amp;(g=g||e,e=d,d=b);return f.ajax({type:c,url:a,data:d,success:e,dataType:g})}}),f.extend({getScript:function(a,c){return f.get(a,b,c,"script")},getJSON:function(a,b,c){return f.get(a,b,c,"json")},ajaxSetup:function(a,b){b?bX(a,f.ajaxSettings):(b=a,a=f.ajaxSettings),bX(a,b);return a},ajaxSettings:{url:bR,isLocal:bF.test(bS[1]),global:!0,type:"GET",contentType:"application/x-www-form-urlencoded",processData:!0,async:!0,accepts:{xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript","*":bT},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText"},converters:{"* text":a.String,"text html":!0,"text json":f.parseJSON,"text xml":f.parseXML},flatOptions:{context:!0,url:!0}},ajaxPrefilter:bV(bP),ajaxTransport:bV(bQ),ajax:function(a,c){function w(a,c,l,m){if(s!==2){s=2,q&amp;&amp;clearTimeout(q),p=b,n=m||"",v.readyState=a&gt;0?4:0;var o,r,u,w=c,x=l?bZ(d,v,l):b,y,z;if(a&gt;=200&amp;&amp;a&lt;300||a===304){if(d.ifModified){if(y=v.getResponseHeader("Last-Modified"))f.lastModified[k]=y;if(z=v.getResponseHeader("Etag"))f.etag[k]=z}if(a===304)w="notmodified",o=!0;else try{r=b$(d,x),w="success",o=!0}catch(A){w="parsererror",u=A}}else{u=w;if(!w||a)w="error",a&lt;0&amp;&amp;(a=0)}v.status=a,v.statusText=""+(c||w),o?h.resolveWith(e,[r,w,v]):h.rejectWith(e,[v,w,u]),v.statusCode(j),j=b,t&amp;&amp;g.trigger("ajax"+(o?"Success":"Error"),[v,d,o?r:u]),i.resolveWith(e,[v,w]),t&amp;&amp;(g.trigger("ajaxComplete",[v,d]),--f.active||f.event.trigger("ajaxStop"))}}typeof a=="object"&amp;&amp;(c=a,a=b),c=c||{};var d=f.ajaxSetup({},c),e=d.context||d,g=e!==d&amp;&amp;(e.nodeType||e instanceof f)?f(e):f.event,h=f.Deferred(),i=f._Deferred(),j=d.statusCode||{},k,l={},m={},n,o,p,q,r,s=0,t,u,v={readyState:0,setRequestHeader:function(a,b){if(!s){var c=a.toLowerCase();a=m[c]=m[c]||a,l[a]=b}return this},getAllResponseHeaders:function(){return s===2?n:null},getResponseHeader:function(a){var c;if(s===2){if(!o){o={};while(c=bD.exec(n))o[c[1].toLowerCase()]=c[2]}c=o[a.toLowerCase()]}return c===b?null:c},overrideMimeType:function(a){s||(d.mimeType=a);return this},abort:function(a){a=a||"abort",p&amp;&amp;p.abort(a),w(0,a);return this}};h.promise(v),v.success=v.done,v.error=v.fail,v.complete=i.done,v.statusCode=function(a){if(a){var b;if(s&lt;2)for(b in a)j[b]=[j[b],a[b]];else b=a[v.status],v.then(b,b)}return this},d.url=((a||d.url)+"").replace(bC,"").replace(bH,bS[1]+"//"),d.dataTypes=f.trim(d.dataType||"*").toLowerCase().split(bL),d.crossDomain==null&amp;&amp;(r=bN.exec(d.url.toLowerCase()),d.crossDomain=!(!r||r[1]==bS[1]&amp;&amp;r[2]==bS[2]&amp;&amp;(r[3]||(r[1]==="http:"?80:443))==(bS[3]||(bS[1]==="http:"?80:443)))),d.data&amp;&amp;d.processData&amp;&amp;typeof d.data!="string"&amp;&amp;(d.data=f.param(d.data,d.traditional)),bW(bP,d,c,v);if(s===2)return!1;t=d.global,d.type=d.type.toUpperCase(),d.hasContent=!bG.test(d.type),t&amp;&amp;f.active++===0&amp;&amp;f.event.trigger("ajaxStart");if(!d.hasContent){d.data&amp;&amp;(d.url+=(bI.test(d.url)?"&amp;":"?")+d.data,delete d.data),k=d.url;if(d.cache===!1){var x=f.now(),y=d.url.replace(bM,"$1_="+x);d.url=y+(y===d.url?(bI.test(d.url)?"&amp;":"?")+"_="+x:"")}}(d.data&amp;&amp;d.hasContent&amp;&amp;d.contentType!==!1||c.contentType)&amp;&amp;v.setRequestHeader("Content-Type",d.contentType),d.ifModified&amp;&amp;(k=k||d.url,f.lastModified[k]&amp;&amp;v.setRequestHeader("If-Modified-Since",f.lastModified[k]),f.etag[k]&amp;&amp;v.setRequestHeader("If-None-Match",f.etag[k])),v.setRequestHeader("Accept",d.dataTypes[0]&amp;&amp;d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(d.dataTypes[0]!=="*"?", "+bT+"; q=0.01":""):d.accepts["*"]);for(u in d.headers)v.setRequestHeader(u,d.headers[u]);if(d.beforeSend&amp;&amp;(d.beforeSend.call(e,v,d)===!1||s===2)){v.abort();return!1}for(u in{success:1,error:1,complete:1})v[u](d[u]);p=bW(bQ,d,c,v);if(!p)w(-1,"No Transport");else{v.readyState=1,t&amp;&amp;g.trigger("ajaxSend",[v,d]),d.async&amp;&amp;d.timeout&gt;0&amp;&amp;(q=setTimeout(function(){v.abort("timeout")},d.timeout));try{s=1,p.send(l,w)}catch(z){s&lt;2?w(-1,z):f.error(z)}}return v},param:function(a,c){var d=[],e=function(a,b){b=f.isFunction(b)?b():b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};c===b&amp;&amp;(c=f.ajaxSettings.traditional);if(f.isArray(a)||a.jquery&amp;&amp;!f.isPlainObject(a))f.each(a,function(){e(this.name,this.value)});else for(var g in a)bY(g,a[g],c,e);return d.join("&amp;").replace(bz,"+")}}),f.extend({active:0,lastModified:{},etag:{}});var b_=f.now(),ca=/(\=)\?(&amp;|$)|\?\?/i;f.ajaxSetup({jsonp:"callback",jsonpCallback:function(){return f.expando+"_"+b_++}}),f.ajaxPrefilter("json jsonp",function(b,c,d){var e=b.contentType==="application/x-www-form-urlencoded"&amp;&amp;typeof b.data=="string";if(b.dataTypes[0]==="jsonp"||b.jsonp!==!1&amp;&amp;(ca.test(b.url)||e&amp;&amp;ca.test(b.data))){var g,h=b.jsonpCallback=f.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,i=a[h],j=b.url,k=b.data,l="$1"+h+"$2";b.jsonp!==!1&amp;&amp;(j=j.replace(ca,l),b.url===j&amp;&amp;(e&amp;&amp;(k=k.replace(ca,l)),b.data===k&amp;&amp;(j+=(/\?/.test(j)?"&amp;":"?")+b.jsonp+"="+h))),b.url=j,b.data=k,a[h]=function(a){g=[a]},d.always(function(){a[h]=i,g&amp;&amp;f.isFunction(i)&amp;&amp;a[h](g[0])}),b.converters["script json"]=function(){g||f.error(h+" was not called");return g[0]},b.dataTypes[0]="json";return"script"}}),f.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/javascript|ecmascript/},converters:{"text script":function(a){f.globalEval(a);return a}}}),f.ajaxPrefilter("script",function(a){a.cache===b&amp;&amp;(a.cache=!1),a.crossDomain&amp;&amp;(a.type="GET",a.global=!1)}),f.ajaxTransport("script",function(a){if(a.crossDomain){var d,e=c.head||c.getElementsByTagName("head")[0]||c.documentElement;return{send:function(f,g){d=c.createElement("script"),d.async="async",a.scriptCharset&amp;&amp;(d.charset=a.scriptCharset),d.src=a.url,d.onload=d.onreadystatechange=function(a,c){if(c||!d.readyState||/loaded|complete/.test(d.readyState))d.onload=d.onreadystatechange=null,e&amp;&amp;d.parentNode&amp;&amp;e.removeChild(d),d=b,c||g(200,"success")},e.insertBefore(d,e.firstChild)},abort:function(){d&amp;&amp;d.onload(0,1)}}}});var cb=a.ActiveXObject?function(){for(var a in cd)cd[a](0,1)}:!1,cc=0,cd;f.ajaxSettings.xhr=a.ActiveXObject?function(){return!this.isLocal&amp;&amp;ce()||cf()}:ce,function(a){f.extend(f.support,{ajax:!!a,cors:!!a&amp;&amp;"withCredentials"in a})}(f.ajaxSettings.xhr()),f.support.ajax&amp;&amp;f.ajaxTransport(function(c){if(!c.crossDomain||f.support.cors){var d;return{send:function(e,g){var h=c.xhr(),i,j;c.username?h.open(c.type,c.url,c.async,c.username,c.password):h.open(c.type,c.url,c.async);if(c.xhrFields)for(j in c.xhrFields)h[j]=c.xhrFields[j];c.mimeType&amp;&amp;h.overrideMimeType&amp;&amp;h.overrideMimeType(c.mimeType),!c.crossDomain&amp;&amp;!e["X-Requested-With"]&amp;&amp;(e["X-Requested-With"]="XMLHttpRequest");try{for(j in e)h.setRequestHeader(j,e[j])}catch(k){}h.send(c.hasContent&amp;&amp;c.data||null),d=function(a,e){var j,k,l,m,n;try{if(d&amp;&amp;(e||h.readyState===4)){d=b,i&amp;&amp;(h.onreadystatechange=f.noop,cb&amp;&amp;delete cd[i]);if(e)h.readyState!==4&amp;&amp;h.abort();else{j=h.status,l=h.getAllResponseHeaders(),m={},n=h.responseXML,n&amp;&amp;n.documentElement&amp;&amp;(m.xml=n),m.text=h.responseText;try{k=h.statusText}catch(o){k=""}!j&amp;&amp;c.isLocal&amp;&amp;!c.crossDomain?j=m.text?200:404:j===1223&amp;&amp;(j=204)}}}catch(p){e||g(-1,p)}m&amp;&amp;g(j,k,m,l)},!c.async||h.readyState===4?d():(i=++cc,cb&amp;&amp;(cd||(cd={},f(a).unload(cb)),cd[i]=d),h.onreadystatechange=d)},abort:function(){d&amp;&amp;d(0,1)}}}});var cg={},ch,ci,cj=/^(?:toggle|show|hide)$/,ck=/^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,cl,cm=[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["width","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]],cn;f.fn.extend({show:function(a,b,c){var d,e;if(a||a===0)return this.animate(cq("show",3),a,b,c);for(var g=0,h=this.length;g&lt;h;g++)d=this[g],d.style&amp;&amp;(e=d.style.display,!f._data(d,"olddisplay")&amp;&amp;e==="none"&amp;&amp;(e=d.style.display=""),e===""&amp;&amp;f.css(d,"display")==="none"&amp;&amp;f._data(d,"olddisplay",cr(d.nodeName)));for(g=0;g&lt;h;g++){d=this[g];if(d.style){e=d.style.display;if(e===""||e==="none")d.style.display=f._data(d,"olddisplay")||""}}return this},hide:function(a,b,c){if(a||a===0)return this.animate(cq("hide",3),a,b,c);for(var d=0,e=this.length;d&lt;e;d++)if(this[d].style){var g=f.css(this[d],"display");g!=="none"&amp;&amp;!f._data(this[d],"olddisplay")&amp;&amp;f._data(this[d],"olddisplay",g)}for(d=0;d&lt;e;d++)this[d].style&amp;&amp;(this[d].style.display="none");return this},_toggle:f.fn.toggle,toggle:function(a,b,c){var d=typeof a=="boolean";f.isFunction(a)&amp;&amp;f.isFunction(b)?this._toggle.apply(this,arguments):a==null||d?this.each(function(){var b=d?a:f(this).is(":hidden");f(this)[b?"show":"hide"]()}):this.animate(cq("toggle",3),a,b,c);return this},fadeTo:function(a,b,c,d){return this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=f.speed(b,c,d);if(f.isEmptyObject(a))return this.each(e.complete,[!1]);a=f.extend({},a);return this[e.queue===!1?"each":"queue"](function(){e.queue===!1&amp;&amp;f._mark(this);var b=f.extend({},e),c=this.nodeType===1,d=c&amp;&amp;f(this).is(":hidden"),g,h,i,j,k,l,m,n,o;b.animatedProperties={};for(i in a){g=f.camelCase(i),i!==g&amp;&amp;(a[g]=a[i],delete a[i]),h=a[g],f.isArray(h)?(b.animatedProperties[g]=h[1],h=a[g]=h[0]):b.animatedProperties[g]=b.specialEasing&amp;&amp;b.specialEasing[g]||b.easing||"swing";if(h==="hide"&amp;&amp;d||h==="show"&amp;&amp;!d)return b.complete.call(this);c&amp;&amp;(g==="height"||g==="width")&amp;&amp;(b.overflow=[this.style.overflow,this.style.overflowX,this.style.overflowY],f.css(this,"display")==="inline"&amp;&amp;f.css(this,"float")==="none"&amp;&amp;(f.support.inlineBlockNeedsLayout?(j=cr(this.nodeName),j==="inline"?this.style.display="inline-block":(this.style.display="inline",this.style.zoom=1)):this.style.display="inline-block"))}b.overflow!=null&amp;&amp;(this.style.overflow="hidden");for(i in a)k=new f.fx(this,b,i),h=a[i],cj.test(h)?k[h==="toggle"?d?"show":"hide":h]():(l=ck.exec(h),m=k.cur(),l?(n=parseFloat(l[2]),o=l[3]||(f.cssNumber[i]?"":"px"),o!=="px"&amp;&amp;(f.style(this,i,(n||1)+o),m=(n||1)/k.cur()*m,f.style(this,i,m+o)),l[1]&amp;&amp;(n=(l[1]==="-="?-1:1)*n+m),k.custom(m,n,o)):k.custom(m,h,""));return!0})},stop:function(a,b){a&amp;&amp;this.queue([]),this.each(function(){var a=f.timers,c=a.length;b||f._unmark(!0,this);while(c--)a[c].elem===this&amp;&amp;(b&amp;&amp;a[c](!0),a.splice(c,1))}),b||this.dequeue();return this}}),f.each({slideDown:cq("show",1),slideUp:cq("hide",1),slideToggle:cq("toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){f.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),f.extend({speed:function(a,b,c){var d=a&amp;&amp;typeof a=="object"?f.extend({},a):{complete:c||!c&amp;&amp;b||f.isFunction(a)&amp;&amp;a,duration:a,easing:c&amp;&amp;b||b&amp;&amp;!f.isFunction(b)&amp;&amp;b};d.duration=f.fx.off?0:typeof d.duration=="number"?d.duration:d.duration in f.fx.speeds?f.fx.speeds[d.duration]:f.fx.speeds._default,d.old=d.complete,d.complete=function(a){f.isFunction(d.old)&amp;&amp;d.old.call(this),d.queue!==!1?f.dequeue(this):a!==!1&amp;&amp;f._unmark(this)};return d},easing:{linear:function(a,b,c,d){return c+d*a},swing:function(a,b,c,d){return(-Math.cos(a*Math.PI)/2+.5)*d+c}},timers:[],fx:function(a,b,c){this.options=b,this.elem=a,this.prop=c,b.orig=b.orig||{}}}),f.fx.prototype={update:function(){this.options.step&amp;&amp;this.options.step.call(this.elem,this.now,this),(f.fx.step[this.prop]||f.fx.step._default)(this)},cur:function(){if(this.elem[this.prop]!=null&amp;&amp;(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop];var a,b=f.css(this.elem,this.prop);return isNaN(a=parseFloat(b))?!b||b==="auto"?0:b:a},custom:function(a,b,c){function g(a){return d.step(a)}var d=this,e=f.fx;this.startTime=cn||co(),this.start=a,this.end=b,this.unit=c||this.unit||(f.cssNumber[this.prop]?"":"px"),this.now=this.start,this.pos=this.state=0,g.elem=this.elem,g()&amp;&amp;f.timers.push(g)&amp;&amp;!cl&amp;&amp;(cl=setInterval(e.tick,e.interval))},show:function(){this.options.orig[this.prop]=f.style(this.elem,this.prop),this.options.show=!0,this.custom(this.prop==="width"||this.prop==="height"?1:0,this.cur()),f(this.elem).show()},hide:function(){this.options.orig[this.prop]=f.style(this.elem,this.prop),this.options.hide=!0,this.custom(this.cur(),0)},step:function(a){var b=cn||co(),c=!0,d=this.elem,e=this.options,g,h;if(a||b&gt;=e.duration+this.startTime){this.now=this.end,this.pos=this.state=1,this.update(),e.animatedProperties[this.prop]=!0;for(g in e.animatedProperties)e.animatedProperties[g]!==!0&amp;&amp;(c=!1);if(c){e.overflow!=null&amp;&amp;!f.support.shrinkWrapBlocks&amp;&amp;f.each(["","X","Y"],function(a,b){d.style["overflow"+b]=e.overflow[a]}),e.hide&amp;&amp;f(d).hide();if(e.hide||e.show)for(var i in e.animatedProperties)f.style(d,i,e.orig[i]);e.complete.call(d)}return!1}e.duration==Infinity?this.now=b:(h=b-this.startTime,this.state=h/e.duration,this.pos=f.easing[e.animatedProperties[this.prop]](this.state,h,0,1,e.duration),this.now=this.start+(this.end-this.start)*this.pos),this.update();return!0}},f.extend(f.fx,{tick:function(){for(var a=f.timers,b=0;b&lt;a.length;++b)a[b]()||a.splice(b--,1);a.length||f.fx.stop()},interval:13,stop:function(){clearInterval(cl),cl=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){f.style(a.elem,"opacity",a.now)},_default:function(a){a.elem.style&amp;&amp;a.elem.style[a.prop]!=null?a.elem.style[a.prop]=(a.prop==="width"||a.prop==="height"?Math.max(0,a.now):a.now)+a.unit:a.elem[a.prop]=a.now}}}),f.expr&amp;&amp;f.expr.filters&amp;&amp;(f.expr.filters.animated=function(a){return f.grep(f.timers,function(b){return a===b.elem}).length});var cs=/^t(?:able|d|h)$/i,ct=/^(?:body|html)$/i;"getBoundingClientRect"in c.documentElement?f.fn.offset=function(a){var b=this[0],c;if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);try{c=b.getBoundingClientRect()}catch(d){}var e=b.ownerDocument,g=e.documentElement;if(!c||!f.contains(g,b))return c?{top:c.top,left:c.left}:{top:0,left:0};var h=e.body,i=cu(e),j=g.clientTop||h.clientTop||0,k=g.clientLeft||h.clientLeft||0,l=i.pageYOffset||f.support.boxModel&amp;&amp;g.scrollTop||h.scrollTop,m=i.pageXOffset||f.support.boxModel&amp;&amp;g.scrollLeft||h.scrollLeft,n=c.top+l-j,o=c.left+m-k;return{top:n,left:o}}:f.fn.offset=function(a){var b=this[0];if(a)return this.each(function(b){f.offset.setOffset(this,a,b)});if(!b||!b.ownerDocument)return null;if(b===b.ownerDocument.body)return f.offset.bodyOffset(b);f.offset.initialize();var c,d=b.offsetParent,e=b,g=b.ownerDocument,h=g.documentElement,i=g.body,j=g.defaultView,k=j?j.getComputedStyle(b,null):b.currentStyle,l=b.offsetTop,m=b.offsetLeft;while((b=b.parentNode)&amp;&amp;b!==i&amp;&amp;b!==h){if(f.offset.supportsFixedPosition&amp;&amp;k.position==="fixed")break;c=j?j.getComputedStyle(b,null):b.currentStyle,l-=b.scrollTop,m-=b.scrollLeft,b===d&amp;&amp;(l+=b.offsetTop,m+=b.offsetLeft,f.offset.doesNotAddBorder&amp;&amp;(!f.offset.doesAddBorderForTableAndCells||!cs.test(b.nodeName))&amp;&amp;(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),e=d,d=b.offsetParent),f.offset.subtractsBorderForOverflowNotVisible&amp;&amp;c.overflow!=="visible"&amp;&amp;(l+=parseFloat(c.borderTopWidth)||0,m+=parseFloat(c.borderLeftWidth)||0),k=c}if(k.position==="relative"||k.position==="static")l+=i.offsetTop,m+=i.offsetLeft;f.offset.supportsFixedPosition&amp;&amp;k.position==="fixed"&amp;&amp;(l+=Math.max(h.scrollTop,i.scrollTop),m+=Math.max(h.scrollLeft,i.scrollLeft));return{top:l,left:m}},f.offset={initialize:function(){var a=c.body,b=c.createElement("div"),d,e,g,h,i=parseFloat(f.css(a,"marginTop"))||0,j="&lt;div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;";f.extend(b.style,{position:"absolute",top:0,left:0,margin:0,border:0,width:"1px",height:"1px",visibility:"hidden"}),b.innerHTML=j,a.insertBefore(b,a.firstChild),d=b.firstChild,e=d.firstChild,h=d.nextSibling.firstChild.firstChild,this.doesNotAddBorder=e.offsetTop!==5,this.doesAddBorderForTableAndCells=h.offsetTop===5,e.style.position="fixed",e.style.top="20px",this.supportsFixedPosition=e.offsetTop===20||e.offsetTop===15,e.style.position=e.style.top="",d.style.overflow="hidden",d.style.position="relative",this.subtractsBorderForOverflowNotVisible=e.offsetTop===-5,this.doesNotIncludeMarginInBodyOffset=a.offsetTop!==i,a.removeChild(b),f.offset.initialize=f.noop},bodyOffset:function(a){var b=a.offsetTop,c=a.offsetLeft;f.offset.initialize(),f.offset.doesNotIncludeMarginInBodyOffset&amp;&amp;(b+=parseFloat(f.css(a,"marginTop"))||0,c+=parseFloat(f.css(a,"marginLeft"))||0);return{top:b,left:c}},setOffset:function(a,b,c){var d=f.css(a,"position");d==="static"&amp;&amp;(a.style.position="relative");var e=f(a),g=e.offset(),h=f.css(a,"top"),i=f.css(a,"left"),j=(d==="absolute"||d==="fixed")&amp;&amp;f.inArray("auto",[h,i])&gt;-1,k={},l={},m,n;j?(l=e.position(),m=l.top,n=l.left):(m=parseFloat(h)||0,n=parseFloat(i)||0),f.isFunction(b)&amp;&amp;(b=b.call(a,c,g)),b.top!=null&amp;&amp;(k.top=b.top-g.top+m),b.left!=null&amp;&amp;(k.left=b.left-g.left+n),"using"in b?b.using.call(a,k):e.css(k)}},f.fn.extend({position:function(){if(!this[0])return null;var a=this[0],b=this.offsetParent(),c=this.offset(),d=ct.test(b[0].nodeName)?{top:0,left:0}:b.offset();c.top-=parseFloat(f.css(a,"marginTop"))||0,c.left-=parseFloat(f.css(a,"marginLeft"))||0,d.top+=parseFloat(f.css(b[0],"borderTopWidth"))||0,d.left+=parseFloat(f.css(b[0],"borderLeftWidth"))||0;return{top:c.top-d.top,left:c.left-d.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||c.body;while(a&amp;&amp;!ct.test(a.nodeName)&amp;&amp;f.css(a,"position")==="static")a=a.offsetParent;return a})}}),f.each(["Left","Top"],function(a,c){var d="scroll"+c;f.fn[d]=function(c){var e,g;if(c===b){e=this[0];if(!e)return null;g=cu(e);return g?"pageXOffset"in g?g[a?"pageYOffset":"pageXOffset"]:f.support.boxModel&amp;&amp;g.document.documentElement[d]||g.document.body[d]:e[d]}return this.each(function(){g=cu(this),g?g.scrollTo(a?f(g).scrollLeft():c,a?c:f(g).scrollTop()):this[d]=c})}}),f.each(["Height","Width"],function(a,c){var d=c.toLowerCase();f.fn["inner"+c]=function(){var a=this[0];return a&amp;&amp;a.style?parseFloat(f.css(a,d,"padding")):null},f.fn["outer"+c]=function(a){var b=this[0];return b&amp;&amp;b.style?parseFloat(f.css(b,d,a?"margin":"border")):null},f.fn[d]=function(a){var e=this[0];if(!e)return a==null?null:this;if(f.isFunction(a))return this.each(function(b){var c=f(this);c[d](a.call(this,b,c[d]()))});if(f.isWindow(e)){var g=e.document.documentElement["client"+c],h=e.document.body;return e.document.compatMode==="CSS1Compat"&amp;&amp;g||h&amp;&amp;h["client"+c]||g}if(e.nodeType===9)return Math.max(e.documentElement["client"+c],e.body["scroll"+c],e.documentElement["scroll"+c],e.body["offset"+c],e.documentElement["offset"+c]);if(a===b){var i=f.css(e,d),j=parseFloat(i);return f.isNaN(j)?i:j}return this.css(d,typeof a=="string"?a:a+"px")}}),a.jQuery=a.$=f})(window);

    </script>
      <script language="javascript">
        function getWarName(){
          var href = document.location.href;
          var urlParts = href.split("/");
          var warName = null;
          if( urlParts[3] != "admin" ){
            warName = urlParts[3];
          }

          return warName;
        }
        function configurePagePaths(){
          var warName = getWarName();
          var servletPath = "/sif/OnDemandEchoInvokerServlet";
          var resultsPagePath = "/admin/v3console/ValidateInternals?component=OnDemandEchoInvokerResults";
          var configurationsPage = "/admin/v3console/ViewConfigCategoryXml?id=com.ebay.soa.client.EchoService.InvokerConfigurations";
          if( warName != null ){
            servletPath = "/" + warName + servletPath;
            resultsPagePath = "/" + warName + resultsPagePath;
            configurationsPage = "/" + warName + configurationsPage;
          }


          var pathInfo = {};
          pathInfo['SERVLET_PATH'] = servletPath;
          pathInfo['RESULTS_PAGE_PATH'] = resultsPagePath;
          pathInfo['CONFIGURATIONS_PAGE_PATH'] = configurationsPage;

          window['EBAY_SOA_ECHO_PATH_INFO'] = pathInfo;
        }
        function getServletPath(){
          return window['EBAY_SOA_ECHO_PATH_INFO']['SERVLET_PATH'];
        }
        function getServletPathToSubmitBatch() {
          return getServletPath() + "?operation=submitBatch"
        }
        function getResultsPagePath(){
          return window['EBAY_SOA_ECHO_PATH_INFO']['RESULTS_PAGE_PATH'];
        }
        function getConfigurationsPagePath(){
          return window['EBAY_SOA_ECHO_PATH_INFO']['CONFIGURATIONS_PAGE_PATH'];
        }
        function redirectToResultsPage(){
          document.location.href = getResultsPagePath();
        }
        function setConfigurationsPageHref(){
          $("#lnkShowConfigurations").attr("href", getConfigurationsPagePath() );
        }
        function submitEchoOnvocationRequest(){


          $.ajax(
            {
              url:getServletPathToSubmitBatch(),
              type:"POST",
              data:"",
              success:function(result){
                redirectToResultsPage();
              },
              dataType:"text"
            }
          );

        }

        function windowOnloadHandler(){
          $("#btnOnDemandInvoker").click(submitEchoOnvocationRequest);
          $("#btnShowResults").click(redirectToResultsPage);

          configurePagePaths();
          setConfigurationsPageHref();
        }
        window.onload=windowOnloadHandler;
        </script>
    </head>
    <xsl:apply-templates select="InvokerOptions"/>
  </xsl:template>

  <xsl:template match="InvokerOptions">

    <br/>
    <br/>
    <table>
      <tr>
        <td>
          <span>
            <a class="show-bean-config" id="lnkShowConfigurations" href="javascript:void(0)">Invoker Bean Configurations</a>
          </span>
        </td>
      </tr>
    </table>
    <br/>
    <br/>
    <table class="echo-invoker-table">
    <tr>
      <td colspan="1" class="echo-invoker-table-header" align="right">
        HostNames To Be Invoked
      </td>
      <td colspan="3" class="echo-invoker-table-value">
        <xsl:value-of select="ServiceLocations"/>
      </td>
    </tr>
    <tr>
      <td colspan="1" class="echo-invoker-table-header" align="right">
        Binding Formats
      </td>
      <td colspan="3" class="echo-invoker-table-value">
        <xsl:value-of select="BindingFormats"/>
      </td>
    </tr>
    <tr>
      <td colspan="1" class="echo-invoker-table-header" align="right">
        Payload Sizes in kb
      </td>
      <td colspan="3" class="echo-invoker-table-value">
        <xsl:value-of select="PayloadSizes"/>
      </td>
    </tr>
    <tr>
      <td colspan="1" class="echo-invoker-table-header" align="right">
        GZip Compression Used?
      </td>
      <td colspan="3" class="echo-invoker-table-value">
        <xsl:value-of select="GZipCompression"/>
      </td>
    </tr>

    </table>
    <table>
    <tr>
    <td colspan="2" width="400px">
      <div/>
    </td>
    <td align="right">

      <span class="invoke-btn-span">
        <a id="btnOnDemandInvoker" class="invoke-btn-a" href="javascript:void(0)">Invoke Now</a>
      </span>
    </td>
    <td align="left">

      <span class="invoke-btn-span">
        <a id="btnShowResults" class="invoke-btn-a" href="javascript:void(0)">Show Results</a>
      </span>
    </td>
    </tr>
    </table>
  </xsl:template>






    <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'RestClientBrowser']">
        <xsl:apply-templates select="RestClientBrowser_Root"/>
    </xsl:template>

    <xsl:template match="Error">
        <xsl:param name="errorColSpan"/>
        <td bgcolor="#D02090" colspan="{$errorColSpan}">
            <pre>
                <font color="#FFFFFF">
                    <xsl:value-of select="."/>
                </font>
            </pre>
        </td>
    </xsl:template>

    <xsl:template match="RestClientBrowser_Root">
      <div class="page_title">Rest Client Browser</div>
      <table border="0" width="100%">
        <tr>
           <xsl:apply-templates select="Error">
            <xsl:with-param name="errorColSpan">1</xsl:with-param>
          </xsl:apply-templates>
        </tr>
      </table>
      <table id="rest_client_browser" border="1" class="display componentTable">
        <thead>
           <tr>
            <th width="45%">Client Name</th>
            <th width="45%">Endpoint</th>
            <th width="10%">Status</th>
          </tr>
        </thead>
         <tbody>
          <xsl:apply-templates select="RestClient" mode="list"/>
        </tbody>
      </table>
    </xsl:template>

    <xsl:template match="RestClient" mode="list">
      <tr id="{@name}_row">
        <td><xsl:value-of select="@name"/></td>
        <td><xsl:value-of select="component[@name='endpoint']"/></td>
        <td><xsl:value-of select="component[@name='status']"/></td>
      </tr>
    </xsl:template>




    <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'SOAClientBrowser' or @name = 'SOAServerBrowser']">
        <xsl:apply-templates select="ClientServiceBrowser"/>
        <xsl:apply-templates select="ServerServiceBrowser"/>
    </xsl:template>

    <xsl:template match="Error">
        <div class="warnings_wrapper">
            <ul>
                <li><xsl:value-of select="."/></li>
            </ul>
        </div>
    </xsl:template>

    <xsl:template match="ClientServiceBrowser">
        <xsl:call-template name="CreateServiceBrowserHeader">
            <xsl:with-param name="headerTitle">Client Service Browser</xsl:with-param>
            <xsl:with-param name="maxColSpan">4</xsl:with-param>
        </xsl:call-template>
        <table id="ClientServiceBrowserTable" border="1" width="100%" class="display componentTable">
            <thead>
                <tr>
                    <th>Client Name</th>
                    <th>Service UID</th>
                    <th>URL</th>
                    <th>Status</th>
                    <th>Interface</th>
                </tr>
            </thead>
            <tbody>
                <xsl:if test="Error">
                    <tr>
                        <td><xsl:apply-templates select="Error"/></td>
                        <td> </td><td> </td><td> </td>
                    </tr>
                </xsl:if>
                <xsl:apply-templates select="ClientServiceDesc"/>
            </tbody>
        </table>
    </xsl:template>

    <xsl:template name="RenderVersionName">
            <xsl:param name="versionTitle"/>
            <xsl:param name="versionValue"/>
            <xsl:choose>
                <xsl:when test="$versionValue != '(null)'">
                    <tr>
                        <td><xsl:value-of select="$versionTitle"/>:</td>
                        <td style="font-weight: bold">
                            <xsl:value-of select="$versionValue"/>
                        </td>
                    </tr>
                </xsl:when>
            </xsl:choose>
    </xsl:template>

    <xsl:template name="CreateServiceBrowserHeader">
            <xsl:param name="headerTitle"/>
            <xsl:param name="maxColSpan"/>
            <xsl:variable name="colSpan">
                <xsl:choose>
                    <xsl:when test="@clientVersion != '(null)'">
                        <xsl:value-of select="$maxColSpan - 1"/>
                    </xsl:when>
                    <xsl:when test="@serverVersion != '(null)'">
                        <xsl:value-of select="$maxColSpan - 1"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="$maxColSpan"/>
                    </xsl:otherwise>
                </xsl:choose>
            </xsl:variable>
        <div class="page_title">
            <xsl:value-of select="$headerTitle"/>
        </div>
        <div class="page_subtitle">
            <xsl:choose>
                <xsl:when test="$maxColSpan != $colSpan">
                        <table align="left">
                            <xsl:call-template name="RenderVersionName">
                                <xsl:with-param name="versionTitle">SOA Client Version</xsl:with-param>
                                <xsl:with-param name="versionValue" select="@clientVersion"/>
                            </xsl:call-template>
                            <xsl:call-template name="RenderVersionName">
                                <xsl:with-param name="versionTitle">SOA Server Version</xsl:with-param>
                                <xsl:with-param name="versionValue" select="@serverVersion"/>
                            </xsl:call-template>
                        </table>
                </xsl:when>
                <xsl:otherwise>
                </xsl:otherwise>
            </xsl:choose>
        </div>
    </xsl:template>

    <xsl:template match="ServerServiceBrowser">
            <xsl:call-template name="CreateServiceBrowserHeader">
                <xsl:with-param name="headerTitle">Server Service Browser</xsl:with-param>
                <xsl:with-param name="maxColSpan">3</xsl:with-param>
            </xsl:call-template>

        <table id="ServerServiceBrowserTable" border="1" width="100%" class="display componentTable">
           <thead>
            <tr>
                <th>Service Name</th>
                <th>Service UID</th>
                <th>Status</th>
                <th>Interface</th>
                <th>Impl</th>
              </tr>
           </thead>
           <tbody>
            <xsl:if test="Error">
                <tr>
                    <td><xsl:apply-templates select="Error"/></td>
                    <td> </td><td> </td><td> </td><td> </td>
                </tr>
            </xsl:if>
            <xsl:apply-templates select="ServerServiceDesc"/>
        </tbody>
        </table>
    </xsl:template>

    <xsl:template match="ClientServiceDesc">
        <xsl:variable name="trClass">
            <xsl:call-template name="SelectStatusColor"/>
        </xsl:variable>

        <tr class="{$trClass}">
            <td><a href="/admin/v3console/ValidateInternals?component=SOAClientBrowser&amp;forceXml=true&amp;detail={@name}"><xsl:value-of select="@name"/></a></td>

            <xsl:choose>
                <xsl:when test="Error">
                    <td><xsl:apply-templates select="Error"/></td>
                    <td> </td><td> </td><td> </td>
                </xsl:when>
                <xsl:otherwise>
                    <td><xsl:value-of select="qname"/></td>
                    <td><a href="{url}?X-EBAY-SOA-SERVICE-NAME={@admin-name}&amp;X-EBAY-SOA-OPERATION-NAME=getServiceVersion"><xsl:value-of select="url"/></a></td>
                    <td><xsl:call-template name="RenderStatusText"/></td>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:call-template name="RenderBaseServiceDesc"/>
        </tr>
    </xsl:template>

    <xsl:template match="ServerServiceDesc">
        <xsl:variable name="trClass">
            <xsl:call-template name="SelectStatusColor"/>
        </xsl:variable>

        <tr class="{$trClass}">
            <td><a href="/admin/v3console/ValidateInternals?component=SOAServerBrowser&amp;forceXml=true&amp;detail={@name}"><xsl:value-of select="@name"/></a></td>

            <xsl:choose>
                <xsl:when test="Error">
                    <td><xsl:apply-templates select="Error"/></td>
                    <td> </td><td> </td><td> </td>
                </xsl:when>
                <xsl:otherwise>
                    <td><xsl:value-of select="qname"/></td>
                    <td><xsl:call-template name="RenderStatusText"/></td>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:call-template name="RenderBaseServiceDesc"/>
             <xsl:choose>
                 <xsl:when test="impl-factory-class != '(null)'">
                     <td>Factory: <xsl:value-of select="impl-factory-class"/></td>
                 </xsl:when>
                 <xsl:otherwise>
                     <td><xsl:value-of select="impl-class"/></td>
                 </xsl:otherwise>
             </xsl:choose>
        </tr>
    </xsl:template>

    <xsl:template name="RenderBaseServiceDesc">
        <td>
        <xsl:choose>
            <xsl:when test="interface-class"><xsl:value-of select="interface-class"/></xsl:when>
            <xsl:otherwise>N/A</xsl:otherwise>
        </xsl:choose>
        </td>
    </xsl:template>

    <xsl:template name="SelectStatusColor">
            <xsl:choose>
                <xsl:when test="@is-down='true'">
                    <xsl:text>gadeX</xsl:text>
                </xsl:when>
                <xsl:when test="@is-partial-down='true'">
                    <xsl:text>gradeC</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>gradeA</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
    </xsl:template>

    <xsl:template name="RenderStatusText">
        <xsl:choose>
            <xsl:when test="@is-down='true'">
                <xsl:value-of select="markdown-status"/>
            </xsl:when>
            <xsl:when test="@is-partial-down='true'">Partial Markdown</xsl:when>
            <xsl:otherwise>Up</xsl:otherwise>
        </xsl:choose>
    </xsl:template>


  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'FeatureContingencyStatus']">
    <xsl:apply-templates select="FeatureContingencyStatus"/>
  </xsl:template>
  <xsl:template match="FeatureContingencyStatus">
    <table align="left" border="1" width="50%" cellpadding="3" cellspacing="0" style="font-family:Arial;font-size:14px;">
      <tr>
        <td colspan="4" bgcolor="#FFCC00">
          <H3>
            <CENTER>Feature Contingency Status</CENTER>
          </H3>
        </td>
      </tr>
      <tr>
        <th>Service Id</th>
        <th>Site Id</th>
        <th>Cobrand Id</th>
        <th>Status</th>
      </tr>
      <xsl:for-each select="./ServiceStatus">
        <tr>
          <td>
            <xsl:value-of select="./ServiceId"/>
          </td>
          <td>
            <xsl:value-of select="./SiteId"/>
          </td>
          <td>
            <xsl:value-of select="./CobrandId"/>
          </td>
          <td>
            <xsl:attribute name="bgcolor">
              <xsl:choose>
                <xsl:when test="./Status = 'true'"><xsl:text>#FFFFFF</xsl:text>
                </xsl:when>
                <xsl:otherwise><xsl:text>#FF6633</xsl:text>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:attribute>
            <xsl:choose>
              <xsl:when test="./Status = 'true'">
                Enabled
              </xsl:when>
              <xsl:otherwise>Disabled</xsl:otherwise>
            </xsl:choose>
          </td>
        </tr>
      </xsl:for-each>
    </table>
  </xsl:template>



  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name = 'MarkdownStatus']">
    <xsl:apply-templates select="MarkdownState_Root"/>
  </xsl:template>

  <xsl:template match="MarkdownState_Root">
    <div class="page_title">
    <xsl:choose>
      <xsl:when test="@display_mode='all'">
        Displays complete list of markdown states
      </xsl:when>
      <xsl:when test="@display_mode='admin'">
        Displays list of admin markdown states
      </xsl:when>
      <xsl:when test="@display_mode='admin_and_alerts'">
        Displays list of admin and alert markdown states
      </xsl:when>
      <xsl:otherwise>
        Displays list of alert markdown states
      </xsl:otherwise>
    </xsl:choose>
    </div>
    <div class="page_subtitle">
    <a href="/admin/v3console/ValidateInternals?component=MarkdownStatus">Alert States</a> /
    <a href="/admin/v3console/ValidateInternals?component=MarkdownStatus&amp;admin">Admin States</a> /
    <a href="/admin/v3console/ValidateInternals?component=MarkdownStatus&amp;admin_and_alerts">Admin and Alert States</a> /
    <a href="/admin/v3console/ValidateInternals?component=MarkdownStatus&amp;all">All States</a>
    </div>
    <div class="space20v"/>
    <xsl:apply-templates select="MarkdownState_Subsystem"/>
  </xsl:template>

  <xsl:template match="MarkdownState_Subsystem">
    <xsl:variable name="subsystemName"><xsl:value-of select="@name"/></xsl:variable>
      <div id="{$subsystemName}_t_title" class="table_title">Markdown Status for <xsl:value-of select="displayName"/> ({$subsystemName})</div>
    <table border="1" width="100%" class="display componentTable" id="{$subsystemName}_t">
         <thead>
      <tr>
        <th>ID</th>
        <th>Status</th>
        <th>Reason</th>
        <th>Update Time</th>
        <th>Missed Calls</th>
      </tr>
     </thead>
     <tbody>
      <xsl:apply-templates select="MarkdownState"/>
     </tbody>
    </table>
    <br/>
  </xsl:template>

  <xsl:template match="MarkdownState">
    <xsl:variable name="dsBgColor">
      <xsl:choose>
        <xsl:when test="@program_alert='true'">
          <xsl:text>gradeC</xsl:text>
        </xsl:when>
        <xsl:when test="@alert='true'">
          <xsl:text>#gradeX</xsl:text>
        </xsl:when>
        <xsl:otherwise>
          <xsl:text>#gradeA</xsl:text>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:variable>

    <tr class="{$dsBgColor}">
      <td><xsl:value-of select="@id"/></td>
      <td align="center"><xsl:value-of select="status"/></td>
      <td align="center"><xsl:value-of select="reason"/></td>
      <td align="center"><xsl:choose>
        <xsl:when test="Attrs/last_status_start_time/.">
          <xsl:value-of select="Attrs/last_status_start_time"/>
        </xsl:when>
        <xsl:otherwise>N/A</xsl:otherwise>
      </xsl:choose></td>
      <td align="center"><xsl:choose>
        <xsl:when test="Attrs/missed_calls/.">
          <xsl:value-of select="Attrs/missed_calls"/>
        </xsl:when>
        <xsl:otherwise>N/A</xsl:otherwise>
      </xsl:choose></td>
    </tr>
  </xsl:template>


  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name='WebRes Component Status']">
    <a name="{@name}"/>
    <br/>
    <xsl:apply-templates select="WebResStatus"/>
    <br/>
    <br/>
    <br/>
    <br/>
  </xsl:template>
  <xsl:template match="WebResStatus">
    <table border="1">
      <tr VALIGN="MIDDLE" ALIGN="CENTER">
        <td colspan="2" bgcolor="#FFCC00">
          <H3>
            <B>App Properties</B>
          </H3>
        </td>
      </tr>
      <tr>
        <td>AppID:</td>
        <td><xsl:value-of select="@appId"/></td>
      </tr>
      <tr>
      <td>AppVersion:</td>
      <td><xsl:value-of select="@appVersion"/></td>
    </tr>
      <tr>
      <td>ContextPath:</td>
      <td><xsl:value-of select="@contextPath"/></td>
    </tr>
      <tr>
      <td>WarRoot:</td>
      <td><xsl:value-of select="@warRoot"/></td>
    </tr>
    <tr VALIGN="MIDDLE" ALIGN="CENTER">
      <td colspan="2" bgcolor="#FFCC00">
        <H3>
          <B>Resource Properties</B>
        </H3>
      </td>
    </tr>
    <tr>
      <td>Image Base:</td>
      <td><xsl:value-of select="@imgBase"/></td>
    </tr>
    <tr>
      <td>Js Base:</td>
      <td><xsl:value-of select="@jsBase"/></td>
    </tr>
    <tr>
      <td>Css Base:</td>
      <td><xsl:value-of select="@cssBase"/></td>
    </tr>
    <tr>
      <td>Default Js Slot Id:</td>
      <td><xsl:value-of select="@defaultJs"/></td>
    </tr>
    <tr>
      <td>Default Css Slot Id:</td>
      <td><xsl:value-of select="@defaultCss"/></td>
    </tr>
    <tr>
      <td>Referenced Wars:</td>
      <td><xsl:value-of select="@referenecedWars"/></td>
    </tr>
    <tr>
      <td>Resource Css Profile:</td>
      <td><xsl:value-of select="@resourceCssProfile"/></td>
    </tr>
    <tr>
      <td>Resource Js Profile:</td>
      <td><xsl:value-of select="@resourceJsProfile"/></td>
    </tr>
    <tr>
      <td>Resource Variations:</td>
      <td><xsl:apply-templates select="ResourceVariations"/></td>
    </tr>
    <tr>
      <td>Resource Variation Config:</td>
      <td><xsl:apply-templates select="ResourceVariationConfig"/></td>
    </tr>
    <tr>
      <td>Resource Bundles:</td>
      <td><xsl:apply-templates select="ResourceBundles"/></td>
    </tr>
    <tr>
      <td>Resource Bundle Enabled:</td>
      <td><xsl:value-of select="@resourceBundleEnabled"/></td>
    </tr>
    <tr>
      <td>Excluded Resource Bundles:</td>
      <td><xsl:value-of select="@excludedResourceBundles"/></td>
    </tr>
    <tr VALIGN="MIDDLE" ALIGN="CENTER">
      <td colspan="2" bgcolor="#FFCC00">
        <H3>
          <B>Cached Resources</B>
        </H3>
      </td>
    </tr>
    <tr>
      <td>Local Resources:</td>
      <td><xsl:apply-templates select="LocalResources"/></td>
    </tr>
      <tr>
        <td>Shared Resources:</td>
        <td><xsl:apply-templates select="SharedResources"/></td>
      </tr>
      <tr>
        <td>Global Pics Resources:</td>
        <td><xsl:apply-templates select="PicsResources"/></td>
      </tr>
      <tr>
        <td>Global Pages Resources:</td>
        <td><xsl:apply-templates select="PagesResources"/></td>
      </tr>
  </table>
  <br/>
  <br/>
  <br/>
  <br/>
  </xsl:template>
  <xsl:template match="ResourceVariations">
    <xsl:apply-templates select="ResourceVariationRule"/><br/>
  </xsl:template>
  <xsl:template match="ResourceVariationRule">
    <xsl:value-of select="@key"/> : <xsl:value-of select="@value"/>
  </xsl:template>
  <xsl:template match="ResourceVariationConfig">
    <table border="0">
      <xsl:apply-templates select="ResourceVariationItem"/>
    </table>
  </xsl:template>
  <xsl:template match="ResourceVariationItem">
    <tr><td colspan="2">&lt;resource_variation name="<xsl:value-of select="@variationName"/>"&gt;</td></tr>

      <xsl:apply-templates select="ResourceVariationRuleItem"/>
    <tr><td colspan="2">&lt;/resource_variation&gt;</td></tr>
  </xsl:template>
  <xsl:template match="ResourceVariationRuleItem">
    <tr>
      <td width="5%"> </td>
      <td>&lt;variation <xsl:value-of select="@varName"/>="<xsl:value-of select="@varValue"/>"&gt;<xsl:value-of select="@ruleValue"/>&lt;/variation&gt;</td>
    </tr>
  </xsl:template>
  <xsl:template match="LocalResources">
    <table border="0">
      <xsl:apply-templates select="ResourceUrn"/>
    </table>
  </xsl:template>
  <xsl:template match="ResourceUrn">
    <tr>
      <td>
      <xsl:value-of select="@urn"/>
      </td>
    </tr>
  </xsl:template>
  <xsl:template match="SharedResources">
    <table border="0">
      <xsl:apply-templates select="ResourceUrn"/>
    </table>
  </xsl:template>
  <xsl:template match="PicsResources">
    <table border="0">
      <xsl:apply-templates select="ResourceUrn"/>
    </table>
  </xsl:template>
  <xsl:template match="PagesResources">
    <table border="0">
      <xsl:apply-templates select="ResourceUrn"/>
    </table>
  </xsl:template>
  <xsl:template match="ResourceBundles">
    <table border="0" width="100%">
      <xsl:apply-templates select="ResourceBundle"/>
    </table>
  </xsl:template>
  <xsl:template match="ResourceBundle">
    <tr>
      <td colspan="2">&lt;bundle id="<xsl:value-of select="@id"/>"&gt;</td>
    </tr>
    <xsl:apply-templates select="ResourceItem"/>
    <tr>
      <td colspan="2">&lt;/bundle&gt;</td>
    </tr>
  </xsl:template>
  <xsl:template match="ResourceItem">
    <tr>
      <td width="5%"> </td>
      <td>&lt;resource urn="<xsl:value-of select="@urn"/>" /&gt;</td>
    </tr>
  </xsl:template>




<xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="config">
  <xsl:value-of select="@id"/><xsl:if test="position() != last()"><xsl:text>,</xsl:text></xsl:if>
</xsl:template>

<xsl:template match="Component[@name = 'RaptorConfig']">


    <style>
        body {
            font-family: arial;
            font-size: 10pt;
        }

        .dropdown {
            padding: 3px;
        }

        .navigation, .information {
            padding: 10px;
        }

        .tabs {
            margin: 0;
            padding: 0;
        }

        .tab {
            list-style:none;
            display:inline;
            padding:5px 15px;
            display:inline-block;
            background:#aaa;
            color:#fff;
            text-decoration:none;
            border: 1px solid #ccc;
            border-radius: 5px 5px 0 0;
            position: relative;
            top: 1px;
            cursor: pointer;
            width:6.1em;
        }

        .tab.active {
            background:#fff;
            color:#000;
            border-bottom: 1px solid #fff;
        }

        .tab-view {
            padding: 15px;
            border-style: solid;
            border-color: #ccc;
            border-width: 1px;
            border-radius: 0 0 5px 5px;
            display: none;
        }

        .tab-view.active {
            display: block;
        }

        .tab-view .paragraph {
            padding: 5px;
            border-bottom: 1px dashed #eee;
        }

        .tab-view .paragraph label {
            font-weight: bold;
            color: #aaa;
            display: inline-block;
            width: 10em;
        }
    </style>
    <div class="navigation">
        <select id="domainDropdown" class="dropdown">
            <option class="pseudo" value="">Select Domain ...</option>
        </select>
        <select id="targetDropdown" class="dropdown">
            <option class="pseudo" value="">Select Target ...</option>
        </select>
        <select id="projectDropdown" class="dropdown">
            <option class="pseudo" value="">Select Project ...</option>
        </select>
        <select id="configDropdown" class="dropdown">
            <option class="pseudo" value="">Select Config ...</option>
        </select>
        <select id="versionDropdown" class="dropdown">
            <option class="pseudo" value="">Select Version ...</option>
        </select>
    </div>
    <div class="information">
        <ul class="tabs">
            <li id="details-link" class="tab">Details</li>
            <li id="queries-link" class="tab">Queries</li>
            <li id="ops-link" class="tab">Ops</li>
            <li id="stats-link" class="tab">Statistics</li>
        </ul>
        <div id="details" class="tab-view">
            <div class="paragraph">
                <label>Change Set:</label>
                <span id="changeset"/>
            </div>
            <div class="paragraph">
                <label>Smoke Testing:</label>
                <span id="smoketest"/>
            </div>
            <div class="paragraph">
                <label>Phased Rollout:</label>
                <span id="phasedrollout"/>
            </div>
        </div>
        <div id="queries" class="tab-view">
            <div class="paragraph">
                <label>Keyword:</label><input id="keyword" type="text" value=""/>
            </div>
        </div>
        <div id="ops" class="tab-view">

        </div>
        <div id="stats" class="tab-view">

        </div>
    </div>

    <script type="text/javascript">
    //handle navigations
    var navigations = navigations || [<xsl:apply-templates select="configurations/config"/>];
  </script>

    <script type="text/javascript">



     function query(config, interest){
     var sliceAt = window.location.href.indexOf('?');
     var url = sliceAt &gt;= 0 ? window.location.href.substring(0, sliceAt) : window.location.href;
     if(url[url.length-1] !== '/'){
     url += "/";
     }
     url += "?component=RaptorConfig&amp;view=json&amp;interest="+interest;
     $.each(["domain","target","project","config","version"], function(){
     url += "&amp;" + this + "=" + config[this];
     });
     return url;
     }
/*
    function query(config, interest){
        var sliceAt = window.location.href.lastIndexOf('/');
        var url = sliceAt &gt;= 0 ? window.location.href.substring(0, sliceAt) : window.location.href;
        if(url[url.length-1] !== '/'){
            url += "/";
        }
        $.each(["domain","target","project","config","version"], function(){
            url += config[this] + "/";
        });
        url = url.replace("|", "_") + interest + ".xml";
        return url;
    }
*/
    //all logic inside
    (function(query, navigations){
        function nav(navigations){
            function extractDomain(info){
                return info.substring(info.indexOf("domain:") + "domain:".length, info.indexOf(",target:"));
            }

            function extractTarget(info){
                return info.substring(info.indexOf(",target:") + ",target:".length, info.indexOf(",project:"));
            }

            function extractProject(info){
                return info.substring(info.indexOf(",project:") + ",project:".length, info.indexOf(",config:"));
            }

            function extractConfig(info){
                return info.substring(info.indexOf(",config:") + ",config:".length, info.indexOf(",releases:"));
            }

            function extractVersion(info){
                return info.substring(info.indexOf(",releases:[") + ",releases:[".length, info.indexOf("]}"));
            }

            var navTable = {};
            $.each(navigations, function(){
                var info = this.info,
                        domain = extractDomain(info),
                        target = extractTarget(info),
                        project = extractProject(info),
                        config = extractConfig(info),
                        version = extractVersion(info);

                navTable[domain] = navTable[domain] || {};
                navTable[domain][target] = navTable[domain][target] || {};
                navTable[domain][target][project] = navTable[domain][target][project] || {};
                navTable[domain][target][project][config] = navTable[domain][target][project][config] || {};
                navTable[domain][target][project][config][version] = navTable[domain][target][project][config][version] || {};
            });

            return navTable;
        }

        var navTable = nav(navigations);

        function queryChangeSet(config){
            return query(config, "changeset");
        }

        function querySmokeTest(config){
            return query(config, "smoketest");
        }

        function queryPhasedRollout(config){
            return query(config, "phasedrollout");
        }

        function queryContexts(config){
            return query(config, "contexts");
        }

        function queryConfig(config, keyword, contexts){
            var q = query(config, "config");
            if(keyword){
                q += q.indexOf('?') &gt;= 0 ? '&amp;' : '?';
                q += "keyword=" + keyword;
                if(contexts){
                    q += "&amp;context=" + JSON.stringify($.map(contexts, function(v, k){
                        return {"key":k, "value":v};
                    }));
                }
            }
            return q;
        }

        function queryOps(config){
            return query(config, "ops");
        }

        function queryStats(config){
            return query(config, "stats");
        }

        function filter(xml, interest){
            return JSON.parse($(xml).find(interest).text());
        }

        var renders = {
            "details" : function(config){

                $.ajax({
                    type:"get",
                    url:queryChangeSet(config),
                    dataType:"html"
                })
                .done(function(data){
                    $("#changeset").text(JSON.stringify(filter(data, "changeset")));
                });

                $.ajax({
                    type:"get",
                    url:querySmokeTest(config),
                    dataType:"html"
                }).done(function(data){
                    $("#smoketest").text(JSON.stringify(filter(data, "smoketest")));
                });

                $.ajax({
                    type:"get",
                    url:queryPhasedRollout(config),
                    dataType:"html"
                }).done(function(data){
                    $("#phasedrollout").text(JSON.stringify(filter(data, "phasedrollout")));
                });
            },

            "queries" : function(config){
                $("#queries .paragraph + .paragraph").detach();

                $.ajax({
                    type:"get",
                    url:queryContexts(config),
                    dataType:"html"
                })
                .done(function(data){
                    $.each(filter(data, "contexts").reverse(), function(){
                        var context = this;
                        $("#queries .paragraph").first().after("&lt;div class='paragraph'&gt;&lt;label&gt;"+context+":&lt;/label&gt;&lt;input id='"+context+"' type='text' value=''&gt;&lt;/div&gt;");
                    });

          $("#queries input[type=text]").unbind();
                    $("#queries input[type=text]").keypress(function(event){
                        if(event.which === 13){//"enter" keypressed
                            $("#queries .paragraph.result").detach();

                            var lookup = {};
                            $("#queries input[type=text]").each(function(){
                                lookup[this.id] = this.value;
                            });

                            var keyword = lookup.keyword;
                            delete lookup.keyword;

                            $.ajax({
                                type:"get",
                                url:queryConfig(config, keyword, lookup),
                                dataType:"html"
                            })
                            .done(function(data){
                                $("#queries .paragraph:last-child").after("&lt;div class='paragraph result'&gt;"+JSON.stringify(filter(data, "config"))+"&lt;/div&gt;");
                            });
                        }
                    });
                });
            },

            "ops": function(config){

                $("#ops .paragraph").detach();

                $.ajax({
                    type:"get",
                    url:queryOps(config),
                    dataType:"html"
                })
                .done(function(data){
                    $("#ops").append("&lt;div class='paragraph'&gt;"+JSON.stringify(filter(data, "ops"))+"&lt;/div&gt;");
                });
            },

            "stats": function(config){

                $("#stats .paragraph").detach();

                $.ajax({
                    type:"get",
                    url:queryStats(config),
                    dataType:"html"
                }).done(function(data){
                    $("#stats").append("&lt;div class='paragraph'&gt;"+JSON.stringify(filter(data, "stats"))+"&lt;/div&gt;");
                });
            }
        };

        $(document).ready(function() {

            $.map(navTable, function(v, k){
                $("#domainDropdown option").after("&lt;option value='"+k+"'&gt;"+k+"&lt;/option&gt;");
            });
            $("#domainDropdown").change(function(event){

                $("#targetDropdown option + option").detach();

                var domain = this.value;
                if(domain.length &gt;= 0){
                    $.map(navTable[domain], function(v, k){
                        $("#targetDropdown option.pseudo").after("&lt;option value='"+k+"'&gt;"+k+"&lt;/option&gt;");
                    });
                    $("#targetDropdown").prop("disabled", false);
                }
            });

            $("#targetDropdown").prop("disabled", true).change(function(event){

                $("#projectDropdown option + option").detach();

                var target = this.value;
                if(target.length &gt;= 0){
                    $.map(navTable[$("#domainDropdown").val()][target], function(v, k){
                        $("#projectDropdown option.pseudo").after("&lt;option value='"+k+"'&gt;"+k+"&lt;/option&gt;");
                    });
                    $("#projectDropdown").prop("disabled", false);
                }
            });

            $("#projectDropdown").prop("disabled", true).change(function(event){

                $("#configDropdown option + option").detach();

                var project = this.value;
                if(project.length &gt;= 0){
                    $.map(navTable[$("#domainDropdown").val()][$("#targetDropdown").val()][project], function(v, k){
                        $("#configDropdown option.pseudo").after("&lt;option value='"+k+"'&gt;"+k+"&lt;/option&gt;");
                    });
                    $("#configDropdown").prop("disabled", false);
                }
            });

            $("#configDropdown").prop("disabled", true).change(function(event){

                $("#versionDropdown option + option").detach();

                var config = this.value;
                if(config.length &gt;= 0){
                    $.map(navTable[$("#domainDropdown").val()][$("#targetDropdown").val()][$("#projectDropdown").val()][config], function(v, k){
                        $("#versionDropdown option.pseudo").after("&lt;option value='"+k+"'&gt;"+k+"&lt;/option&gt;");
                    });
                    $("#versionDropdown").prop("disabled", false);
                }
            });

            $("#versionDropdown").prop("disabled", true).change(function(event){
                if(this.value.length &gt;= 0){
                    var exact = {
                        domain: $("#domainDropdown").val(),
                        target: $("#targetDropdown").val(),
                        project: $("#projectDropdown").val(),
                        config: $("#configDropdown").val(),
                        version: $("#versionDropdown").val()
                    };

                    $.event.trigger({
                        type:"config-selected",
                        message:"config selected",
                        config:exact
                    });
                }
            });

            var exact = null;
            $(document).on("config-selected", function(event){
                exact = event.config;

                $.event.trigger({
                    type:"tab-selected",
                    message:"tab selected",
                    tab:"details"
                });
            });

            $(document).on("tab-selected", function(event){

                if(exact){
                    var tab = event.tab,
                        link = $("#" + tab + "-link"),
                        view = $("#" + tab);

                    $(".tab.active").removeClass("active");
                    $(".tab-view.active").removeClass("active");
                    link.addClass("active");
                    view.addClass("active");
                    renders[tab](exact);
                }
            });

            $.each(["details", "queries", "ops", "stats"], function(){
                var each = this;
                $("#" + each + "-link").click(function(event){
                    $.event.trigger({
                        type:"tab-selected",
                        message:"tab selected",
                        tab:each
                    });
                });
            });
        });
    })(query, navigations);



    </script>



</xsl:template>



  <xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[@name='WebResAdapter Status']">
    <a name="{@name}"/>
    <br/>
    <xsl:apply-templates select="WebResAdapterProperties"/>
    <br/>
    <xsl:apply-templates select="TopResourceAggregation"/>
    <br/>
    <a href="http://resrepo/dashboard">Resource Repo Dashboard</a>
  </xsl:template>
  <xsl:template match="WebResAdapterProperties">
    <table border="1">
      <tr VALIGN="MIDDLE" ALIGN="CENTER">
        <td colspan="2" bgcolor="#D3D6FF">
          <H3>
            <B>ResourceRepo Properties</B>
          </H3>
        </td>
      </tr>
      <xsl:apply-templates select="Heading" mode="two"/>
      <xsl:apply-templates select="Property"/>
    </table>
    <br/>
  </xsl:template>
  <xsl:template match="TopResourceAggregation">
    <table border="1">
      <tr VALIGN="MIDDLE" ALIGN="CENTER">
        <td colspan="2" bgcolor="#D3D6FF">
          <H3>
            <B>Resource Aggregation(Top 50)</B>
          </H3>
        </td>
      </tr>
      <xsl:apply-templates select="Heading" mode="two"/>
      <xsl:apply-templates select="Property"/>
    </table>
    <br/>
  </xsl:template>

<xsl:template xmlns:xsl="http://www.w3.org/1999/XSL/Transform" match="Component[contains(@name, 'RaptorCommandHandlerComponentStatus')]">

  <a name="{@name}"/>
  <table border="1">
  <tr>
      <td colspan="4" bgcolor="#FFCC00">
        <H3><CENTER><B><xsl:value-of select="@name"/></B></CENTER></H3>
      </td>
  </tr>
  <tr bgcolor="#ffffcc">
    <th><center><b>StageId</b></center></th>
    <th><center><b>Handler Name</b></center></th>
    <th><center><b>Handler Class</b></center></th>
    <th><center><b>Handler Position [1-100]</b></center></th>
  </tr>

  <xsl:for-each select="Properties">
    <tr>
      <td><xsl:value-of select="Property[@name = 'StageId']"/></td>
      <td><xsl:value-of select="Property[@name = 'Handler Name']"/></td>
      <td><xsl:value-of select="Property[@name = 'Handler Class']"/></td>
      <td><xsl:value-of select="Property[@name = 'Handler Position']"/></td>
    </tr>
  </xsl:for-each>
  </table>
</xsl:template>

<xsl:template match="Component[@name = 'Service Stats']">
<a name="Component_{position()}"/>
<xsl:variable name="tableId" select="concat('comp_table_', position())"/>
<div id='{$tableId}_title' class="table_title"><xsl:value-of select="@name"/></div>
<table id='{$tableId}' border='1' class="display componentTable">
 <thead>
<tr>
    <xsl:for-each select="Properties[position() = 1]/Property">
        <th><xsl:value-of select="@name" /></th>
    </xsl:for-each>
</tr>
 </thead>
 <tbody>
<xsl:apply-templates select="Properties" mode="metrics"/>
</tbody>
</table>
<div class="space20v"></div>
</xsl:template>

<xsl:template match="Properties" mode="metrics">
<tr>
    <xsl:apply-templates select="Property" mode="single_td"/>
</tr>
</xsl:template>

</xsl:stylesheet>
