'use strict';

const Fs = require('fs');
const express = require('express');
const dashboard = require('hystrix-dashboard');
const Ejs = require('ejs');
const ViUtils = require('./utils');
const Prxy = require('./proxy');

const hystrixApp = express();

const template = Fs.readFileSync(require.resolve('./public/hystrix/index.ejs')).toString('utf8');

// let's make sure we prevent unauthorized access
hystrixApp.use((req, res, next) => {
    if (!ViUtils.allowView(req)) {
        res.status(403).send('ValidateInternals not allowed');
        return;
    }

    next();
});

hystrixApp.use(proxyIfRequested);

dashboard(hystrixApp);

hystrixApp.use('/monitor/services', (req, res) => {
    const workers = [];
    for (var workerNumber = 0; workerNumber < ViUtils.getWorkersNumber(); workerNumber++) {
        workers.push({
            name: workerNumber,
            port: ViUtils.getWorkerPort(workerNumber)
        });
    }
    res.send(Ejs.render(template, {
        workers: workers
    }));
});

// hystrixApp.use('/monitor/services',
//     express.static(require.resolve('./public/hystrix/index.html')));
hystrixApp.use('/global.css', express.static(require.resolve('./public/hystrix/global.css')));

module.exports = hystrixApp;

function proxyIfRequested(req, res, next) {
    // if current port is not 8080 or 8082 and it is non-dev mode,
    // then we already in proxy flow, otherwise we need to do proxies to all workers
    const currentPort = ViUtils.getPort(req);
    if ((currentPort < ViUtils.BASE_PORT ||
    currentPort > ViUtils.BASE_PORT + 20) && req.query.worker) {

        const targetPort = ViUtils.getWorkerPort(req.query.worker);
        const proxy = Prxy.create({
            hostname: 'localhost',
            port: targetPort,
            protocol: 'http:',
            path: '/admin/hystrix'
        });
        // proxy now
        proxy(req, res);
        return;
    }

    next();
}
