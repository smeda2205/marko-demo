'use strict';

var Assert = require('assert');
var subAppMounted = false;
var componentStatus = require('./component-status.js');
var parentApp;
var viApp = require('./app.js');
var ViUtils = require('./utils');
var tryRequire = require('try-require');
var express = tryRequire('express');

// Called from brogan-ebay to establish VI as a subapp
module.exports = {
    // TODO: this should be deprecated in favor of brogan setup
    middleware: function middleware(app) {
        app = app ? app :
            express ? express() : null;
        Assert.ok(app, 'You must provide parent app');
        app.use('/admin', viApp);
        // Capture parentApp so we can later get routes/middleware stack for meta
        parentApp = app;
        // expose worker port for worker specific requests, used for example to profile specific worker
        app.once('start', () => {
            const workerPort = ViUtils.getWorkerPort();
            const workerApp = express();
            // add 404 terminator for VI
            viApp.use((req, res, next) => {
                res.status(404).end();
            });
            workerApp.use('/admin', viApp);
            ViUtils.isPortFree(workerPort, free => {
                if (!free) {
                    console.log(`Failed to connect to worker port ${workerPort}, it is already taken`);
                    return;
                }
                workerApp.listen(workerPort, err => {
                    if (err) {
                        console.log(`Failed to connect to worker port ${workerPort}`, err);
                        return;
                    }
                    console.log(`Listening on worker port ${workerPort}`);
                });
            });

        });
        return app;
    },
    getParentApp: function getParentApp() {
        return parentApp;
    },
    app: viApp, // TODO: brogan ebay should hook this to /admin path explicitly
    register: componentStatus.register,
    componentStatus: componentStatus,
    enableComponentStatus: componentStatus.enableComponentStatus

};
