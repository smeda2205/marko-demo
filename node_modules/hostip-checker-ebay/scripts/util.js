"use strict";

var path = require('path'),
	fs = require('fs'),
  http = require('httpunch'),
  fileSystemCache = path.join(__dirname, '../config/eBayNetworks.json');

function createLocalCacheCopy(callback) {

	http.get('http://authzsvc.staging.qa.ebay.com/authzsvc/api/v1/getacl', function(error, response) {
		if (error) {
			console.log(error);
			//If connection or network error in retrieving the prop file.
			//Ignore the error and proceed further with the backup file
			console.log("Using the backup file for network util config.");
			callback(error, null);
		} else if (!error && response.statusCode === 200) {
				console.log('Fetch complete from Service, writing to properties file');
				try{
					//Try & Parse the response, if Parse fails then DONOT override local copy, use existing copy.
					var parsedResponse = JSON.parse(response.body);
					var tempFileName = fileSystemCache + Math.floor(Math.random()*10000);
					//Write the content to file if its not yet written.
					fs.writeFileSync(tempFileName, response.body);
					fs.renameSync(tempFileName, fileSystemCache);
					callback(null, 'Success');
				} catch(parseError){
					console.log('Error while parsing JSON from Service');
					//Ignore, Do not override existing cache
					callback(parseError, null);
				}
		} else {
			callback(new Error('StatusCode Error'), null);
		}
	});
}

exports.createLocalCacheCopy = createLocalCacheCopy;
