'use strict';

var Querystring = require('querystring');
var ColoDetect = require('colo-detect-inc');
var Objpath = require('object-path');

module.exports = function format(stats, options) {
    var identity = options.identity;
    stats = Objpath(stats);
    return {
        type: 'rest',
        message: {
            'm:resSecs': options.interval ? options.interval/1000 : undefined,
            't:clientId': normalize(identity.clientId),
            't:pool': identity.pool,
            't:service': normalize(identity.service),
            't:Operation': normalize(identity.operation),
            't:dc': ColoDetect.coloDetect(),
            't:env': process.env.NODE_ENV,
            't:interval': options.interval ? options.interval/1000 : undefined,
            'g:HTTPStatusXXXCount': stats.get('statusXXX', 0),
            'g:HTTPStatus4XXCount': stats.get('status4XX', 0),
            'g:HTTPStatus5XXCount': stats.get('status5XX', 0),
            'g:HTTPStatus200Count': stats.get('status200', 0),
            'g:errors': stats.get('errors', 0),
            'g:totalTime': stats.get('totalTime', 0),
            'g:calls': stats.get('calls', 0),
            'g:CallTime99Percentile': stats.get('CallTime99Percentile', 0)
        }
    };
};

module.exports.vi = function vi(stats) {
    stats = Objpath(stats);
    return {
        'StatusXXX': stats.get('statusXXX_total', 0),
        'Status4XX': stats.get('status4XX_total', 0),
        'Status5XX': stats.get('status5XX_total', 0),
        'Status200': stats.get('status200_total', 0),
        'Timeouts': stats.get('timeouts_total', 0),
        'MarshalAvg': stats.get('marshalTime', 0) + 'ms',
        'UnmarshalAvg': stats.get('unmarshalTime', 0) + 'ms',
        'Errors': stats.get('errors_total', 0),
        'Avg': stats.get('totalTime', 0) + 'ms',
        'Max': stats.get('maxTime', 0) + 'ms',
        'Min': stats.get('minTime', 0) + 'ms',
        'Calls': stats.get('calls_total', 0)
    };
};

function normalize(val) {
    return val ? val.replace(/\//, '.') : val;
}
