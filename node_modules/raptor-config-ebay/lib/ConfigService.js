'use strict';

let Provider;

exports = module.exports = function () {
    if (!Provider) {
        // note: no get client here - client should not be cached
        Provider = require('service-client-ebay');
    }

    function createCall(path) {
        return function doCall(query, headers, callback) {
            headers = headers || {};
            headers['Content-Type'] = 'application/json';

            // always get new client with new context
            Provider.context({}).getClient('raptorconfig')
                .request({
                    qs: query,
                    path: path,
                    headers: headers
                })
                .end(function (error, response) {
                    if (error) {
                        callback(error);
                        return;
                    }

                    if (response.statusCode >= 300) {
                        error = new Error('Bad response, statusCode:' +
                            response.statusCode + ', body:' +
                            (Buffer.isBuffer(response.body) ?
                                response.body.toString() : response.body));
                        callback(error);
                        return;
                    }
                    callback(null, response.body);
                });
        };
    }

    return {
        /**
         * callBaseline
         * @param query
         * @param headers
         * @param callback
         */
        getBaseline: createCall('resources/config'),

        /**
         * callChangeSet
         * @param query
         * @param headers
         * @param callback
         */
        getChangeSet: createCall('resources/changeset'),

        /**
         * callLatestChangeSet
         * @param query
         * @param headers
         * @param callback
         */
        getLatestChangeSet: createCall('resources/changesets')
    };
};
