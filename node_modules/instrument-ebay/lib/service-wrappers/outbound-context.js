'use strict';

var objutil = require('objutil');
var requestLocal = require('request-local');
var logger = require('logging-inc').logger('instrument-ebay/service-wrappers/outbound-context');
var asyncwrap = require('instrument-inc/wrappers').asyncwrap;

module.exports = function outboundContext(transport) {

    return asyncwrap(transport, function before(options, next) {

        var req = tryRequest();
        var ebay;
        if (req) {
            ebay = req.ebay;
            options.headers = options.headers || {};
        }
        // add commerce OS headers
        if (ebay) {
            options.headers = options.headers || {};
            var ctx = ebay.outboundContext;
            if (ctx) {
                options.headers = objutil.mixin(ctx, options.headers, {});
            }
            var rlogid = ebay.getRlogId && ebay.getRlogId();
            if (rlogid) {
                options.headers.rlogid = rlogid;
            }
        }

        next(null, options);
    });

};

function tryRequest() {
    try {
        return requestLocal.data.request;
    } catch (e) {
        logger.warn('outbound-context: request-local is not available');
    }

}